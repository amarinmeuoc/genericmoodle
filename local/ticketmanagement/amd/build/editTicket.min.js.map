{"version":3,"file":"editTicket.min.js","sources":["../src/editTicket.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport {add as addToast} from 'core/toast';\nimport {get_string as getString} from 'core/str';\n\nconst url=M.cfg.wwwroot+'/webservice/rest/server.php';\nconst token=document.querySelector('input[name=\"token\"]').value;\nexport const init =() => {\n    \n    const tickets=document.querySelectorAll('.tickets');\n\n    tickets.forEach((node)=>{\n        node.addEventListener('click',(e)=>{\n            showTicketFormPopup(e);\n        })\n    })\n}\n\nconst showTicketFormPopup=(e)=>{\n    e.stopPropagation();\n    const ticketId=e.target.textContent.trim();\n    \n    const modalForm=new ModalForm({\n        formClass: \"\\\\local_ticketmanagement\\\\form\\\\TicketFormPopup\",\n        args: {num_ticket: ticketId},\n        modalConfig: {title: `Ticket details: #${ticketId}`},\n        returnFocus:e.target\n    });\n\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n        //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n        const formElement=e.target;\n        const subcategoryValue = formElement.querySelector('select[name=\"subcategory\"]')?.value;\n        window.console.log(e.detail);\n        if (subcategoryValue) {\n            e.detail.subcategory = subcategoryValue;\n        }\n\n\n        updateTicket(e.detail,token,url);\n    });\n\n    modalForm.addEventListener(modalForm.events.LOADED, (e) => {\n        // Obtener el formulario modal después de que se ha cargado\n        const formElement = e.target;\n    \n        // Usa la función areElementsLoaded para esperar hasta que los selectores estén cargados en el DOM\n        areElementsLoaded('select[name=\"category\"], select[name=\"subcategory\"]', formElement).then((elements) => {\n\n            // Una vez que los selectores están disponibles, los seleccionamos\n            const categorySelect = formElement.querySelector('select[name=\"category\"]');\n            const subcategorySelect = formElement.querySelector('select[name=\"subcategory\"]');\n    \n            // Asegúrate de que ambos selectores existen\n            if (categorySelect && subcategorySelect) {\n                // Añadir un listener para cuando cambie la categoría seleccionada\n                categorySelect.addEventListener('change', (event) => {\n                    const selectedCategory = event.target.value;\n                    window.console.log(`Categoría seleccionada: ${selectedCategory}`);\n    \n                    // Lógica para actualizar las opciones del selector de subcategorías\n                    updateSubcategory(selectedCategory, subcategorySelect,token);\n                });\n            } else {\n                window.console.error('Los selectores de categoría y subcategoría no están disponibles.');\n            }\n            \n        }).catch((error) => {\n            window.console.error('Error al cargar los elementos select:', error);\n        });\n    });\n    modalForm.show();\n}\n\nconst updateTicket = (obj,token,url)=>{\n    let xhr = new XMLHttpRequest();\n      \n      //Se prepara el objeto a enviar\n      const formData= new FormData();\n      formData.append('wstoken',token);\n      formData.append('wsfunction', 'local_ticketmanagement_edit_ticket');\n      formData.append('moodlewsrestformat', 'json');\n      formData.append('params[0][ticketid]',obj.ticketid);\n      formData.append('params[0][fileid]',obj.attachments);\n      formData.append('params[0][cancelled]',obj.cancelled);\n      formData.append('params[0][state]',obj.hiddenstate);\n      formData.append('params[0][priority]',obj.priority);\n      formData.append('params[0][closed]',obj.close);\n      formData.append('params[0][category]',obj.subcategory);\n  \n      xhr.open('POST',url,true);\n      xhr.send(formData);\n  \n      xhr.onload = (ev)=> {\n          reqHandlerUpdateTicket(xhr);\n      }\n  \n      xhr.onerror = ()=> {\n          rejectAnswer(xhr);\n      }\n  \n}\n\nconst updateSubcategory= (categoryid,subcategorySelect, token)=>{\n    let xhr = new XMLHttpRequest();\n      \n      //Se prepara el objeto a enviar\n      const formData= new FormData();\n      formData.append('wstoken',token);\n      formData.append('wsfunction', 'local_ticketmanagement_load_subcategories');\n      formData.append('moodlewsrestformat', 'json');\n      formData.append('params[0][categoryid]',categoryid);\n  \n      xhr.open('POST',url,true);\n      xhr.send(formData);\n  \n      xhr.onload = (ev)=> {\n          reqHandlerLoadSubcategories(xhr, subcategorySelect);\n      }\n  \n      xhr.onerror = ()=> {\n          rejectAnswer(xhr);\n      }\n  }\n\n  const reqHandlerUpdateTicket=(xhr)=>{\n    if (xhr.readyState=== 4 && xhr. status === 200){\n        if (xhr.response){\n            const response=JSON.parse(xhr.response);\n            \n            if (response){\n              window.console.log(response.ticket);\n              const ticket=response.ticket;\n              updateTemplate(ticket);\n            }\n            \n        }\n      }\n  }\n\n  const updateTemplate=(ticket)=>{\n    const fila = document.querySelector(`#${ticket.ticketid}`);\n    const state = fila.querySelector('td:nth-child(5)');\n    const priority = fila.querySelector('td:nth-child(7)');\n    state.textContent=ticket.state;\n    priority.textContent=ticket.priority;\n\n  }\n\n  const reqHandlerLoadSubcategories=(xhr,subcategorySelect)=>{\n    if (xhr.readyState=== 4 && xhr. status === 200){\n      if (xhr.response){\n          const response=JSON.parse(xhr.response);\n          const selsubcategory=subcategorySelect;\n          if (response){\n            selsubcategory.innerHTML='';\n            const optionsSubcategories = response;\n            \n  \n            optionsHTML='';\n            optionsSubcategories.forEach(optionData=>{\n                  optionsHTML += `<option value=\"${optionData.id}\">${optionData.subcategory}</option>`;\n            })\n            selsubcategory.innerHTML = optionsHTML;\n          }\n          \n      }\n    }\n  }\n\nconst areElementsLoaded = (selector, parentElement = document) => {\n    return new Promise((resolve) => {\n        const checkElements = () => {\n            const elements = parentElement.querySelectorAll(selector);\n            if (elements.length > 0 && Array.from(elements).every(elem => elem !== null)) {\n                resolve(elements);\n            } else {\n                requestAnimationFrame(checkElements);\n            }\n        };\n        checkElements();\n    });\n};\n"],"names":["url","M","cfg","wwwroot","token","document","querySelector","value","querySelectorAll","forEach","node","addEventListener","e","showTicketFormPopup","stopPropagation","ticketId","target","textContent","trim","modalForm","ModalForm","formClass","args","num_ticket","modalConfig","title","returnFocus","events","FORM_SUBMITTED","subcategoryValue","_formElement$querySel","window","console","log","detail","subcategory","updateTicket","LOADED","formElement","areElementsLoaded","then","elements","categorySelect","subcategorySelect","event","selectedCategory","updateSubcategory","error","catch","show","obj","xhr","XMLHttpRequest","formData","FormData","append","ticketid","attachments","cancelled","hiddenstate","priority","close","open","send","onload","ev","reqHandlerUpdateTicket","onerror","rejectAnswer","categoryid","reqHandlerLoadSubcategories","readyState","status","response","JSON","parse","ticket","updateTemplate","fila","state","selsubcategory","innerHTML","optionsHTML","optionData","id","selector","parentElement","Promise","resolve","checkElements","length","Array","from","every","elem","requestAnimationFrame"],"mappings":"ybAKMA,IAAIC,EAAEC,IAAIC,QAAQ,8BAClBC,MAAMC,SAASC,cAAc,uBAAuBC,oBACvC,KAEDF,SAASG,iBAAiB,YAEhCC,SAASC,OACbA,KAAKC,iBAAiB,SAASC,IAC3BC,oBAAoBD,gBAK1BC,oBAAqBD,IACvBA,EAAEE,wBACIC,SAASH,EAAEI,OAAOC,YAAYC,OAE9BC,UAAU,IAAIC,mBAAU,CAC1BC,UAAW,kDACXC,KAAM,CAACC,WAAYR,UACnBS,YAAa,CAACC,iCAA2BV,WACzCW,YAAYd,EAAEI,SAGlBG,UAAUR,iBAAiBQ,UAAUQ,OAAOC,gBAAiBhB,oCAGnDiB,+CADYjB,EAAEI,OACiBV,cAAc,sEAA1BwB,sBAAyDvB,MAClFwB,OAAOC,QAAQC,IAAIrB,EAAEsB,QACjBL,mBACAjB,EAAEsB,OAAOC,YAAcN,kBAI3BO,aAAaxB,EAAEsB,OAAO9B,MAAMJ,QAGhCmB,UAAUR,iBAAiBQ,UAAUQ,OAAOU,QAASzB,UAE3C0B,YAAc1B,EAAEI,OAGtBuB,kBAAkB,sDAAuDD,aAAaE,MAAMC,iBAGlFC,eAAiBJ,YAAYhC,cAAc,2BAC3CqC,kBAAoBL,YAAYhC,cAAc,8BAGhDoC,gBAAkBC,kBAElBD,eAAe/B,iBAAiB,UAAWiC,cACjCC,iBAAmBD,MAAM5B,OAAOT,MACtCwB,OAAOC,QAAQC,sCAA+BY,mBAG9CC,kBAAkBD,iBAAkBF,kBAAkBvC,UAG1D2B,OAAOC,QAAQe,MAAM,uEAG1BC,OAAOD,QACNhB,OAAOC,QAAQe,MAAM,wCAAyCA,aAGtE5B,UAAU8B,QAGRb,aAAe,CAACc,IAAI9C,MAAMJ,WACxBmD,IAAM,IAAIC,qBAGNC,SAAU,IAAIC,SACpBD,SAASE,OAAO,UAAUnD,OAC1BiD,SAASE,OAAO,aAAc,sCAC9BF,SAASE,OAAO,qBAAsB,QACtCF,SAASE,OAAO,sBAAsBL,IAAIM,UAC1CH,SAASE,OAAO,oBAAoBL,IAAIO,aACxCJ,SAASE,OAAO,uBAAuBL,IAAIQ,WAC3CL,SAASE,OAAO,mBAAmBL,IAAIS,aACvCN,SAASE,OAAO,sBAAsBL,IAAIU,UAC1CP,SAASE,OAAO,oBAAoBL,IAAIW,OACxCR,SAASE,OAAO,sBAAsBL,IAAIf,aAE1CgB,IAAIW,KAAK,OAAO9D,KAAI,GACpBmD,IAAIY,KAAKV,UAETF,IAAIa,OAAUC,KACVC,uBAAuBf,MAG3BA,IAAIgB,QAAU,KACVC,aAAajB,OAKjBL,kBAAmB,CAACuB,WAAW1B,kBAAmBvC,aAChD+C,IAAM,IAAIC,qBAGNC,SAAU,IAAIC,SACpBD,SAASE,OAAO,UAAUnD,OAC1BiD,SAASE,OAAO,aAAc,6CAC9BF,SAASE,OAAO,qBAAsB,QACtCF,SAASE,OAAO,wBAAwBc,YAExClB,IAAIW,KAAK,OAAO9D,KAAI,GACpBmD,IAAIY,KAAKV,UAETF,IAAIa,OAAUC,KACVK,4BAA4BnB,IAAKR,oBAGrCQ,IAAIgB,QAAU,KACVC,aAAajB,OAIfe,uBAAwBf,SACN,IAAlBA,IAAIoB,YAAmC,MAAhBpB,IAAKqB,QACxBrB,IAAIsB,SAAS,OACPA,SAASC,KAAKC,MAAMxB,IAAIsB,aAE1BA,SAAS,CACX1C,OAAOC,QAAQC,IAAIwC,SAASG,cACtBA,OAAOH,SAASG,OACtBC,eAAeD,WAOrBC,eAAgBD,eACdE,KAAOzE,SAASC,yBAAkBsE,OAAOpB,WACzCuB,MAAQD,KAAKxE,cAAc,mBAC3BsD,SAAWkB,KAAKxE,cAAc,mBACpCyE,MAAM9D,YAAY2D,OAAOG,MACzBnB,SAAS3C,YAAY2D,OAAOhB,UAIxBU,4BAA4B,CAACnB,IAAIR,wBACf,IAAlBQ,IAAIoB,YAAmC,MAAhBpB,IAAKqB,QAC1BrB,IAAIsB,SAAS,OACPA,SAASC,KAAKC,MAAMxB,IAAIsB,UACxBO,eAAerC,qBACjB8B,SAAS,CACXO,eAAeC,UAAU,GAIzBC,YAAY,GAHiBT,SAIRhE,SAAQ0E,aACvBD,sCAAiCC,WAAWC,gBAAOD,WAAWhD,4BAEpE6C,eAAeC,UAAYC,eAOjC3C,kBAAoB,SAAC8C,cAAUC,qEAAgBjF,gBAC1C,IAAIkF,SAASC,gBACVC,cAAgB,WACZhD,SAAW6C,cAAc9E,iBAAiB6E,UAC5C5C,SAASiD,OAAS,GAAKC,MAAMC,KAAKnD,UAAUoD,OAAMC,MAAiB,OAATA,OAC1DN,QAAQ/C,UAERsD,sBAAsBN,gBAG9BA"}