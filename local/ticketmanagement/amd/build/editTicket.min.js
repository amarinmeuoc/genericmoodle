define("local_ticketmanagement/editTicket",["exports","core_form/modalform","core/notification","core/toast","core/str"],(function(_exports,_modalform,_notification,_toast,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modalform=_interopRequireDefault(_modalform),_notification=_interopRequireDefault(_notification);const url=M.cfg.wwwroot+"/webservice/rest/server.php",token=document.querySelector('input[name="token"]').value;let eventoCat="",eventoSubCat="",eventoPriority="";_exports.init=()=>{document.querySelectorAll(".tickets").forEach((node=>{node.addEventListener("click",(e=>{showTicketFormPopup(e)}))}))};const showTicketFormPopup=e=>{e.stopPropagation();const ticketId=e.target.textContent.trim(),modalForm=new _modalform.default({formClass:"\\local_ticketmanagement\\form\\TicketFormPopup",args:{num_ticket:ticketId},modalConfig:{title:"Ticket details: #".concat(ticketId)},returnFocus:e.target});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{var _formElement$querySel;const subcategoryValue=null===(_formElement$querySel=e.target.querySelector('select[name="subcategory"]'))||void 0===_formElement$querySel?void 0:_formElement$querySel.value;window.console.log(e.detail),subcategoryValue&&(e.detail.subcategory=subcategoryValue),updateTicket(e.detail,token,url)})),modalForm.addEventListener(modalForm.events.LOADED,(e=>{const formElement=e.target;areElementsLoaded('select[name="category"], select[name="subcategory"]',formElement).then((elements=>{const categorySelect=formElement.querySelector('select[name="category"]'),subcategorySelect=formElement.querySelector('select[name="subcategory"]');formElement.querySelector('select[name="priority"]').addEventListener("change",(e=>{eventoPriority=e.target.value})),categorySelect&&subcategorySelect?(categorySelect.addEventListener("change",(event=>{const selectedCategory=event.target.value;window.console.log("Categoría seleccionada: ".concat(selectedCategory)),eventoCat=event.target.value,updateSubcategory(selectedCategory,subcategorySelect,token)})),subcategorySelect.addEventListener("change",(e=>{eventoSubCat=e.target.value}))):window.console.error("Los selectores de categoría y subcategoría no están disponibles.");const closebox=formElement.querySelector("input[type='checkbox'][name='close']"),cancelledbox=formElement.querySelector("input[type='checkbox'][name='cancelled']"),bosave=formElement.querySelector(".btn-primary");closebox.checked&&(bosave.disabled=!0,closebox.disabled=!0),cancelledbox.checked&&(bosave.disabled=!0,cancelledbox.disabled=!0)})).catch((error=>{window.console.error("Error al cargar los elementos select:",error)}))})),modalForm.show()},updateTicket=(obj,token,url)=>{let xhr=new XMLHttpRequest;const formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction","local_ticketmanagement_edit_ticket"),formData.append("moodlewsrestformat","json"),formData.append("params[0][ticketid]",obj.ticketid),formData.append("params[0][fileid]",obj.attachments),formData.append("params[0][cancelled]",obj.cancelled),formData.append("params[0][state]",obj.hiddenstate),formData.append("params[0][priority]",obj.priority),formData.append("params[0][closed]",obj.close),formData.append("params[0][category]",obj.subcategory),formData.append("params[0][eventoCat]",eventoCat),formData.append("params[0][eventoSubCat]",eventoSubCat),formData.append("params[0][eventoPriority]",eventoPriority),xhr.open("POST",url,!0),xhr.send(formData),xhr.onload=ev=>{reqHandlerUpdateTicket(xhr)},xhr.onerror=()=>{rejectAnswer(xhr)}},updateSubcategory=(categoryid,subcategorySelect,token)=>{let xhr=new XMLHttpRequest;const formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction","local_ticketmanagement_load_subcategories"),formData.append("moodlewsrestformat","json"),formData.append("params[0][categoryid]",categoryid),xhr.open("POST",url,!0),xhr.send(formData),xhr.onload=ev=>{reqHandlerLoadSubcategories(xhr,subcategorySelect)},xhr.onerror=()=>{rejectAnswer(xhr)}},reqHandlerUpdateTicket=xhr=>{if(4===xhr.readyState&&200===xhr.status&&xhr.response){const response=JSON.parse(xhr.response);if(response){window.console.log(response.ticket);const ticket=response.ticket;updateTemplate(ticket)}}},updateTemplate=ticket=>{const fila=document.querySelector("#".concat(ticket.ticketid)),state=fila.querySelector("td:nth-child(5)"),priority=fila.querySelector("td:nth-child(7)");if(state.textContent=ticket.state,priority.textContent=ticket.priority,window.console.log("edicion..."),"Closed"===ticket.state||"Cancelled"===ticket.state){fila.classList.add("cerrado");const boAssigment=fila.querySelector(".assignbtn");boAssigment.addEventListener("click",(event=>{event.stopPropagation(),event.preventDefault()})),boAssigment.style.cursor="not-allowed"}},reqHandlerLoadSubcategories=(xhr,subcategorySelect)=>{if(4===xhr.readyState&&200===xhr.status&&xhr.response){const response=JSON.parse(xhr.response),selsubcategory=subcategorySelect;if(response){selsubcategory.innerHTML="";optionsHTML="",response.forEach((optionData=>{optionsHTML+='<option value="'.concat(optionData.id,'">').concat(optionData.subcategory,"</option>")})),selsubcategory.innerHTML=optionsHTML}}},areElementsLoaded=function(selector){let parentElement=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return new Promise((resolve=>{const checkElements=()=>{const elements=parentElement.querySelectorAll(selector);elements.length>0&&Array.from(elements).every((elem=>null!==elem))?resolve(elements):requestAnimationFrame(checkElements)};checkElements()}))}}));

//# sourceMappingURL=editTicket.min.js.map