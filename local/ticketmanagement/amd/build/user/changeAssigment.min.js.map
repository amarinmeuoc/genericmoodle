{"version":3,"file":"changeAssigment.min.js","sources":["../../src/user/changeAssigment.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport {add as addToast} from 'core/toast';\nimport {get_string as getString} from 'core/str';\n\nexport const init =() => {\n    \n\n    // Seleccionar todas las filas con la clase `.cerrado`\n    document.querySelectorAll(\"tr.cerrado .assignbtn\").forEach(link => {\n        // A침adir un manejador de eventos para el clic que evita que el evento se propague\n        link.addEventListener(\"click\", (event) => {\n            \n            event.stopPropagation(); // Detener la propagaci칩n del evento\n            event.preventDefault();  // Prevenir cualquier acci칩n predeterminada\n        });\n        // Opcional: cambiar el cursor a \"not-allowed\" para indicar que no es clickeable\n        link.style.cursor = \"not-allowed\";\n    });\n\n    const assignbtn=document.querySelectorAll('tr:not(.cerrado) .assignbtn');\n\n    assignbtn.forEach((node)=>{\n        node.addEventListener('click',(e)=>{\n            const fila=e.target.closest('tr');\n            if (!fila.classList.contains('cerrado')){\n                showAssigmentFormPopup(e);\n            } else {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n        })\n    })\n}\n\nconst showAssigmentFormPopup=(e)=>{\n    e.stopPropagation();\n    const fila=e.target.closest('tr');\n    const ticket=fila.querySelector('.tickets');\n    const ticketId=ticket.textContent;\n    const modalForm=new ModalForm({\n        formClass: \"\\\\local_ticketmanagement\\\\form\\\\AssignmentFormPopup\",\n        args: {num_ticket: ticketId},\n        modalConfig: {title: `Ticket details: #${ticketId}`},\n        returnFocus:e.target\n    });\n\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n        //Se actualiza la pagina principal con los nuevos valores y se envia email de notificaci칩n\n        \n        const ticket=e.detail.ticket;\n        const td=document.querySelector(`td a.assignbtn[data-ticketid=\"${ticket.id}\"]`).parentElement;\n        const link=document.querySelector(`a.assignbtn[data-ticketid=\"${ticket.id}\"]`)\n        const span = link.nextElementSibling; \n        span.textContent=ticket.user;\n        const state=document.querySelector(`td a.assignbtn[data-ticketid=\"${ticket.id}\"]`).parentElement.parentElement.children[4];\n        state.textContent=ticket.state;\n    });\n\n    modalForm.addEventListener(modalForm.events.LOADED, (e)=>{\n        //Changing the text of the dynamic button\n        //e.target.querySelector(\"button[data-action='save']\").textContent=\"Send Email\"\n        \n        }\n    );\n    \n    modalForm.show();\n\n}"],"names":["document","querySelectorAll","forEach","link","addEventListener","event","stopPropagation","preventDefault","style","cursor","node","e","target","closest","classList","contains","showAssigmentFormPopup","ticketId","querySelector","textContent","modalForm","ModalForm","formClass","args","num_ticket","modalConfig","title","returnFocus","events","FORM_SUBMITTED","ticket","detail","id","parentElement","nextElementSibling","user","children","state","LOADED","show"],"mappings":"2cAKmB,KAIfA,SAASC,iBAAiB,yBAAyBC,SAAQC,OAEvDA,KAAKC,iBAAiB,SAAUC,QAE5BA,MAAMC,kBACND,MAAME,oBAGVJ,KAAKK,MAAMC,OAAS,iBAGRT,SAASC,iBAAiB,+BAEhCC,SAASQ,OACfA,KAAKN,iBAAiB,SAASO,IAChBA,EAAEC,OAAOC,QAAQ,MAClBC,UAAUC,SAAS,YAGzBJ,EAAEL,kBACFK,EAAEJ,kBAHFS,uBAAuBL,gBASjCK,uBAAwBL,IAC1BA,EAAEL,wBAGIW,SAFKN,EAAEC,OAAOC,QAAQ,MACVK,cAAc,YACVC,YAChBC,UAAU,IAAIC,mBAAU,CAC1BC,UAAW,sDACXC,KAAM,CAACC,WAAYP,UACnBQ,YAAa,CAACC,iCAA2BT,WACzCU,YAAYhB,EAAEC,SAGlBQ,UAAUhB,iBAAiBgB,UAAUQ,OAAOC,gBAAiBlB,UAGnDmB,OAAOnB,EAAEoB,OAAOD,OACb9B,SAASkB,sDAA+CY,OAAOE,UAAQC,cACrEjC,SAASkB,mDAA4CY,OAAOE,UACrDE,mBACbf,YAAYW,OAAOK,KACZnC,SAASkB,sDAA+CY,OAAOE,UAAQC,cAAcA,cAAcG,SAAS,GAClHjB,YAAYW,OAAOO,SAG7BjB,UAAUhB,iBAAiBgB,UAAUQ,OAAOU,QAAS3B,QAOrDS,UAAUmB"}