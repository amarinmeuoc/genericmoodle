define("local_ticketmanagement/user/checklogs",["exports","core/notification","core/templates","core_form/modalform","core/modal"],(function(_exports,_notification,_templates,_modalform,_modal){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_notification=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(_notification),_templates=_interopRequireDefault(_templates),_modalform=_interopRequireDefault(_modalform),_modal=_interopRequireDefault(_modal);const url=M.cfg.wwwroot+"/webservice/rest/server.php",token=document.querySelector('input[name="token"]').value;_exports.init=()=>{document.querySelectorAll(".logs").forEach((node=>{node.addEventListener("click",(e=>{showTicketActions(e)}))}))};const showTicketActions=e=>{e.stopPropagation();const ticketId=e.target.dataset.ticketid;let xhr=new XMLHttpRequest;const formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction","local_ticketmanagement_load_actions"),formData.append("moodlewsrestformat","json"),formData.append("params[0][ticketid]",ticketId),xhr.open("POST",url,!0),xhr.send(formData),xhr.onload=ev=>{reqHandlerLoadActions(xhr)},xhr.onerror=()=>{rejectAnswer(xhr)}},reqHandlerLoadActions=xhr=>{if(4===xhr.readyState&&200===xhr.status&&xhr.response){const response=JSON.parse(xhr.response);loadActionsTemplate(response),window.console.log(response)}},loadActionsTemplate=response=>{const modalContent='\n      <div class="modal-body">\n        <p>This is the list of actions ordered by date</p>\n    </div>\n    <div class="table-responsive" style="max-height:300px">\n        <table class="generaltable table-sm">\n            <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Task</th>\n                    <th>Done by</th>\n                </tr>\n            </thead>\n            <tbody>\n                '+response.map((action=>"\n                        <tr>\n                            <td>".concat(action.dateaction,"</td>\n                            <td>").concat(action.action,"</td>\n                            <td>").concat(action.user,"</td>\n                        </tr>\n                    "))).join("")+'</tbody>\n        </table>\n    </div>\n    <div class="modal-footer">\n        <button type="button" class="btn btn-primary" data-action="confirm">Accept</button>\n    </div>';_modal.default.create({title:"Actions history",body:modalContent,size:"modal-xl"}).then((modal=>{window.console.log(modal),modal.getRoot()[0].querySelector('[data-action="confirm"]').onclick=function(){modal.hide()},modal.show()}))}}));

//# sourceMappingURL=checklogs.min.js.map