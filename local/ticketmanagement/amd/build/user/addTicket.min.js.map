{"version":3,"file":"addTicket.min.js","sources":["../../src/user/addTicket.js"],"sourcesContent":["define(['core/modal',\n  'core/notification',\n  'core/toast',\n  'core/notification',\n  'core/templates',\n  'local_ticketmanagement/funciones_comunes'], \n  function(ModalFactory, Notification, addToast, displayException, Templates, funcionesComunes){\n        const url=M.cfg.wwwroot+'/webservice/rest/server.php';\n        const token=document.querySelector('input[name=\"token\"]').value;\n        const init =() => {\n            const bonewticket=document.querySelector(\"#id_bocreate\");\n\n            if (bonewticket){\n                bonewticket.addEventListener('click',(e)=>{\n                  e.preventDefault();\n                  e.stopImmediatePropagation();\n                  \n                  const trainee=document.querySelector('input[type=\"hidden\"][name=\"user\"]').value;\n                  const category=(document.querySelector('#id_category').value)?document.querySelector('#id_category').value:0;\n                  const subcategory=(document.querySelector('#id_subcategory').value)?document.querySelector('#id_subcategory').value:0;\n                  \n                  const gestorid=document.querySelector('input[name=\"gestorid\"]').value;\n                  const familyissue=document.querySelector('#id_familyissue').value;\n                  const description=document.querySelector('textarea[name=\"description[text]\"]').value;\n                  \n                  let familiar=trainee;\n                  if (familyissue==='yes'){\n                    if (document.querySelector('#id_familiar').value!=='')\n                      familiar=document.querySelector('#id_familiar').value;\n                  }\n                  const newTicket={\n                      \n                      traineeid:trainee,\n                      categoryid:category,\n                      subcategoryid:subcategory,\n                      state:\"Open\",\n                      priority:\"Medium\",\n                      description:description,\n                      gestorid:gestorid,\n                      familiarid:familiar\n                  };\n\n                  if (category!==0 && subcategory!==0)\n                    createNewTicket(newTicket);\n                  else{\n                    Notification.addNotification({message:'Error: No categories have been defined yet. No ticket has been inserted',type:'error'});\n                  }\n              })\n            }\n            \n        }\n\n        const createNewTicket=(newTicket)=>{\n\n            if (newTicket.familiarid=='0'){\n              addToast.add('Is not allowed to open a ticket linked to a family issue. Please, choose \"Family issue=No\"',{\n                type:0\n              });\n              return;\n            }\n            let xhr = new XMLHttpRequest();\n            \n            //Se prepara el objeto a enviar\n            const formData= new FormData();\n            formData.append('wstoken',token);\n            formData.append('wsfunction', 'local_ticketmanagement_add_ticket');\n            formData.append('moodlewsrestformat', 'json');\n            formData.append('params[0][subcategoryid]',newTicket.subcategoryid);\n            formData.append('params[0][traineeid]',newTicket.traineeid);\n            formData.append('params[0][state]',newTicket.state);\n            formData.append('params[0][priority]',newTicket.priority);\n            formData.append('params[0][description]',newTicket.description);\n            formData.append('params[0][gestorid]',newTicket.gestorid);\n            formData.append('params[0][familiarid]',newTicket.familiarid);\n\n            xhr.open('POST',url,true);\n            xhr.send(formData);\n\n            xhr.onload = (ev)=> {\n                reqHandlerNewTicket(xhr);\n            }\n\n            xhr.onerror = ()=> {\n                rejectAnswer(xhr);\n            }\n        }\n\n        const reqHandlerNewTicket = (xhr) => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n              if (xhr.response) {\n                  const response = JSON.parse(xhr.response);\n\n                  if (response) {\n                      \n                      addToast.add('Ticket created successfully: ' + response.id);\n\n                      // Actualiza el número de tickets y las páginas\n                      let numRecords = parseInt(document.querySelector('#num_records').textContent.trim()) + 1;\n                      let numTotalRecords = parseInt(document.querySelector('#num_total_records').textContent.trim()) + 1;\n                      let numPages = Math.ceil(numTotalRecords / 25); // Cálculo de las páginas necesarias\n                      let currentPage = numPages;\n\n                      // Actualiza la lista de páginas en el paginador\n                      const pageList = [];\n                      let pagePrevious = Math.max(1, currentPage - 1);\n                      let pageNext = currentPage + 1;\n                      if (numPages===1){\n                        pageNext=1;\n                      }\n                      \n                      \n                      for (let i = 1; i <= numPages; i++) {\n                          pageList.push({\n                              page: i,\n                              active: i === currentPage\n                          });\n                      }\n\n                      const formattedResponse = {\n                          listadoTickets: [{\n                              ticketnumber: response.id,\n                              username: response.username,\n                              familyissue: response.familyissue,\n                              state: response.state,\n                              priority: response.priority,\n                              assigned: 'Waiting to be assigned.',\n                              date: response.dateticket,\n                              description: response.description,\n                              familyissue: response.familyissue\n                          }],\n                          num_records: numRecords,\n                          num_total_records: numTotalRecords,\n                          num_pages: numPages,\n                          pages: funcionesComunes.truncateArrayWithActiveMiddle(pageList,8),\n                          previous: [{\n                              page: pagePrevious,\n                              url: '#'\n                          }],\n                          next: [{\n                              page: pageNext,\n                              url: '#'\n                          }],\n                          first: [{\n                              page: 1,\n                              url: '#'\n                          }],\n                          last: [{\n                              page: numPages,\n                              url: '#'\n                          }],\n                      };\n\n                      addTickettoTemplate(formattedResponse);\n                  } else {\n                      addToast.add('Something went wrong. No ticket created');\n                  }\n              }\n          }\n        };\n\n\n        function addTickettoTemplate(response){\n            //Render the choosen mustache template by Javascript\n            Templates.renderForPromise('local_ticketmanagement/tr_st-ajax',response)\n            .then(({html,js})=>{\n              const content=document.querySelector('#tablebody');\n              const numRecords = document.querySelectorAll('.tickets').length;\n              \n              // Si el número total de registros supera los 25, limpiar la tabla para una nueva página\n              if (numRecords >= 25) {\n                content.innerHTML = '';  // Limpiar solo cuando se supere el límite de 25 registros\n              }\n\n              Templates.appendNodeContents(content,html,js);\n              const newTicket=document.querySelectorAll('.tickets')[document.querySelectorAll('.tickets').length-1];\n              newTicket.addEventListener('click',(e)=>{\n                \n                  funcionesComunes.showTicketFormPopup(e,'student');\n                \n              });\n\n              const logs=document.querySelectorAll('.logs')[document.querySelectorAll('.logs').length-1];\n\n            \n                logs.addEventListener('click',(e)=>{\n                  const filaPadre=e.target.closest('tr');\n                  \n                    showTicketActions(e);\n                  \n                })\n          \n\n\n              \n              //En caso de que se superen 25 tickets por página, se crea una nueva página y añade el registro ahí\n\n\n              Templates.renderForPromise('local_ticketmanagement/pagebar_log-ajax',response)\n              .then(({html,js})=>{\n                const content=document.querySelector('#pagination');\n                content.innerHTML='';\n                Templates.appendNodeContents(content,html,js);\n\n                const pages=document.querySelectorAll('.page-link');\n                pages.forEach((page)=>{\n                  page.addEventListener('click',(ev)=>{\n                    \n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    const token = document.querySelector('input[name=\"token\"]').value;\n                    const page= document.querySelector('input[name=\"page\"]');\n            \n                    //Se obtiene el elemento padre del elemento clicado\n                    const padre=ev.currentTarget.parentElement;\n                    \n                    if (padre.dataset.control==='first' || padre.dataset.control==='last' || padre.dataset.control==='previous' || padre.dataset.control==='next'){\n                      //Si es la primera página se coge el valor de arial-label\n                      page.value=ev.currentTarget.getAttribute('aria-label');\n                    } else {\n                      page.value=ev.currentTarget.textContent.trim();\n                    }\n                    \n                    //Obtenemos el ordenamiento y el campo de orden actuales\n                    const orderby = document.querySelector('input[name=\"orderby\"]').value;\n                    const order = document.querySelector('input[name=\"order\"]').value;\n                    const activePage=parseInt(page.value);\n                    \n            \n                    const userid=document.querySelector('input[name=\"user\"]').value;\n\n                    const obj={\n                      activePage:activePage,\n                      userid:userid,\n                      order:parseInt(order),\n                      orderby:orderby,\n                      page:parseInt(page.value),\n                    }\n                    \n                    funcionesComunes.requestDataToServer(obj, token, url,'student');\n            \n                    \n                  });\n                });\n                \n              }).catch((error)=>displayException(error));\n            }).catch((error)=>displayException(error));\n          }\n\n          \n          const showTicketActions=(e)=>{\n            e.stopPropagation();\n            const ticketId=e.target.dataset.ticketid;\n            let xhr = new XMLHttpRequest();\n            \n            //Se prepara el objeto a enviar\n            const formData= new FormData();\n            formData.append('wstoken',token);\n            formData.append('wsfunction', 'local_ticketmanagement_load_actions');\n            formData.append('moodlewsrestformat', 'json');\n            formData.append('params[0][ticketid]',ticketId);\n            \n        \n            xhr.open('POST',url,true);\n            xhr.send(formData);\n        \n            xhr.onload = (ev)=> {\n                \n                funcionesComunes.reqHandlerLoadActions(xhr);\n            }\n        \n            xhr.onerror = ()=> {\n                rejectAnswer(xhr);\n            }\n        }\n        \n             \n\n          return {\n            init:init\n          }\n\n  });"],"names":["define","ModalFactory","Notification","addToast","displayException","Templates","funcionesComunes","url","M","cfg","wwwroot","token","document","querySelector","value","createNewTicket","newTicket","familiarid","add","type","xhr","XMLHttpRequest","formData","FormData","append","subcategoryid","traineeid","state","priority","description","gestorid","open","send","onload","ev","reqHandlerNewTicket","onerror","rejectAnswer","readyState","status","response","JSON","parse","id","numRecords","parseInt","textContent","trim","numTotalRecords","numPages","Math","ceil","currentPage","pageList","pagePrevious","max","pageNext","i","push","page","active","renderForPromise","then","_ref","html","js","content","querySelectorAll","length","innerHTML","appendNodeContents","addEventListener","e","showTicketFormPopup","target","closest","showTicketActions","_ref2","forEach","preventDefault","stopPropagation","padre","currentTarget","parentElement","dataset","control","getAttribute","orderby","order","obj","activePage","userid","requestDataToServer","catch","error","addTickettoTemplate","listadoTickets","ticketnumber","username","familyissue","assigned","date","dateticket","num_records","num_total_records","num_pages","pages","truncateArrayWithActiveMiddle","previous","next","first","last","ticketId","ticketid","reqHandlerLoadActions","init","bonewticket","stopImmediatePropagation","trainee","category","subcategory","familiar","categoryid","addNotification","message"],"mappings":"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"}