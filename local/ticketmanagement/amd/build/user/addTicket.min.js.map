{"version":3,"file":"addTicket.min.js","sources":["../../src/user/addTicket.js"],"sourcesContent":["define(['core/modal',\n  'core/notification',\n  'core/toast',\n  'core/notification',\n  'core/templates',\n  'local_ticketmanagement/funciones_comunes'], \n  function(ModalFactory, Notification, addToast, displayException, Templates, funcionesComunes){\n        const url=M.cfg.wwwroot+'/webservice/rest/server.php';\n        const token=document.querySelector('input[name=\"token\"]').value;\n        const init =() => {\n            const bonewticket=document.querySelector(\"#id_bocreate\");\n            bonewticket.addEventListener('click',(e)=>{\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                \n                const trainee=document.querySelector('input[type=\"hidden\"][name=\"user\"]').value;\n                const category=(document.querySelector('#id_category').value)?document.querySelector('#id_category').value:0;\n                const subcategory=(document.querySelector('#id_subcategory').value)?document.querySelector('#id_subcategory').value:0;\n                \n                const gestorid=document.querySelector('input[name=\"gestorid\"]').value;\n                const familyissue=document.querySelector('#id_familyissue').value;\n                const description=document.querySelector('textarea[name=\"description[text]\"]').value;\n                \n                let familiar=trainee;\n                if (familyissue==='yes'){\n                  if (document.querySelector('#id_familiar').value!=='')\n                    familiar=document.querySelector('#id_familiar').value;\n                }\n                const newTicket={\n                    \n                    traineeid:trainee,\n                    categoryid:category,\n                    subcategoryid:subcategory,\n                    state:\"Open\",\n                    priority:\"Medium\",\n                    description:description,\n                    gestorid:gestorid,\n                    familiarid:familiar\n                };\n\n                if (category!==0 && subcategory!==0)\n                  createNewTicket(newTicket);\n                else{\n                  Notification.addNotification({message:'Error: No categories have been defined yet. No ticket has been inserted',type:'error'});\n                }\n\n            })\n        }\n\n        const createNewTicket=(newTicket)=>{\n            let xhr = new XMLHttpRequest();\n            \n            //Se prepara el objeto a enviar\n            const formData= new FormData();\n            formData.append('wstoken',token);\n            formData.append('wsfunction', 'local_ticketmanagement_add_ticket');\n            formData.append('moodlewsrestformat', 'json');\n            formData.append('params[0][subcategoryid]',newTicket.subcategoryid);\n            formData.append('params[0][traineeid]',newTicket.traineeid);\n            formData.append('params[0][state]',newTicket.state);\n            formData.append('params[0][priority]',newTicket.priority);\n            formData.append('params[0][description]',newTicket.description);\n            formData.append('params[0][gestorid]',newTicket.gestorid);\n            formData.append('params[0][familiarid]',newTicket.familiarid);\n\n            xhr.open('POST',url,true);\n            xhr.send(formData);\n\n            xhr.onload = (ev)=> {\n                reqHandlerNewTicket(xhr);\n            }\n\n            xhr.onerror = ()=> {\n                rejectAnswer(xhr);\n            }\n        }\n\n        const reqHandlerNewTicket = (xhr) => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n              if (xhr.response) {\n                  const response = JSON.parse(xhr.response);\n\n                  if (response) {\n                      window.console.log(response);\n                      addToast.add('Ticket created successfully: ' + response.id);\n\n                      // Actualiza el número de tickets y las páginas\n                      let numRecords = parseInt(document.querySelector('#num_records').textContent.trim()) + 1;\n                      let numTotalRecords = parseInt(document.querySelector('#num_total_records').textContent.trim()) + 1;\n                      let numPages = Math.ceil(numTotalRecords / 25); // Cálculo de las páginas necesarias\n                      let currentPage = numPages;\n\n                      // Actualiza la lista de páginas en el paginador\n                      const pageList = [];\n                      let pagePrevious = Math.max(1, currentPage - 1);\n                      let pageNext = currentPage + 1;\n                      if (numPages===1){\n                        pageNext=1;\n                      }\n                      \n                      \n                      for (let i = 1; i <= numPages; i++) {\n                          pageList.push({\n                              page: i,\n                              active: i === currentPage\n                          });\n                      }\n\n                      const formattedResponse = {\n                          listadoTickets: [{\n                              ticketnumber: response.id,\n                              username: response.username,\n                              familyissue: response.familyissue,\n                              state: response.state,\n                              priority: response.priority,\n                              assigned: 'Waiting to be assigned.',\n                              date: response.dateticket,\n                              description: response.description,\n                              familyissue: response.familyissue\n                          }],\n                          num_records: numRecords,\n                          num_total_records: numTotalRecords,\n                          num_pages: numPages,\n                          pages: funcionesComunes.truncateArrayWithActiveMiddle(pageList,8),\n                          previous: [{\n                              page: pagePrevious,\n                              url: '#'\n                          }],\n                          next: [{\n                              page: pageNext,\n                              url: '#'\n                          }],\n                          first: [{\n                              page: 1,\n                              url: '#'\n                          }],\n                          last: [{\n                              page: numPages,\n                              url: '#'\n                          }],\n                      };\n\n                      addTickettoTemplate(formattedResponse);\n                  } else {\n                      addToast.add('Something went wrong. No ticket created');\n                  }\n              }\n          }\n        };\n\n\n        function addTickettoTemplate(response){\n            //Render the choosen mustache template by Javascript\n            Templates.renderForPromise('local_ticketmanagement/tr_st-ajax',response)\n            .then(({html,js})=>{\n              const content=document.querySelector('#tablebody');\n              const numRecords = document.querySelectorAll('.tickets').length;\n              \n              // Si el número total de registros supera los 25, limpiar la tabla para una nueva página\n              if (numRecords >= 25) {\n                content.innerHTML = '';  // Limpiar solo cuando se supere el límite de 25 registros\n              }\n\n              Templates.appendNodeContents(content,html,js);\n              const newTicket=document.querySelectorAll('.tickets')[document.querySelectorAll('.tickets').length-1];\n              newTicket.addEventListener('click',(e)=>{\n                \n                  funcionesComunes.showTicketFormPopup(e,'student');\n                \n              });\n\n              const logs=document.querySelectorAll('.logs')[document.querySelectorAll('.logs').length-1];\n\n            \n                logs.addEventListener('click',(e)=>{\n                  const filaPadre=e.target.closest('tr');\n                  \n                    showTicketActions(e);\n                  \n                })\n          \n\n\n              \n              //En caso de que se superen 25 tickets por página, se crea una nueva página y añade el registro ahí\n\n\n              Templates.renderForPromise('local_ticketmanagement/pagebar_log-ajax',response)\n              .then(({html,js})=>{\n                const content=document.querySelector('#pagination');\n                content.innerHTML='';\n                Templates.appendNodeContents(content,html,js);\n\n                const pages=document.querySelectorAll('.page-link');\n                pages.forEach((page)=>{\n                  page.addEventListener('click',(ev)=>{\n                    window.console.log('adleante andalucia');\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    const token = document.querySelector('input[name=\"token\"]').value;\n                    const page= document.querySelector('input[name=\"page\"]');\n            \n                    //Se obtiene el elemento padre del elemento clicado\n                    const padre=ev.currentTarget.parentElement;\n                    \n                    if (padre.dataset.control==='first' || padre.dataset.control==='last' || padre.dataset.control==='previous' || padre.dataset.control==='next'){\n                      //Si es la primera página se coge el valor de arial-label\n                      page.value=ev.currentTarget.getAttribute('aria-label');\n                    } else {\n                      page.value=ev.currentTarget.textContent.trim();\n                    }\n                    \n                    //Obtenemos el ordenamiento y el campo de orden actuales\n                    const orderby = document.querySelector('input[name=\"orderby\"]').value;\n                    const order = document.querySelector('input[name=\"order\"]').value;\n                    const activePage=parseInt(page.value);\n                    \n            \n                    const userid=document.querySelector('input[name=\"user\"]').value;\n\n                    const obj={\n                      activePage:activePage,\n                      userid:userid,\n                      order:parseInt(order),\n                      orderby:orderby,\n                      page:parseInt(page.value),\n                    }\n                    \n                    funcionesComunes.requestDataToServer(obj, token, url,'student');\n            \n                    \n                  });\n                });\n                \n              }).catch((error)=>displayException(error));\n            }).catch((error)=>displayException(error));\n          }\n\n          \n          const showTicketActions=(e)=>{\n            e.stopPropagation();\n            const ticketId=e.target.dataset.ticketid;\n            let xhr = new XMLHttpRequest();\n            \n            //Se prepara el objeto a enviar\n            const formData= new FormData();\n            formData.append('wstoken',token);\n            formData.append('wsfunction', 'local_ticketmanagement_load_actions');\n            formData.append('moodlewsrestformat', 'json');\n            formData.append('params[0][ticketid]',ticketId);\n            \n        \n            xhr.open('POST',url,true);\n            xhr.send(formData);\n        \n            xhr.onload = (ev)=> {\n                reqHandlerLoadActions(xhr);\n            }\n        \n            xhr.onerror = ()=> {\n                rejectAnswer(xhr);\n            }\n        }\n        \n        const reqHandlerLoadActions=(xhr)=>{\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                if (xhr.response) {\n                    const response = JSON.parse(xhr.response);\n                    loadActionsTemplate(response);\n                    window.console.log(response);\n                }\n            }\n        }\n        \n        const loadActionsTemplate=(response)=>{\n            const modalContent = `\n              <div class=\"modal-body\">\n                <p>This is the list of actions ordered by date</p>\n            </div>\n            <div class=\"table-responsive\" style=\"max-height:300px\">\n                <table class=\"generaltable table-sm\">\n                    <thead>\n                        <tr>\n                            <th>Date</th>\n                            <th>Task</th>\n                            <th>Done by</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ` + \n                        response.map(action => {\n                            \n                            return `\n                                <tr>\n                                    <td>${action.dateaction}</td>\n                                    <td>${action.action}</td>\n                                    <td>${action.user}</td>\n                                </tr>\n                            `;\n                        }).join('') + // Unir todas las filas generadas\n                        `</tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-action=\"confirm\">Accept</button>\n            </div>`;\n        \n            ModalFactory.create({\n                title: 'Actions history',\n                body: modalContent,\n                size: 'modal-xl'\n            }).then(modal => {\n                window.console.log(modal);\n                // Manejar el clic en Aceptar\n                modal.getRoot()[0].querySelector('[data-action=\"confirm\"]').onclick = function() {\n                    \n                    modal.hide(); // Cierra el modal\n                };\n                modal.show(); // Muestra el modal\n            });\n        }\n\n\n \n\n  \n\n          \n\n          return {\n            init:init\n          }\n\n  });"],"names":["define","ModalFactory","Notification","addToast","displayException","Templates","funcionesComunes","url","M","cfg","wwwroot","token","document","querySelector","value","createNewTicket","newTicket","xhr","XMLHttpRequest","formData","FormData","append","subcategoryid","traineeid","state","priority","description","gestorid","familiarid","open","send","onload","ev","reqHandlerNewTicket","onerror","rejectAnswer","readyState","status","response","JSON","parse","window","console","log","add","id","numRecords","parseInt","textContent","trim","numTotalRecords","numPages","Math","ceil","currentPage","pageList","pagePrevious","max","pageNext","i","push","page","active","renderForPromise","then","_ref","html","js","content","querySelectorAll","length","innerHTML","appendNodeContents","addEventListener","e","showTicketFormPopup","target","closest","showTicketActions","_ref2","forEach","preventDefault","stopPropagation","padre","currentTarget","parentElement","dataset","control","getAttribute","orderby","order","obj","activePage","userid","requestDataToServer","catch","error","addTickettoTemplate","listadoTickets","ticketnumber","username","familyissue","assigned","date","dateticket","num_records","num_total_records","num_pages","pages","truncateArrayWithActiveMiddle","previous","next","first","last","ticketId","ticketid","reqHandlerLoadActions","loadActionsTemplate","modalContent","map","action","dateaction","user","join","create","title","body","size","modal","getRoot","onclick","hide","show","init","stopImmediatePropagation","trainee","category","subcategory","familiar","categoryid","addNotification","message","type"],"mappings":"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"}