{"version":3,"file":"addTicket.min.js","sources":["../../src/user/addTicket.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport {add as addToast} from 'core/toast';\nimport {get_string as getString} from 'core/str';\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\n\n\nconst url=M.cfg.wwwroot+'/webservice/rest/server.php';\nconst token=document.querySelector('input[name=\"token\"]').value;\nlet eventoCat=\"\";\nlet eventoSubCat=\"\";\n\nlet eventoPriority=\"\";\n\nexport const init =() => {\n    const bonewticket=document.querySelector(\"#id_bocreate\");\n    bonewticket.addEventListener('click',(e)=>{\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        \n        const trainee=document.querySelector('input[type=\"hidden\"][name=\"user\"]').value;\n        const category=(document.querySelector('#id_category').value)?document.querySelector('#id_category').value:0;\n        const subcategory=(document.querySelector('#id_subcategory').value)?document.querySelector('#id_subcategory').value:0;\n        \n        \n        const familyissue=document.querySelector('#id_familyissue').value;\n        const description=document.querySelector('textarea[name=\"description[text]\"]').value;\n        \n        let familiar=trainee;\n        if (familyissue==='yes'){\n          if (document.querySelector('#id_familiar').value!=='')\n            familiar=document.querySelector('#id_familiar').value;\n        }\n        const newTicket={\n            \n            traineeid:trainee,\n            categoryid:category,\n            subcategoryid:subcategory,\n            state:\"Open\",\n            priority:\"Medium\",\n            description:description,\n            \n            familiarid:familiar\n        };\n\n        if (category!==0 && subcategory!==0)\n          createNewTicket(newTicket);\n        else{\n          Notification.addNotification({message:'Error: No categories have been defined yet. No ticket has been inserted',type:'error'});\n        }\n\n    })\n}\n\nconst createNewTicket=(newTicket)=>{\n    let xhr = new XMLHttpRequest();\n    \n    //Se prepara el objeto a enviar\n    const formData= new FormData();\n    formData.append('wstoken',token);\n    formData.append('wsfunction', 'local_ticketmanagement_add_ticket');\n    formData.append('moodlewsrestformat', 'json');\n    formData.append('params[0][subcategoryid]',newTicket.subcategoryid);\n    formData.append('params[0][traineeid]',newTicket.traineeid);\n    formData.append('params[0][state]',newTicket.state);\n    formData.append('params[0][priority]',newTicket.priority);\n    formData.append('params[0][description]',newTicket.description);\n    \n    formData.append('params[0][familiarid]',newTicket.familiarid);\n\n    xhr.open('POST',url,true);\n    xhr.send(formData);\n\n    xhr.onload = (ev)=> {\n        reqHandlerNewTicket(xhr);\n    }\n\n    xhr.onerror = ()=> {\n        rejectAnswer(xhr);\n    }\n}\n\nconst reqHandlerNewTicket = (xhr) => {\n  if (xhr.readyState === 4 && xhr.status === 200) {\n      if (xhr.response) {\n          const response = JSON.parse(xhr.response);\n\n          if (response) {\n              window.console.log(response);\n              addToast('Ticket created successfully: ' + response.id);\n\n              // Actualiza el número de tickets y las páginas\n              let numRecords = parseInt(document.querySelector('#num_records').textContent.trim()) + 1;\n              let numPages = Math.ceil(numRecords / 25); // Cálculo de las páginas necesarias\n              let currentPage = numPages;\n\n              // Actualiza la lista de páginas en el paginador\n              const pageList = [];\n              let pagePrevious = Math.max(1, currentPage - 1);\n              let pageNext = currentPage + 1;\n              if (numPages===1){\n                pageNext=1;\n              }\n              \n              \n              for (let i = 1; i <= numPages; i++) {\n                  pageList.push({\n                      page: i,\n                      active: i === currentPage\n                  });\n              }\n\n              const formattedResponse = {\n                  listadoTickets: [{\n                      ticketnumber: response.id,\n                      username: response.username,\n                      familyissue: response.familyissue,\n                      state: response.state,\n                      priority: response.priority,\n                      assigned: 'Waiting to be assigned.',\n                      date: response.dateticket,\n                      description: response.description,\n                      familyissue: response.familyissue\n                  }],\n                  num_records: numRecords,\n                  num_total_records: numRecords,\n                  num_pages: numPages,\n                  pages: pageList,\n                  previous: [{\n                      page: pagePrevious,\n                      url: '#'\n                  }],\n                  next: [{\n                      page: pageNext,\n                      url: '#'\n                  }],\n                  first: [{\n                      page: 1,\n                      url: '#'\n                  }],\n                  last: [{\n                      page: numPages,\n                      url: '#'\n                  }],\n              };\n\n              addTickettoTemplate(formattedResponse);\n          } else {\n              addToast('Something went wrong. No ticket created');\n          }\n      }\n  }\n};\n\n\nfunction addTickettoTemplate(response){\n    //Render the choosen mustache template by Javascript\n    Templates.renderForPromise('local_ticketmanagement/tr_st-ajax',response)\n    .then(({html,js})=>{\n      const content=document.querySelector('#tablebody');\n      const numRecords = document.querySelectorAll('.tickets').length;\n      \n      // Si el número total de registros supera los 25, limpiar la tabla para una nueva página\n      if (numRecords >= 25) {\n        content.innerHTML = '';  // Limpiar solo cuando se supere el límite de 25 registros\n      }\n\n      Templates.appendNodeContents(content,html,js);\n      const newTicket=document.querySelectorAll('.tickets')[document.querySelectorAll('.tickets').length-1];\n      newTicket.addEventListener('click',(e)=>{\n        \n          showTicketFormPopup(e);\n        \n      });\n\n      const logs=document.querySelectorAll('.logs')[document.querySelectorAll('.logs').length-1];\n\n    \n        logs.addEventListener('click',(e)=>{\n          const filaPadre=e.target.closest('tr');\n          \n            showTicketActions(e);\n          \n        })\n   \n\n\n      \n      //En caso de que se superen 25 tickets por página, se crea una nueva página y añade el registro ahí\n\n\n      Templates.renderForPromise('local_ticketmanagement/pagebar_log-ajax',response)\n      .then(({html,js})=>{\n        const content=document.querySelector('#pagination');\n        content.innerHTML='';\n        Templates.appendNodeContents(content,html,js);\n\n\n        const pages=document.querySelectorAll('.page-link');\n        pages.forEach((page)=>{\n          page.addEventListener('click',(ev)=>{\n            window.console.log('adleante');\n            ev.preventDefault();\n            ev.stopPropagation();\n            const token = document.querySelector('input[name=\"token\"]');\n            const page= document.querySelector('input[name=\"page\"]');\n    \n            //Se obtiene el elemento padre del elemento clicado\n            const padre=ev.currentTarget.parentElement;\n            \n            if (padre.dataset.control==='first' || padre.dataset.control==='last' || padre.dataset.control==='previous' || padre.dataset.control==='next'){\n              //Si es la primera página se coge el valor de arial-label\n              page.value=ev.currentTarget.getAttribute('aria-label');\n            } else {\n              page.value=ev.currentTarget.textContent.trim();\n            }\n            \n            //Obtenemos el ordenamiento y el campo de orden actuales\n            const orderby = document.querySelector('input[name=\"orderby\"]').value;\n            const order = document.querySelector('input[name=\"order\"]').value;\n            const activePage=parseInt(page.value);\n            const startdate= document.querySelector('#startdate');\n            const enddate= document.querySelector('#enddate');\n    \n            const startdateUnixFormat=truncateDateToDay(new Date(startdate.value));\n            const enddateUnixFormat=truncateDateToDay(new Date(enddate.value));\n    \n            requestDataToServer(activePage,startdateUnixFormat, enddateUnixFormat,parseInt(order), orderby, parseInt(page.value), token.value, url);\n          });\n        });\n        \n      }).catch((error)=>displayException(error));\n    }).catch((error)=>displayException(error));\n  }\n\n  const truncateDateToDay=(date) =>{\n    // Create a new Date object with the year, month, and date from the input date.\n    const truncatedDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  \n    // Convert the truncated date to Unix time (milliseconds since the Unix epoch).\n    const unixTime = truncatedDate.getTime() / 1000; // Divide by 1000 to get seconds\n  \n    return unixTime;\n  }\n\n  const requestDataToServer=(activePage,firstDayOfWeek, lastDayOfWeek, order,orderby,page,token,url)=>{\n    let xhr = new XMLHttpRequest();\n      \n      //Se prepara el objeto a enviar\n      const formData= new FormData();\n      formData.append('wstoken',token);\n      formData.append('wsfunction', 'local_ticketmanagement_get_tickets_byUserId');\n      formData.append('moodlewsrestformat', 'json');\n      formData.append('params[0][order]',order);\n      formData.append('params[0][orderby]',orderby);\n      formData.append('params[0][page]',page);\n      formData.append('params[0][startdate]',firstDayOfWeek);\n      formData.append('params[0][enddate]',lastDayOfWeek);\n      formData.append('params[0][activePage]',activePage);\n      \n      \n  \n      xhr.open('POST',url,true);\n      xhr.send(formData);\n  \n      xhr.onload = (ev)=> {\n          reqHandlerGetTickets(xhr);\n      }\n  \n      xhr.onerror = ()=> {\n          rejectAnswer(xhr);\n      }\n  }\n\n  const reqHandlerGetTickets=(xhr)=>{\n    if (xhr.readyState=== 4 && xhr. status === 200){\n      if (xhr.response){\n          const response=JSON.parse(xhr.response);\n          loadTemplatefromResponse(response);\n          \n      }\n   }\n  }\n  \n  const loadTemplatefromResponse=(response)=>{\n    //Render the choosen mustache template by Javascript\n    Templates.renderForPromise('local_ticketmanagement/content_user-ajax',response)\n    .then(({html,js})=>{\n    const content=document.querySelector('#content');\n    content.innerHTML='';\n      Templates.appendNodeContents(content,html,js);\n      \n      //Ahora que se ha cargado la plantilla, se puede añadir el evento a los enlaces de ordenación\n      const orderlinks=document.querySelectorAll('.orderby');\n      orderlinks.forEach((link)=>{\n        link.addEventListener('click',(ev)=>{\n          ev.preventDefault();\n  \n          //Se obtienen los valores de los campos necesarios\n          const token = document.querySelector('input[name=\"token\"]').value;\n          const page= document.querySelector('input[name=\"page\"]');\n  \n          //Obtenemos el ordenamiento y el campo de orden actuales\n          const orderby = document.querySelector('input[name=\"orderby\"]');\n          const order = document.querySelector('input[name=\"order\"]');\n  \n          //Si el campo de ordenamiento es el mismo que el actual, se cambia el orden\n          if (ev.target.dataset.activo==='activo'){\n            if (order.value==='1'){\n              ev.target.dataset.order=0;\n              order.value=0;\n            } else {\n              ev.target.dataset.order=1;\n              order.value=1;\n            }\n          } else {\n            orderlinks.forEach((link)=>{\n              link.dataset.activo='';\n            });\n            ev.target.dataset.activo='activo';\n            orderby.value=ev.target.dataset.orderby;\n            ev.target.dataset.order=1;\n            order.value=1;\n          }\n  \n          const activePage=document.querySelector('li.page-item.active>a').textContent.trim();\n  \n          const startdate= document.querySelector('#startdate');\n          const enddate= document.querySelector('#enddate');\n  \n          const startdateUnixFormat=truncateDateToDay(new Date(startdate.value));\n          const enddateUnixFormat=truncateDateToDay(new Date(enddate.value));\n          \n          requestDataToServer(activePage,startdateUnixFormat, enddateUnixFormat, parseInt(order.value),orderby.value,page.value,token,url);\n        });\n      });\n  \n      const pages=document.querySelectorAll('.page-link');\n      pages.forEach((page)=>{\n        page.addEventListener('click',(ev)=>{\n          ev.preventDefault();\n          ev.stopPropagation();\n          const token = document.querySelector('input[name=\"token\"]');\n          const page= document.querySelector('input[name=\"page\"]');\n  \n          //Se obtiene el elemento padre del elemento clicado\n          const padre=ev.currentTarget.parentElement;\n          \n          if (padre.dataset.control==='first' || padre.dataset.control==='last' || padre.dataset.control==='previous' || padre.dataset.control==='next'){\n            //Si es la primera página se coge el valor de arial-label\n            page.value=ev.currentTarget.getAttribute('aria-label');\n          } else {\n            page.value=ev.currentTarget.textContent.trim();\n          }\n          \n          //Obtenemos el ordenamiento y el campo de orden actuales\n          const orderby = document.querySelector('input[name=\"orderby\"]').value;\n          const order = document.querySelector('input[name=\"order\"]').value;\n          const activePage=parseInt(page.value);\n          const startdate= document.querySelector('#startdate');\n          const enddate= document.querySelector('#enddate');\n  \n          const startdateUnixFormat=truncateDateToDay(new Date(startdate.value));\n          const enddateUnixFormat=truncateDateToDay(new Date(enddate.value));\n  \n          requestDataToServer(activePage,startdateUnixFormat, enddateUnixFormat,parseInt(order), orderby, parseInt(page.value), token.value, url);\n        });\n      });\n  \n    })\n    .catch((error)=>displayException(error));\n  }\n\n  const showTicketFormPopup=(e)=>{\n    e.stopPropagation();\n    const ticketId=e.target.textContent.trim();\n    \n    const modalForm=new ModalForm({\n        formClass: \"\\\\local_ticketmanagement\\\\form\\\\TicketFormPopupStudent\",\n        args: {num_ticket: ticketId},\n        modalConfig: {title: `Ticket details: #${ticketId}`},\n        returnFocus:e.target\n    });\n\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n         //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n         const formElement=e.target;\n         const subcategoryValue = formElement.querySelector('select[name=\"subcategory\"]')?.value;\n         window.console.log(e.detail);\n         if (subcategoryValue) {\n             e.detail.subcategory = subcategoryValue;\n         }\n \n \n         //updateTicket(e.detail,token,url);\n    });\n\n    modalForm.addEventListener(modalForm.events.LOADED, (e)=>{\n        // Obtener el formulario modal después de que se ha cargado\n        const formElement = e.target;\n        window.console.log(\"disabled...\");\n        // Usa la función areElementsLoaded para esperar hasta que los selectores estén cargados en el DOM\n        areElementsLoaded('select[name=\"category\"], select[name=\"subcategory\"]', formElement).then((elements) => {\n\n            // Una vez que los selectores están disponibles, los seleccionamos\n            const categorySelect = formElement.querySelector('select[name=\"category\"]');\n            const subcategorySelect = formElement.querySelector('select[name=\"subcategory\"]');\n            const priority=formElement.querySelector('select[name=\"priority\"]');\n            priority.addEventListener('change',(e)=>{\n              eventoPriority=e.target.value\n            })\n    \n            // Asegúrate de que ambos selectores existen\n            if (categorySelect && subcategorySelect) {\n              // Añadir un listener para cuando cambie la categoría seleccionada\n              categorySelect.addEventListener('change', (event) => {\n                  const selectedCategory = event.target.value;\n                  window.console.log(`Categoría seleccionada: ${selectedCategory}`);\n                  eventoCat=event.target.value;\n                  // Lógica para actualizar las opciones del selector de subcategorías\n                  updateSubcategory(selectedCategory, subcategorySelect,token);\n              });\n              subcategorySelect.addEventListener('change',(e)=>{\n                eventoSubCat=e.target.value;\n            })\n          } else {\n              window.console.error('Los selectores de categoría y subcategoría no están disponibles.');\n          }\n\n\n            \n        }).catch((error) => {\n            window.console.error('Error al cargar los elementos select:', error);\n        });\n        \n        }\n    );\n    \n    modalForm.show();\n\n}\n\nconst showAssigmentFormPopup=(e)=>{\n  e.stopPropagation();\n  const fila=e.target.closest('tr');\n  const ticket=fila.querySelector('.tickets');\n  const ticketId=ticket.textContent;\n  const modalForm=new ModalForm({\n      formClass: \"\\\\local_ticketmanagement\\\\form\\\\AssignmentFormPopup\",\n      args: {num_ticket: ticketId},\n      modalConfig: {title: `Ticket details: #${ticketId}`},\n      returnFocus:e.target\n  });\n\n  modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n      //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n        \n      const ticket=e.detail.ticket;\n      const td=document.querySelector(`td a.assignbtn[data-ticketid=\"${ticket.id}\"]`).parentElement;\n      const link=document.querySelector(`a.assignbtn[data-ticketid=\"${ticket.id}\"]`)\n      const span = link.nextElementSibling; \n      span.textContent=ticket.user;\n      const state=document.querySelector(`td a.assignbtn[data-ticketid=\"${ticket.id}\"]`).parentElement.parentElement.children[4];\n      state.textContent=ticket.state;\n  });\n\n  modalForm.addEventListener(modalForm.events.LOADED, (e)=>{\n      //Changing the text of the dynamic button\n      //e.target.querySelector(\"button[data-action='save']\").textContent=\"Send Email\"\n      \n      }\n  );\n  \n  modalForm.show();\n\n}\n\nconst showTicketActions=(e)=>{\n  e.stopPropagation();\n  const ticketId=e.target.dataset.ticketid;\n  const modalForm=new ModalForm({\n      formClass: \"\\\\local_ticketmanagement\\\\form\\\\ActionsFormPopup\",\n      args: {num_ticket: ticketId},\n      modalConfig: {title: `Ticket details: #${ticketId}`},\n      returnFocus:e.target\n  });\n\n  modalForm.show();\n\n\n  modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n      //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n  });\n\n  // Listen for the modal LOADED event\n  modalForm.addEventListener(modalForm.events.LOADED, (e) => {\n      // Get the button after the modal is fully loaded\n      // Get the modal element after it is loaded\n      \n      areElementsLoaded('#boactionid').then((elements)=>{\n          const addActionBtn = (elements.length>0)?elements[0]:null;\n          \n          if (addActionBtn) {\n              // Add an event listener to the button\n              addActionBtn.addEventListener('click', function() {\n                  console.log('Add Action button clicked!');\n              });\n          }\n\n      })\n  });\n}\n\nconst updateTicket = (obj,token,url)=>{\n  let xhr = new XMLHttpRequest();\n    \n    //Se prepara el objeto a enviar\n    const formData= new FormData();\n    formData.append('wstoken',token);\n    formData.append('wsfunction', 'local_ticketmanagement_edit_ticket_byUser');\n    formData.append('moodlewsrestformat', 'json');\n    formData.append('params[0][ticketid]',obj.ticketid);\n    formData.append('params[0][fileid]',obj.attachments);\n    formData.append('params[0][userid]',obj.userid);\n\n    xhr.open('POST',url,true);\n    xhr.send(formData);\n\n    xhr.onload = (ev)=> {\n        reqHandlerUpdateTicket(xhr);\n    }\n\n    xhr.onerror = ()=> {\n        rejectAnswer(xhr);\n    }\n\n}\n\nconst reqHandlerUpdateTicket=(xhr)=>{\n  if (xhr.readyState=== 4 && xhr. status === 200){\n      if (xhr.response){\n          const response=JSON.parse(xhr.response);\n          \n          if (response){\n            window.console.log(response.ticket);\n            const ticket=response.ticket;\n            updateTemplate(ticket);\n          }\n          \n      }\n    }\n}\n\nconst updateTemplate=(ticket)=>{\n  const fila = document.querySelector(`#${ticket.ticketid}`);\n  const state = fila.querySelector('td:nth-child(5)');\n  const priority = fila.querySelector('td:nth-child(7)');\n  state.textContent=ticket.state;\n  priority.textContent=ticket.priority;\n  \n    if (ticket.state==='Closed' || ticket.state==='Cancelled'){\n        fila.classList.add(\"cerrado\");\n        \n        // Opcional: cambiar el cursor a \"not-allowed\" para indicar que no es clickeable\n        boAssigment.style.cursor = \"not-allowed\";\n    }\n\n}\n\nconst areElementsLoaded = (selector, parentElement = document) => {\n  return new Promise((resolve) => {\n      const checkElements = () => {\n          const elements = parentElement.querySelectorAll(selector);\n          if (elements.length > 0 && Array.from(elements).every(elem => elem !== null)) {\n              resolve(elements);\n          } else {\n              requestAnimationFrame(checkElements);\n          }\n      };\n      checkElements();\n  });\n};"],"names":["url","M","cfg","wwwroot","token","document","querySelector","value","eventoCat","eventoSubCat","eventoPriority","addEventListener","e","preventDefault","stopImmediatePropagation","trainee","category","subcategory","familyissue","description","familiar","createNewTicket","traineeid","categoryid","subcategoryid","state","priority","familiarid","addNotification","message","type","newTicket","xhr","XMLHttpRequest","formData","FormData","append","open","send","onload","ev","reqHandlerNewTicket","onerror","rejectAnswer","readyState","status","response","JSON","parse","window","console","log","id","numRecords","parseInt","textContent","trim","numPages","Math","ceil","currentPage","pageList","pagePrevious","max","pageNext","i","push","page","active","renderForPromise","then","_ref","html","js","content","querySelectorAll","length","innerHTML","appendNodeContents","showTicketFormPopup","target","closest","showTicketActions","_ref2","forEach","stopPropagation","padre","currentTarget","parentElement","dataset","control","getAttribute","orderby","order","activePage","startdate","enddate","startdateUnixFormat","truncateDateToDay","Date","enddateUnixFormat","requestDataToServer","catch","error","addTickettoTemplate","listadoTickets","ticketnumber","username","assigned","date","dateticket","num_records","num_total_records","num_pages","pages","previous","next","first","last","getFullYear","getMonth","getDate","getTime","firstDayOfWeek","lastDayOfWeek","reqHandlerGetTickets","loadTemplatefromResponse","_ref3","orderlinks","link","activo","ticketId","modalForm","ModalForm","formClass","args","num_ticket","modalConfig","title","returnFocus","events","FORM_SUBMITTED","subcategoryValue","_formElement$querySel","detail","LOADED","formElement","areElementsLoaded","elements","categorySelect","subcategorySelect","event","selectedCategory","updateSubcategory","show","ticketid","addActionBtn","selector","Promise","resolve","checkElements","Array","from","every","elem","requestAnimationFrame"],"mappings":"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"}