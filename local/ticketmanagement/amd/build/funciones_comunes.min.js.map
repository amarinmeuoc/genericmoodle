{"version":3,"file":"funciones_comunes.min.js","sources":["../src/funciones_comunes.js"],"sourcesContent":["define(['core/templates','core_form/modalform'],function(Templates,ModalForm) {\n    let eventoCat=\"\";\n    let eventoSubCat=\"\";\n    let eventoFile=\"\";\n    let eventoPriority=\"\";\n    return {\n        truncateArrayWithActiveMiddle: function(arr,maxLength){\n            const activeIndex = arr.indexOf(arr.find(item => item.active)); // Combine find and indexOf\n            // Handle cases where there's no active element or less than maxLength elements\n            if (activeIndex === -1 || arr.length <= maxLength) {\n            return arr;\n            }\n        \n            // Similar logic to calculate before and after lengths\n            const halfLength = Math.floor(maxLength / 2);\n            const beforeLength = Math.min(halfLength, activeIndex);\n            const afterLength = Math.min(halfLength, arr.length - activeIndex - 1);\n        \n            // Use a loop to iterate and build the truncated array\n            const truncatedArray = [];\n            for (let i = activeIndex - beforeLength; i <= activeIndex + afterLength; i++) {\n            if (i >= 0 && i < arr.length) { // Ensure we stay within array bounds\n                truncatedArray.push(arr[i]);\n            }\n            }\n        \n            return truncatedArray;\n        },\n        areElementsLoaded: function (selector, parentElement = document) {\n            return new Promise((resolve) => {\n                const checkElements = () => {\n                    const elements = parentElement.querySelectorAll(selector);\n                    if (elements.length > 0 && Array.from(elements).every(elem => elem !== null)) {\n                        resolve(elements);\n                    } else {\n                        requestAnimationFrame(checkElements);\n                    }\n                };\n                checkElements();\n            });\n        },\n        truncateDateToDay:function(date) {\n            // Create a new Date object with the year, month, and date from the input date.\n            const truncatedDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        \n            // Convert the truncated date to Unix time (milliseconds since the Unix epoch).\n            const unixTime = truncatedDate.getTime() / 1000; // Divide by 1000 to get seconds\n        \n            return unixTime;\n        },\n        getFirstAndLastDayOfCurrentWeek:function(){\n            const today = new Date();\n            const dayOfWeek = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n\n            // Calculate the first day of the week (Monday)\n            const firstDayOfWeek = new Date(today);\n            firstDayOfWeek.setDate(today.getDate() - dayOfWeek );\n\n            // Calculate the last day of the week (Sunday)\n            const lastDayOfWeek = new Date(firstDayOfWeek);\n            lastDayOfWeek.setDate(lastDayOfWeek.getDate() + 6);\n\n            return { firstDayOfWeek, lastDayOfWeek };\n        },\n        loadTemplateFromResponse: function(response){\n            const self=this; //Mantener el contexto\n            const role = document.querySelector('input[name=\"role\"]').value;\n            const template=(role==='student')?'local_ticketmanagement/content_user-ajax':'local_ticketmanagement/content_log-ajax'\n            //Render the choosen mustache template by Javascript\n            Templates.renderForPromise(template,response)\n            .then(({html,js})=>{\n                const content=document.querySelector('#content');\n                content.innerHTML='';\n                Templates.appendNodeContents(content,html,js);\n                \n                //Ahora que se ha cargado la plantilla, se puede añadir el evento a los enlaces de ordenación\n                const orderlinks=document.querySelectorAll('.orderby');\n                orderlinks.forEach((link)=>{\n                    link.addEventListener('click',(ev)=>{\n                        ev.preventDefault();\n                \n                        //Se obtienen los valores de los campos necesarios\n                        const token = document.querySelector('input[name=\"token\"]');\n                        const page= document.querySelector('input[name=\"page\"]');\n                \n                        //Obtenemos el ordenamiento y el campo de orden actuales\n                        const orderby = document.querySelector('input[name=\"orderby\"]');\n                        const order = document.querySelector('input[name=\"order\"]');\n                        \n                \n                        //Si el campo de ordenamiento es el mismo que el actual, se cambia el orden\n                        if (ev.target.dataset.activo==='activo'){\n                            if (order.value==='1'){\n                                ev.target.dataset.order=0;\n                                order.value=0;\n                            } else {\n                                ev.target.dataset.order=1;\n                                order.value=1;\n                            }\n                        } else {\n                            orderlinks.forEach((link)=>{\n                                link.dataset.activo='';\n                            });\n                            ev.target.dataset.activo='activo';\n                            orderby.value=ev.target.dataset.orderby;\n                            ev.target.dataset.order=1;\n                            order.value=1;\n                        }\n                \n                        const activePage=document.querySelector('li.page-item.active>a').textContent.trim();\n                \n                        const startdate= document.querySelector('#startdate');\n                        const enddate= document.querySelector('#enddate');\n                \n                        \n\n                        if (role==='controller'){\n                            const startdateUnixFormat=this.truncateDateToDay(new Date(startdate.value));\n                            const enddateUnixFormat=this.truncateDateToDay(new Date(enddate.value));\n                            const obj={\n                                activePage:1,\n                                firstDayOfWeek:startdateUnixFormat,\n                                lastDayOfWeek:enddateUnixFormat,\n                                order:parseInt(order.value),\n                                orderby:orderby.value,\n                                page:1,\n                              }\n                            self.requestDataToServer(obj, token.value, url,role);\n                        } else if (role==='student'){\n                            const userid=document.querySelector('input[name=\"user\"]').value;\n                            const obj={\n                                activePage:1,\n                                userid:userid,\n                                order:order.value,\n                                orderby:orderby.value,\n                                page:1,\n                              }\n                            self.requestDataToServer(obj, token.value, url,role);\n                        }\n                        \n                    });\n                });\n            \n                const pages=document.querySelectorAll('.page-link');\n                pages.forEach((page)=>{\n                    page.addEventListener('click',(ev)=>{\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                        const token = document.querySelector('input[name=\"token\"]');\n                        const page= document.querySelector('input[name=\"page\"]');\n                \n                        //Se obtiene el elemento padre del elemento clicado\n                        const padre=ev.currentTarget.parentElement;\n                        \n                        if (padre.dataset.control==='first' || padre.dataset.control==='last' || padre.dataset.control==='previous' || padre.dataset.control==='next'){\n                        //Si es la primera página se coge el valor de arial-label\n                        page.value=ev.currentTarget.getAttribute('aria-label');\n                        } else {\n                        page.value=ev.currentTarget.textContent.trim();\n                        }\n                        \n                        //Obtenemos el ordenamiento y el campo de orden actuales\n                        const orderby = document.querySelector('input[name=\"orderby\"]').value;\n                        const order = document.querySelector('input[name=\"order\"]').value;\n                        const activePage=parseInt(page.value);\n                        const startdate= document.querySelector('#startdate');\n                        const enddate= document.querySelector('#enddate');\n                        //const role = document.querySelector('input[name=\"role\"]').value;\n                \n                        \n                        \n                        if (role==='controller'){\n                            const startdateUnixFormat=this.truncateDateToDay(new Date(startdate.value));\n                            const enddateUnixFormat=this.truncateDateToDay(new Date(enddate.value));\n                            const obj={\n                                activePage:activePage,\n                                firstDayOfWeek:startdateUnixFormat,\n                                lastDayOfWeek:enddateUnixFormat,\n                                order:parseInt(order),\n                                orderby:orderby,\n                                page:parseInt(page.value),\n                              }\n                              self.requestDataToServer(obj, token.value, url,role);\n                        } else if (role==='student'){\n                            const userid=document.querySelector('input[name=\"user\"]').value;\n                            const obj={\n                                activePage:activePage,\n                                userid:userid,\n                                order:order,\n                                orderby:orderby,\n                                page:parseInt(page.value),\n                              }\n                              self.requestDataToServer(obj, token.value, url,role);\n                        }\n                        \n                \n                        \n                    });\n                });\n            \n            })\n            .catch((error)=>displayException(error));\n  \n        },\n        reqHandlerGetTickets: function(xhr){\n            if (xhr.readyState=== 4 && xhr. status === 200){\n              if (xhr.response){\n                  const response=JSON.parse(xhr.response);\n                  response.pages=this.truncateArrayWithActiveMiddle(response.pages,8);\n                  this.loadTemplateFromResponse(response);\n                  window.console.log(response);\n              }\n            }\n        },\n        requestDataToServer: function (obj,token,url,role){\n                \n                const self=this; // Usar self para conservar el contexto en xhr.onload\n                let xhr = new XMLHttpRequest();\n\n                const service= (role==='student')?'local_ticketmanagement_get_tickets_byUserId':'local_ticketmanagement_get_tickets';\n\n\n\n                //Se prepara el objeto a enviar\n                const formData= new FormData();\n                formData.append('wstoken',token);\n                formData.append('wsfunction', service);\n                formData.append('moodlewsrestformat', 'json');\n                if (role==='student'){\n                    formData.append('params[0][order]',obj.order);\n                    formData.append('params[0][orderby]',obj.orderby);\n                    formData.append('params[0][page]',obj.page);\n                    formData.append('params[0][userid]',obj.userid);\n                    formData.append('params[0][activePage]',obj.activePage);\n                }else if(role==='controller') {\n                    formData.append('params[0][order]',obj.order);\n                    formData.append('params[0][orderby]',obj.orderby);\n                    formData.append('params[0][page]',obj.page);\n                    formData.append('params[0][startdate]',obj.firstDayOfWeek);\n                    formData.append('params[0][enddate]',obj.lastDayOfWeek);\n                    formData.append('params[0][activePage]',obj.activePage);\n                }\n                \n                \n                xhr.open('POST',url,true);\n                xhr.send(formData);\n            \n                xhr.onload = (ev)=> {\n                    self.reqHandlerGetTickets(xhr);\n                }\n            \n                xhr.onerror = ()=> {\n                    rejectAnswer(xhr);\n                }\n        },\n        showTicketFormPopup: function (e,role){\n            const self=this;\n            e.stopPropagation();\n            const ticketId=e.target.textContent.trim();\n            const formpopup=(role==='controller')?\"TicketFormPopup\":\"TicketFormPopupStudent\";\n            window.console.log(role);\n            const modalForm=new ModalForm({\n                formClass: `\\\\local_ticketmanagement\\\\form\\\\${formpopup}`,\n                args: {num_ticket: ticketId},\n                modalConfig: {title: `Ticket details: #${ticketId}`},\n                returnFocus:e.target\n            });\n    \n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n                //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n                const formElement=e.target;\n                const subcategoryValue = formElement.querySelector('select[name=\"subcategory\"]')?.value;\n                window.console.log(e.detail); \n                //Se captura el valor subcategory porque como campo de formulario aparece la categoria, pero no la subcategoria\n                if (subcategoryValue) {\n                    e.detail.subcategory = subcategoryValue;\n                } \n    \n                if (role==='controller'){\n                    self.updateTicket(e.detail,token,url,role);\n                }\n                \n            });\n    \n            modalForm.addEventListener(modalForm.events.LOADED, (e) => {\n                const self=this;\n                // Obtener el formulario modal después de que se ha cargado\n                const formElement = e.target;\n            \n                // Usa la función areElementsLoaded para esperar hasta que los selectores estén cargados en el DOM\n                self.areElementsLoaded('select[name=\"category\"], select[name=\"subcategory\"]', formElement).then((elements) => {\n                    \n                    // Una vez que los selectores están disponibles, los seleccionamos\n                    const categorySelect = formElement.querySelector('select[name=\"category\"]');\n                    const subcategorySelect = formElement.querySelector('select[name=\"subcategory\"]');\n                    const priority=formElement.querySelector('select[name=\"priority\"]');\n                    priority.addEventListener('change',(e)=>{\n                        eventoPriority=e.target.value\n                    })\n            \n                    // Asegúrate de que ambos selectores existen\n                    if (categorySelect && subcategorySelect) {\n                        // Añadir un listener para cuando cambie la categoría seleccionada\n                        categorySelect.addEventListener('change', (event) => {\n                            const selectedCategory = event.target.value;\n                            window.console.log(`Categoría seleccionada: ${selectedCategory}`);\n                            eventoCat=event.target.value;\n                            // Lógica para actualizar las opciones del selector de subcategorías\n                            self.updateSubcategory(selectedCategory, subcategorySelect,token);\n                        });\n    \n                        subcategorySelect.addEventListener('change',(e)=>{\n                            eventoSubCat=e.target.value;\n                        })\n                    } else {\n                        window.console.error('Los selectores de categoría y subcategoría no están disponibles.');\n                    }\n                    \n                    if (role==='controller'){\n                        const closebox=formElement.querySelector(\"input[type='checkbox'][name='close']\");\n                        const cancelledbox=formElement.querySelector(\"input[type='checkbox'][name='cancelled']\");\n                        const bosave=formElement.querySelector(\".btn-primary\");\n                        \n                        if (closebox.checked){\n                        bosave.disabled=true;\n                        closebox.disabled=true;\n                        }\n        \n        \n                        if (cancelledbox.checked){\n                        bosave.disabled=true;\n                        cancelledbox.disabled=true;\n                        }\n                    }\n                    \n    \n    \n                    \n                }).catch((error) => {\n                    window.console.error('Error al cargar los elementos select:', error);\n                });\n            });\n            modalForm.show();\n        },\n        updateTicket: function (obj,token,url,role) {\n            const self=this;\n            let xhr = new XMLHttpRequest();\n            const service=(role==='controller')?'local_ticketmanagement_edit_ticket':'local_ticketmanagement_edit_ticket_byUser';\n            //Se prepara el objeto a enviar\n            const formData= new FormData();\n            formData.append('wstoken',token);\n            formData.append('wsfunction', service);\n            formData.append('moodlewsrestformat', 'json');\n            formData.append('params[0][ticketid]',obj.ticketid);\n            formData.append('params[0][fileid]',obj.attachments);\n            formData.append('params[0][cancelled]',obj.cancelled);\n            formData.append('params[0][state]',obj.hiddenstate);\n            formData.append('params[0][priority]',obj.priority);\n            formData.append('params[0][closed]',obj.close);\n            formData.append('params[0][category]',obj.subcategory);\n            formData.append('params[0][eventoCat]',eventoCat);\n            formData.append('params[0][eventoSubCat]',eventoSubCat);\n            formData.append('params[0][eventoPriority]',eventoPriority);\n        \n            xhr.open('POST',url,true);\n            xhr.send(formData);\n        \n            xhr.onload = (ev)=> {\n                self.reqHandlerUpdateTicket(xhr);\n            }\n        \n            xhr.onerror = ()=> {\n                rejectAnswer(xhr);\n            }\n        \n        },\n        reqHandlerUpdateTicket: function(xhr){\n            if (xhr.readyState=== 4 && xhr. status === 200){\n                if (xhr.response){\n                    const response=JSON.parse(xhr.response);\n                    \n                    if (response){\n                    window.console.log(response.ticket);\n                    const ticket=response.ticket;\n                    this.updateTemplate(ticket);\n                    }\n                    \n                }\n            }\n        },\n        updateTemplate: function(ticket){\n            const fila = document.querySelector(`#${ticket.ticketid}`);\n            const state = fila.querySelector('td:nth-child(5)');\n            const priority = fila.querySelector('td:nth-child(7)');\n            state.textContent=ticket.state;\n            priority.textContent=ticket.priority;\n            window.console.log(\"edicion...\");\n            if (ticket.state==='Closed' || ticket.state==='Cancelled'){\n                fila.classList.add(\"cerrado\");\n                const boAssigment=fila.querySelector('.assignbtn');\n                boAssigment.addEventListener(\"click\", (event) => {\n                    event.stopPropagation(); // Detener la propagación del evento\n                    event.preventDefault();  // Prevenir cualquier acción predeterminada\n                });\n                // Opcional: cambiar el cursor a \"not-allowed\" para indicar que no es clickeable\n                boAssigment.style.cursor = \"not-allowed\";\n            }\n    \n        },\n        updateSubcategory: function(categoryid,subcategorySelect, token){\n            const self=this;\n            let xhr = new XMLHttpRequest();\n            \n            //Se prepara el objeto a enviar\n            const formData= new FormData();\n            formData.append('wstoken',token);\n            formData.append('wsfunction', 'local_ticketmanagement_load_subcategories');\n            formData.append('moodlewsrestformat', 'json');\n            formData.append('params[0][categoryid]',categoryid);\n        \n            xhr.open('POST',url,true);\n            xhr.send(formData);\n        \n            xhr.onload = (ev)=> {\n                self.reqHandlerLoadSubcategories(xhr, subcategorySelect);\n            }\n        \n            xhr.onerror = ()=> {\n                rejectAnswer(xhr);\n            }\n        },\n        reqHandlerLoadSubcategories: function(xhr,subcategorySelect){\n            if (xhr.readyState=== 4 && xhr. status === 200){\n                if (xhr.response){\n                    const response=JSON.parse(xhr.response);\n                    const selsubcategory=subcategorySelect;\n                    if (response){\n                        selsubcategory.innerHTML='';\n                        const optionsSubcategories = response;\n                        \n            \n                        optionsHTML='';\n                        optionsSubcategories.forEach(optionData=>{\n                            optionsHTML += `<option value=\"${optionData.id}\">${optionData.subcategory}</option>`;\n                        })\n                        selsubcategory.innerHTML = optionsHTML;\n                    }\n                    \n                }\n            }\n        }\n    }\n})"],"names":["define","Templates","ModalForm","eventoCat","eventoSubCat","eventoPriority","truncateArrayWithActiveMiddle","arr","maxLength","activeIndex","indexOf","find","item","active","length","halfLength","Math","floor","beforeLength","min","afterLength","truncatedArray","i","push","areElementsLoaded","selector","parentElement","document","Promise","resolve","checkElements","elements","querySelectorAll","Array","from","every","elem","requestAnimationFrame","truncateDateToDay","date","Date","getFullYear","getMonth","getDate","getTime","getFirstAndLastDayOfCurrentWeek","today","dayOfWeek","getDay","firstDayOfWeek","setDate","lastDayOfWeek","loadTemplateFromResponse","response","self","this","role","querySelector","value","template","renderForPromise","then","_ref","html","js","content","innerHTML","appendNodeContents","orderlinks","forEach","link","addEventListener","ev","preventDefault","token","orderby","order","target","dataset","activo","textContent","trim","startdate","enddate","obj","activePage","parseInt","page","requestDataToServer","url","userid","stopPropagation","padre","currentTarget","control","getAttribute","catch","error","displayException","reqHandlerGetTickets","xhr","readyState","status","JSON","parse","pages","window","console","log","XMLHttpRequest","service","formData","FormData","append","open","send","onload","onerror","rejectAnswer","showTicketFormPopup","e","ticketId","formpopup","modalForm","formClass","args","num_ticket","modalConfig","title","returnFocus","events","FORM_SUBMITTED","subcategoryValue","_formElement$querySel","detail","subcategory","updateTicket","LOADED","formElement","categorySelect","subcategorySelect","event","selectedCategory","updateSubcategory","closebox","cancelledbox","bosave","checked","disabled","show","ticketid","attachments","cancelled","hiddenstate","priority","close","reqHandlerUpdateTicket","ticket","updateTemplate","fila","state","classList","add","boAssigment","style","cursor","categoryid","reqHandlerLoadSubcategories","selsubcategory","optionsHTML","optionData","id"],"mappings":"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"}