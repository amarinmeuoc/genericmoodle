{"version":3,"file":"editUser.min.js","sources":["../../src/usermanagement/editUser.js"],"sourcesContent":["define([\n    'core_form/modalform'\n],function(ModalForm){\n    const url=M.cfg.wwwroot+'/webservice/rest/server.php';\n    const token=document.querySelector('input[name=\"token\"]').value;\n    \n    const init =() => {\n        \n        const bomodifyuserlist=document.querySelectorAll('.modify-user');\n\n        bomodifyuserlist.forEach((bomodifyuser)=>{\n            bomodifyuser.addEventListener('click',(e)=>{\n                    showUserFormPopup(e);\n            })\n        })\n    }\n\n    const showUserFormPopup= (e)=>{\n        \n        e.stopPropagation();\n        const userid=e.target.closest('.modify-user').dataset.userid;\n        const formpopup=\"UserFormPopup\";\n        \n        const modalForm=new ModalForm({\n            formClass: `\\\\local_ticketmanagement\\\\form\\\\${formpopup}`,\n            args: {userid: userid},\n            modalConfig: {title: `User details: #${userid}`},\n            returnFocus:e.target\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n            //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n            const formElement=e.target;\n            //Se actualiza\n            window.console.log(e.detail);\n            updateUser(e.detail);\n    \n        });\n\n        modalForm.addEventListener(modalForm.events.LOADED, (e) => {\n            \n            // Obtener el formulario modal después de que se ha cargado\n            const formElement = e.target;\n               \n        });\n        modalForm.show();\n    }\n\n    const updateUser=(data)=>{\n        const fila = document.getElementById(data.userid);\n        const personalemail = fila.querySelector('td:nth-child(6)');\n        personalemail.textContent=data.personalemail;\n        const phone1 = fila.querySelector('td:nth-child(7)');\n        phone1.textContent=data.phone1;\n        const phone2 = fila.querySelector('td:nth-child(8)');\n        phone2.textContent=data.phone2;\n        const address = fila.querySelector('td:nth-child(9)');\n        address.textContent=data.address;\n        const city = fila.querySelector('td:nth-child(10)');\n        city.textContent=data.city;\n            \n    }\n\n    return {\n        init:init\n    }\n})"],"names":["define","ModalForm","M","cfg","wwwroot","document","querySelector","value","showUserFormPopup","e","stopPropagation","userid","target","closest","dataset","modalForm","formClass","args","modalConfig","title","returnFocus","addEventListener","events","FORM_SUBMITTED","window","console","log","detail","updateUser","LOADED","show","data","fila","getElementById","textContent","personalemail","phone1","phone2","address","city","init","querySelectorAll","forEach","bomodifyuser"],"mappings":"AAAAA,wDAAO,CACH,wBACF,SAASC,WACGC,EAAEC,IAAIC,QACJC,SAASC,cAAc,uBAAuBC,YAapDC,kBAAoBC,IAEtBA,EAAEC,wBACIC,OAAOF,EAAEG,OAAOC,QAAQ,gBAAgBC,QAAQH,OAGhDI,UAAU,IAAId,UAAU,CAC1Be,oDAHY,iBAIZC,KAAM,CAACN,OAAQA,QACfO,YAAa,CAACC,+BAAyBR,SACvCS,YAAYX,EAAEG,SAGlBG,UAAUM,iBAAiBN,UAAUO,OAAOC,gBAAiBd,IAEvCA,EAAEG,OAEpBY,OAAOC,QAAQC,IAAIjB,EAAEkB,QACrBC,WAAWnB,EAAEkB,WAIjBZ,UAAUM,iBAAiBN,UAAUO,OAAOO,QAASpB,IAG7BA,EAAEG,UAG1BG,UAAUe,QAGRF,WAAYG,aACRC,KAAO3B,SAAS4B,eAAeF,KAAKpB,QACpBqB,KAAK1B,cAAc,mBAC3B4B,YAAYH,KAAKI,cAChBH,KAAK1B,cAAc,mBAC3B4B,YAAYH,KAAKK,OACTJ,KAAK1B,cAAc,mBAC3B4B,YAAYH,KAAKM,OACRL,KAAK1B,cAAc,mBAC3B4B,YAAYH,KAAKO,QACZN,KAAK1B,cAAc,oBAC3B4B,YAAYH,KAAKQ,YAInB,CACHC,KA1DQ,KAEenC,SAASoC,iBAAiB,gBAEhCC,SAASC,eACtBA,aAAatB,iBAAiB,SAASZ,IAC/BD,kBAAkBC"}