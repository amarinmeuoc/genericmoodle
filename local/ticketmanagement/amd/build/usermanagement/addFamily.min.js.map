{"version":3,"file":"addFamily.min.js","sources":["../../src/usermanagement/addFamily.js"],"sourcesContent":["define([\n    'core_form/modalform',\n    'local_ticketmanagement/funciones_comunes'\n],function(ModalForm,funcionesComunes){\n    const url=M.cfg.wwwroot+'/webservice/rest/server.php';\n    const token=document.querySelector('input[name=\"token\"]').value;\n    \n    const init =() => {\n        \n        const boaddfamiliar=document.querySelectorAll('.modify-family');\n\n        boaddfamiliar.forEach((boaddfamily)=>{\n            boaddfamily.addEventListener('click',(e)=>{\n                    showFamilyFormPopup(e);\n            })\n        })\n    }\n\n    const showFamilyFormPopup= (e)=>{\n        \n        e.stopPropagation();\n        const userid=e.target.closest('.modify-family').dataset.userid;\n        const formpopup=\"FamilyFormPopup\";\n        \n        const modalForm=new ModalForm({\n            formClass: `\\\\local_ticketmanagement\\\\form\\\\${formpopup}`,\n            args: {userid: userid},\n            modalConfig: {title: `User details: #${userid}`},\n            returnFocus:e.target\n        });\n\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n            //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n            const formElement=e.target;\n            //Se actualiza\n            window.console.log(e.detail);\n            \n    \n        });\n\n        modalForm.addEventListener(modalForm.events.LOADED, (e) => {\n            \n            // Obtener el formulario modal después de que se ha cargado\n            const formElement = e.target;\n            funcionesComunes.areElementsLoaded('input[name=\"token\"],button[class=\"edit-family\"]', formElement).then((elements) => {\n                    const url=M.cfg.wwwroot+'/webservice/rest/server.php';\n                    const token=document.querySelector('input[name=\"token\"]').value;\n                    formElement.querySelectorAll('.edit-family').forEach(button => {\n                        button.addEventListener('click', (e) => {\n                            const familyId = e.target.dataset.id; // ID del miembro de la familia a editar\n                            const firstname = prompt('Enter first name of the family member:');\n                            const lastname = prompt('Enter last name of the family member:');\n                            const relationship = prompt('Enter relationship to the trainee:');\n                            window.console.log(token);\n                            \n                            if (firstname && lastname && relationship) {\n                                                    \n                                // Crear y configurar la solicitud XMLHttpRequest\n                                let xhr = new XMLHttpRequest();\n\n                                const service= 'edit_family_members';\n\n                                //Se prepara el objeto a enviar\n                                const formData= new FormData();\n                                formData.append('wstoken',token);\n                                formData.append('wsfunction', service);\n                                formData.append('moodlewsrestformat', 'json');\n                                formData.append('params[0][id]',familyId);\n                                formData.append('params[0][firstname]',firstname);\n                                formData.append('params[0][lastname]',lastname);\n                                formData.append('params[0][relationship]',relationship);\n\n                                xhr.open('POST',url,true);\n                    \n                                // Manejar la respuesta\n                                xhr.onreadystatechange = function() {\n                                    if (xhr.readyState === 4) { // La solicitud ha finalizado\n                                        if (xhr.status === 200) { // HTTP 200 OK\n                                            try {\n                                                const response = JSON.parse(xhr.responseText);\n                                                if (response.errorcode) {\n                                                    alert(`Error: ${response.message}`);\n                                                } else {\n                                                    const family = response.listadoFamily;\n                                                    alert(`Family member updated successfully:\n                                                        ID: ${family.id}\n                                                        Name: ${family.name}\n                                                        Last Name: ${family.lastname}\n                                                        Relationship: ${family.relationship}`);\n                                                    location.reload(); // Actualizar la tabla\n                                                }\n                                            } catch (err) {\n                                                console.error('Error parsing response:', err);\n                                                alert('An unexpected error occurred.');\n                                            }\n                                        } else {\n                                            console.error('Request failed:', xhr.status, xhr.statusText);\n                                            alert('Failed to update the family member.');\n                                        }\n                                    }\n                                };\n                    \n                                // Enviar la solicitud\n                                xhr.send(url);\n                            } else {\n                                alert('All fields are required.');\n                            }\n                        });\n                    });\n                });\n \n               \n        });\n        modalForm.show();\n    }\n\n    \n\n    return {\n        init:init\n    }\n})\n\n\n\n\n"],"names":["define","ModalForm","funcionesComunes","M","cfg","wwwroot","document","querySelector","value","showFamilyFormPopup","e","stopPropagation","userid","target","closest","dataset","modalForm","formClass","args","modalConfig","title","returnFocus","addEventListener","events","FORM_SUBMITTED","window","console","log","detail","LOADED","formElement","areElementsLoaded","then","elements","url","token","querySelectorAll","forEach","button","familyId","id","firstname","prompt","lastname","relationship","xhr","XMLHttpRequest","service","formData","FormData","append","open","onreadystatechange","readyState","status","response","JSON","parse","responseText","errorcode","alert","message","family","listadoFamily","name","location","reload","err","error","statusText","send","show","init","boaddfamily"],"mappings":"AAAAA,yDAAO,CACH,sBACA,6CACF,SAASC,UAAUC,kBACPC,EAAEC,IAAIC,QACJC,SAASC,cAAc,uBAAuBC,YAapDC,oBAAsBC,IAExBA,EAAEC,wBACIC,OAAOF,EAAEG,OAAOC,QAAQ,kBAAkBC,QAAQH,OAGlDI,UAAU,IAAIf,UAAU,CAC1BgB,oDAHY,mBAIZC,KAAM,CAACN,OAAQA,QACfO,YAAa,CAACC,+BAAyBR,SACvCS,YAAYX,EAAEG,SAGlBG,UAAUM,iBAAiBN,UAAUO,OAAOC,gBAAiBd,IAEvCA,EAAEG,OAEpBY,OAAOC,QAAQC,IAAIjB,EAAEkB,WAKzBZ,UAAUM,iBAAiBN,UAAUO,OAAOM,QAASnB,UAG3CoB,YAAcpB,EAAEG,OACtBX,iBAAiB6B,kBAAkB,kDAAmDD,aAAaE,MAAMC,iBAC3FC,IAAI/B,EAAEC,IAAIC,QAAQ,8BAClB8B,MAAM7B,SAASC,cAAc,uBAAuBC,MAC1DsB,YAAYM,iBAAiB,gBAAgBC,SAAQC,SACjDA,OAAOhB,iBAAiB,SAAUZ,UACxB6B,SAAW7B,EAAEG,OAAOE,QAAQyB,GAC5BC,UAAYC,OAAO,0CACnBC,SAAWD,OAAO,yCAClBE,aAAeF,OAAO,yCAC5BjB,OAAOC,QAAQC,IAAIQ,OAEfM,WAAaE,UAAYC,aAAc,KAGnCC,IAAM,IAAIC,qBAERC,QAAS,sBAGTC,SAAU,IAAIC,SACpBD,SAASE,OAAO,UAAUf,OAC1Ba,SAASE,OAAO,aAAcH,SAC9BC,SAASE,OAAO,qBAAsB,QACtCF,SAASE,OAAO,gBAAgBX,UAChCS,SAASE,OAAO,uBAAuBT,WACvCO,SAASE,OAAO,sBAAsBP,UACtCK,SAASE,OAAO,0BAA0BN,cAE1CC,IAAIM,KAAK,OAAOjB,KAAI,GAGpBW,IAAIO,mBAAqB,cACE,IAAnBP,IAAIQ,cACe,MAAfR,IAAIS,iBAEMC,SAAWC,KAAKC,MAAMZ,IAAIa,iBAC5BH,SAASI,UACTC,uBAAgBL,SAASM,cACtB,OACGC,OAASP,SAASQ,cACxBH,iHACUE,OAAOtB,8EACLsB,OAAOE,qFACFF,OAAOnB,4FACJmB,OAAOlB,eAC3BqB,SAASC,UAEf,MAAOC,KACLzC,QAAQ0C,MAAM,0BAA2BD,KACzCP,MAAM,sCAGVlC,QAAQ0C,MAAM,kBAAmBvB,IAAIS,OAAQT,IAAIwB,YACjDT,MAAM,wCAMlBf,IAAIyB,KAAKpC,UAET0B,MAAM,wCAQ9B5C,UAAUuD,cAKP,CACHC,KAhHQ,KAEYlE,SAAS8B,iBAAiB,kBAEhCC,SAASoC,cACnBA,YAAYnD,iBAAiB,SAASZ,IAC9BD,oBAAoBC"}