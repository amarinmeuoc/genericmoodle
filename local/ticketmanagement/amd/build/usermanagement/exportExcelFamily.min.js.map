{"version":3,"file":"exportExcelFamily.min.js","sources":["../../src/usermanagement/exportExcelFamily.js"],"sourcesContent":["\nexport const init=(XLSX, filesaver,blobutil)=>{\n    //definicion de url\n    const url=M.cfg.wwwroot+'/webservice/rest/server.php';\n    const token=document.querySelector('input[name=\"token\"]').value;\n    const boexport=document.querySelector('#id_exportExcelFamily');\n    boexport.addEventListener('click',(e)=>{\n        exportToExcel(e,XLSX,filesaver,blobutil, url);\n        \n    });\n}\n\nconst exportToExcel=(e,XLSX,filesaver,blobutil, url)=>{\n        const orderby = document.querySelector('input[name=\"orderby\"]').value;\n        const order = document.querySelector('input[name=\"order\"]').value;\n        const groupid = document.querySelector('#id_vessel').value;\n        const customerid= document.querySelector('#id_project').value;\n        const billid=document.querySelector('#tebillid').value;\n        const nombre=document.querySelector('#tenombre').value;\n        const apellidos=document.querySelector('#teapellidos').value;\n                \n        const obj={\n          \n          order:order,\n          orderby:orderby,\n          \n          groupid:groupid,\n          customerid:customerid,\n          billid:billid,\n          nombre:nombre,\n          apellidos:apellidos\n        }\n\n    prepareDataToSend(obj, url,token);\n}\n\nconst prepareDataToSend=(obj, url,token)=>{\n    let xhr = new XMLHttpRequest();\n\n    const service= 'local_ticketmanagement_get_list_families_excel';\n\n    //Se prepara el objeto a enviar\n    const formData= new FormData();\n    formData.append('wstoken',token);\n    formData.append('wsfunction', service);\n    formData.append('moodlewsrestformat', 'json');\n    formData.append('params[0][customerid]',obj.customerid);\n    formData.append('params[0][groupid]',obj.groupid);\n    formData.append('params[0][order]',obj.order);\n    formData.append('params[0][orderby]',obj.orderby);\n    \n    if ('billid' in obj){\n      formData.append('params[0][billid]',obj.billid);\n    }\n    if ('nombre' in obj){\n      formData.append('params[0][firstname]',obj.nombre);\n    }\n    if ('apellidos' in obj){\n      formData.append('params[0][lastname]',obj.apellidos);\n    }\n    \n    \n    xhr.open('POST',url,true);\n    \n\n    setTimeout(()=>{\n        xhr.send(formData);\n    },100);\n\n    xhr.onload = (ev)=> {\n        onLoadFunction(xhr);\n    }\n\n    xhr.onloadstart=(event)=>{\n        const loader=document.querySelector('.excel_loader');\n        loader.classList.remove('hide');\n        loader.classList.add('show');\n        \n        const boexport=document.querySelector('#id_exportExcelFamily');\n\n        if (boexport)\n            boexport.disabled=true;\n        \n    }\n\n    xhr.onprogress = (event)=>{\n        onProgressFunction(event);\n    } \n    xhr.onloadend=(event)=>{\n        const loader=document.querySelector('.excel_loader');\n        \n        loader.classList.remove('show');\n        loader.classList.add('hide');\n        \n        const boexport=document.querySelector('#id_exportExcelFamily');\n\n        if (boexport)\n            boexport.disabled=false;\n    }\n\n    xhr.onerror = ()=> {\n        window.console.error('Network Error: Unable to send the request.');\n\n        // Opcional: Restablecer el estado de la interfaz\n        const loader = document.querySelector('.excel_loader');\n        loader.classList.remove('show');\n        loader.classList.add('hide');\n\n        const boexport = document.querySelector('#id_exportExcelFamily');\n        if (boexport) boexport.disabled = false;\n    }\n\n}\n\nconst onLoadFunction=(myXhr)=>{\n   \n    if (myXhr.readyState===4 && myXhr.status===200){\n        const res=JSON.parse(myXhr.response);\n        window.console.log(res);\n        createExcelFromJSON(res,'familyReport');\n        \n    }\n}\n\nconst onProgressFunction=(event) =>{\n    console.log(`Uploaded ${event.loaded} of ${event.total}`);\n    const loader=document.querySelector('.loader');\n    loader.classList.remove('.hide');\n    loader.classList.add('.show');\n}\n\nconst createExcelFromJSON = (res, op) => {\n    let listado = [];\n    \n    if (res.family_list && res.family_list.length>0){\n        // Generar títulos basados en las claves del primer objeto\n        const titles = Object.keys(res.family_list[0]);\n        listado.push(titles);\n\n        // Convertir cada objeto a un array de valores y añadirlo al listado\n        const usersArray = res.family_list.map(user => [\n            user.id,\n            user.vessel,\n            user.billid,\n            user.firstname,\n            user.lastname,\n            user.email,\n            user.family_role,\n            user.family_firstname,\n            user.family_lastname,\n            user.family_nie,\n            formatUnixToDateTime(user.family_birthdate),\n            user.family_adeslas,\n            user.family_phone1,\n            user.family_email,\n            formatUnixToDateTime(user.family_arrival),\n            formatUnixToDateTime(user.family_departure),\n            user.family_notes\n        ]);\n        listado = listado.concat(usersArray);\n    }\n    \n\n    // Crear un nuevo libro de Excel\n    const wb = XLSX.utils.book_new();\n    const dr = new Date();\n    const dateFile = dr.getDate();\n    const month = dr.getMonth() + 1;\n    const year = dr.getFullYear();\n    const min = dr.getMinutes();\n    const hour = dr.getHours();\n\n    // Configuración de propiedades del archivo\n    wb.Props = {\n        Title: \"List of familiars\",\n        Subject: \"Training program report\",\n        Author: \"Alberto Marín\",\n        CreateDate: new Date(year, month - 1, dateFile) // Ajuste del mes a base 0\n    };\n\n    // Añadir una hoja de Excel con el nombre \"FamilyReport\"\n    wb.SheetNames.push(\"FamilyReport\");\n    const ws = XLSX.utils.aoa_to_sheet(listado);\n    wb.Sheets[\"FamilyReport\"] = ws;\n\n    // Generar y descargar el archivo\n    const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\n    const nameFile = `FamilyReport-${dateFile}.${month}.${year}-${hour}.${min}.xlsx`;\n    saveAs(new Blob([s2ab(wbout)], { type: \"application/octet-stream\" }), nameFile);\n};\n\n// Función auxiliar para convertir la cadena de datos binarios a ArrayBuffer\nconst s2ab = (s) => {\n    const buf = new ArrayBuffer(s.length);\n    const view = new Uint8Array(buf);\n    for (let i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n};\n\nconst formatUnixToDateTime = (unixTimestamp) => {\n    let date='';\n    if(unixTimestamp!==0){\n        date = new Date(unixTimestamp * 1000); // Convertir de segundos a milisegundos\n        date.setDate(date.getDate() + 1); // Sumar un día\n    }\n    return date;\n};\n\n"],"names":["XLSX","filesaver","blobutil","url","M","cfg","wwwroot","document","querySelector","value","addEventListener","e","exportToExcel","orderby","order","groupid","customerid","billid","nombre","apellidos","prepareDataToSend","token","obj","xhr","XMLHttpRequest","formData","FormData","append","open","setTimeout","send","onload","ev","onLoadFunction","onloadstart","event","loader","classList","remove","add","boexport","disabled","onprogress","onProgressFunction","onloadend","onerror","window","console","error","myXhr","readyState","status","res","JSON","parse","response","log","createExcelFromJSON","loaded","total","op","listado","family_list","length","titles","Object","keys","push","usersArray","map","user","id","vessel","firstname","lastname","email","family_role","family_firstname","family_lastname","family_nie","formatUnixToDateTime","family_birthdate","family_adeslas","family_phone1","family_email","family_arrival","family_departure","family_notes","concat","wb","utils","book_new","dr","Date","dateFile","getDate","month","getMonth","year","getFullYear","min","getMinutes","hour","getHours","Props","Title","Subject","Author","CreateDate","SheetNames","ws","aoa_to_sheet","Sheets","wbout","write","bookType","type","nameFile","saveAs","Blob","s2ab","s","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","unixTimestamp","date","setDate"],"mappings":"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"}