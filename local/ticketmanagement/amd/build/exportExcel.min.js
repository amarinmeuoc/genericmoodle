define("local_ticketmanagement/exportExcel",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=(XLSX,filesaver,blobutil)=>{const url=M.cfg.wwwroot+"/webservice/rest/server.php",token=document.querySelector('input[name="token"]').value,boexport=document.querySelector("#id_exportExcel"),boexportActions=document.querySelector("#id_exportExcelActions");boexport.addEventListener("click",(e=>{exportToExcel(e,XLSX,filesaver,blobutil,url)})),boexportActions.addEventListener("click",(e=>{const startdate=document.querySelector("#startdate").value,startdateValue=new Date(startdate),startdate_unixTimestamp=Math.floor(startdateValue.getTime()/1e3),enddate=document.querySelector("#enddate").value,enddateValue=new Date(enddate),enddate_unixTimestamp=Math.floor(enddateValue.getTime()/1e3),selstate=document.querySelector("#id_state").value,gestorvalue=document.querySelector("#id_logistic").value;exportToExcelActions(startdate_unixTimestamp,enddate_unixTimestamp,selstate,gestorvalue,token,url)}))};const exportToExcelActions=(startdate,enddate,state,gestor,token,url)=>{const xhr=new XMLHttpRequest;xhr.open("POST",url,!0);const formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction","local_ticketmanagement_get_ticket_actions_excel"),formData.append("moodlewsrestformat","json"),formData.append("params[0][startdate]",startdate),formData.append("params[0][enddate]",enddate),formData.append("params[0][state]",state),formData.append("params[0][gestor]",gestor),setTimeout((()=>{xhr.send(formData)}),100),xhr.onload=event=>{onLoadFunctionActions(xhr)},xhr.onloadstart=event=>{showLoader(event)},xhr.onprogress=event=>{onProgressFunction(event)},xhr.onloadend=event=>{hideLoader(event)},xhr.onerror=function(){window.console.log("Solicitud fallida")};const showLoader=event=>{const loader=document.querySelector(".excel_loader");loader.classList.remove("hide"),loader.classList.add("show");document.querySelector("#id_exportExcel").disabled=!0},hideLoader=event=>{const loader=document.querySelector(".excel_loader");loader.classList.remove("show"),loader.classList.add("hide");document.querySelector("#id_exportExcel").disabled=!1}},onLoadFunctionActions=myXhr=>{if(4===myXhr.readyState&&200===myXhr.status){const res=JSON.parse(myXhr.response);createExcelFromJSON(res.listofactions,"actionReport")}},exportToExcel=(e,XLSX,filesaver,blobutil,url)=>{const startdatetxt=document.querySelector("#startdate"),startdateValue=new Date(startdatetxt.value),startdate_unixTimestamp=Math.floor(startdateValue.getTime()/1e3),enddatetxt=document.querySelector("#enddate"),enddateValue=new Date(enddatetxt.value),enddate_unixTimestamp=Math.floor(enddateValue.getTime()/1e3),selstate=document.querySelector("#id_state").value,gestorvalue=document.querySelector("#id_logistic").value;prepareDataToSend({startdate:startdate_unixTimestamp,enddate:enddate_unixTimestamp,state:selstate,gestor:gestorvalue},url,token)},prepareDataToSend=(data,url,token)=>{const xhr=new XMLHttpRequest;xhr.open("POST",url,!0);const formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction","local_ticketmanagement_get_tickets_excel"),formData.append("moodlewsrestformat","json"),formData.append("params[0][startdate]",data.startdate),formData.append("params[0][enddate]",data.enddate),formData.append("params[0][state]",data.state),formData.append("params[0][gestor]",data.gestor),setTimeout((()=>{xhr.send(formData)}),100),xhr.onload=event=>{onLoadFunction(xhr)},xhr.onloadstart=event=>{showLoader(event)},xhr.onprogress=event=>{onProgressFunction(event)},xhr.onloadend=event=>{hideLoader(event)},xhr.onerror=function(){window.console.log("Solicitud fallida")};const showLoader=event=>{const loader=document.querySelector(".excel_loader");loader.classList.remove("hide"),loader.classList.add("show");document.querySelector("#id_exportExcel").disabled=!0},hideLoader=event=>{const loader=document.querySelector(".excel_loader");loader.classList.remove("show"),loader.classList.add("hide");document.querySelector("#id_exportExcel").disabled=!1}},onLoadFunction=myXhr=>{if(4===myXhr.readyState&&200===myXhr.status){const res=JSON.parse(myXhr.response);createExcelFromJSON(res,"ticketReport")}},onProgressFunction=event=>{console.log("Uploaded ".concat(event.loaded," of ").concat(event.total));const loader=document.querySelector(".loader");loader.classList.remove(".hide"),loader.classList.add(".show")},createExcelFromJSON=(res,op)=>{let listado=[];if("ticketReport"===op){const titles=Object.keys(res.listadoTickets[0]);listado.push(titles);const ticketsArray=res.listadoTickets.map((ticket=>[ticket.ticketnumber,ticket.category,ticket.subcategory,ticket.customer,ticket.vessel,ticket.billid,/webservice/i.test(ticket.username)?"no user":ticket.username,ticket.familyissue,ticket.familiarname,ticket.familiar_role,formatUnixToDateTime(ticket.date),formatUnixToDateTime(ticket.lastdate),ticket.state,ticket.description,ticket.priority,ticket.label,ticket.assigned]));listado=listado.concat(ticketsArray)}else if("actionReport"===op){window.console.log("hola");const titles=Object.keys(res[0]);listado.push(titles);const actionArray=res.map((action=>[action.action,action.internal,formatUnixToDateTime(action.dateaction),action.user,action.ticketid]));listado=listado.concat(actionArray)}const wb=XLSX.utils.book_new(),dr=new Date,dateFile=dr.getDate(),month=dr.getMonth()+1,year=dr.getFullYear(),min=dr.getMinutes(),hour=dr.getHours();wb.Props={Title:"ticketReport"===op?"List of tickets":"actionReport",Subject:"Training program report",Author:"Alberto MarÃ­n",CreateDate:new Date(year,month-1,dateFile)};const pageTitle="ticketReport"===op?"TicketsReport":"ActionsReport";wb.SheetNames.push(pageTitle);const ws=XLSX.utils.aoa_to_sheet(listado);wb.Sheets[pageTitle]=ws;const wbout=XLSX.write(wb,{bookType:"xlsx",type:"binary"}),nameFile="".concat(pageTitle,"-").concat(dateFile,".").concat(month,".").concat(year,"-").concat(hour,".").concat(min,".xlsx");saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}),nameFile)},s2ab=s=>{const buf=new ArrayBuffer(s.length),view=new Uint8Array(buf);for(let i=0;i!=s.length;++i)view[i]=255&s.charCodeAt(i);return buf},formatUnixToDateTime=unixTimestamp=>new Date(1e3*unixTimestamp)}));

//# sourceMappingURL=exportExcel.min.js.map