define("local_ticketmanagement/funciones_comunes",["core/modal","core/templates","core_form/modalform","core/toast"],(function(ModalFactory,Templates,ModalForm,addToast){let eventoCat="",eventoSubCat="",eventoPriority="";return{truncateArrayWithActiveMiddle:function(arr,maxLength){const activeIndex=arr.indexOf(arr.find((item=>item.active)));if(-1===activeIndex||arr.length<=maxLength)return arr;const halfLength=Math.floor(maxLength/2),beforeLength=Math.min(halfLength,activeIndex),afterLength=Math.min(halfLength,arr.length-activeIndex-1),truncatedArray=[];for(let i=activeIndex-beforeLength;i<=activeIndex+afterLength;i++)i>=0&&i<arr.length&&truncatedArray.push(arr[i]);return truncatedArray},areElementsLoaded:function(selector){let parentElement=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return new Promise((resolve=>{const checkElements=()=>{const elements=parentElement.querySelectorAll(selector);elements.length>0&&Array.from(elements).every((elem=>null!==elem))?resolve(elements):requestAnimationFrame(checkElements)};checkElements()}))},truncateDateToDay:function(date){return new Date(date.getFullYear(),date.getMonth(),date.getDate()).getTime()/1e3},getFirstAndLastDayOfCurrentWeek:function(){const today=new Date,dayOfWeek=today.getDay(),firstDayOfWeek=new Date(today);firstDayOfWeek.setDate(today.getDate()-dayOfWeek);const lastDayOfWeek=new Date(firstDayOfWeek);return lastDayOfWeek.setDate(lastDayOfWeek.getDate()+6),{firstDayOfWeek:firstDayOfWeek,lastDayOfWeek:lastDayOfWeek}},loadTemplateFromResponse:function(response){const self=this,role=document.querySelector('input[name="role"]').value,template="student"===role?"local_ticketmanagement/content_user-ajax":"local_ticketmanagement/content_log-ajax";Templates.renderForPromise(template,response).then((_ref=>{let{html:html,js:js}=_ref;const content=document.querySelector("#content");content.innerHTML="",Templates.appendNodeContents(content,html,js);const orderlinks=document.querySelectorAll(".orderby");orderlinks.forEach((link=>{link.addEventListener("click",(ev=>{ev.preventDefault();const token=document.querySelector('input[name="token"]'),orderby=(document.querySelector('input[name="page"]'),document.querySelector('input[name="orderby"]')),order=document.querySelector('input[name="order"]');"activo"===ev.target.dataset.activo?"1"===order.value?(ev.target.dataset.order=0,order.value=0):(ev.target.dataset.order=1,order.value=1):(orderlinks.forEach((link=>{link.dataset.activo=""})),ev.target.dataset.activo="activo",orderby.value=ev.target.dataset.orderby,ev.target.dataset.order=1,order.value=1);document.querySelector("li.page-item.active>a").textContent.trim();const startdate=document.querySelector("#startdate"),enddate=document.querySelector("#enddate");if("controller"===role){const startdateUnixFormat=this.truncateDateToDay(new Date(startdate.value)),enddateUnixFormat=this.truncateDateToDay(new Date(enddate.value)),selstate=document.querySelector("#id_state").value,gestorvalue=document.querySelector("#id_logistic").value,obj={activePage:1,firstDayOfWeek:startdateUnixFormat,lastDayOfWeek:enddateUnixFormat,order:parseInt(order.value),orderby:orderby.value,page:1,state:selstate,gestor:gestorvalue};self.requestDataToServer(obj,token.value,url,role)}else if("student"===role){const obj={activePage:1,userid:document.querySelector('input[name="user"]').value,order:order.value,orderby:orderby.value,page:1};self.requestDataToServer(obj,token.value,url,role)}}))}));document.querySelectorAll(".page-link").forEach((page=>{page.addEventListener("click",(ev=>{ev.preventDefault(),ev.stopPropagation();const token=document.querySelector('input[name="token"]'),page=document.querySelector('input[name="page"]'),padre=ev.currentTarget.parentElement;"first"===padre.dataset.control||"last"===padre.dataset.control||"previous"===padre.dataset.control||"next"===padre.dataset.control?page.value=ev.currentTarget.getAttribute("aria-label"):page.value=ev.currentTarget.textContent.trim();const orderby=document.querySelector('input[name="orderby"]').value,order=document.querySelector('input[name="order"]').value,activePage=parseInt(page.value),startdate=document.querySelector("#startdate"),enddate=document.querySelector("#enddate");if("controller"===role){const startdateUnixFormat=this.truncateDateToDay(new Date(startdate.value)),enddateUnixFormat=this.truncateDateToDay(new Date(enddate.value)),selstate=document.querySelector("#id_state").value,gestorvalue=document.querySelector("#id_logistic").value,obj={activePage:activePage,firstDayOfWeek:startdateUnixFormat,lastDayOfWeek:enddateUnixFormat,order:parseInt(order),orderby:orderby,page:parseInt(page.value),state:selstate,gestor:gestorvalue};self.requestDataToServer(obj,token.value,url,role)}else if("student"===role){const obj={activePage:activePage,userid:document.querySelector('input[name="user"]').value,order:order,orderby:orderby,page:parseInt(page.value)};self.requestDataToServer(obj,token.value,url,role)}}))}));document.querySelectorAll("#tablebody input[type='checkbox']").forEach((chk=>{chk.addEventListener("click",(e=>{const ticket=e.target.dataset.ticketid,value=e.target.checked?1:0,token=document.querySelector('input[name="token"]').value;this.updateCommunication(ticket,value,token,url)}))}))})).catch((error=>displayException(error)))},reqHandlerGetTickets:function(xhr){if(4===xhr.readyState&&200===xhr.status&&xhr.response){const response=JSON.parse(xhr.response);response.pages=this.truncateArrayWithActiveMiddle(response.pages,8),this.loadTemplateFromResponse(response),window.console.log(response)}},requestDataToServer:function(obj,token,url,role){const self=this;let xhr=new XMLHttpRequest;const service="student"===role?"local_ticketmanagement_get_tickets_byUserId":"local_ticketmanagement_get_tickets",formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction",service),formData.append("moodlewsrestformat","json"),"student"===role?(formData.append("params[0][order]",obj.order),formData.append("params[0][orderby]",obj.orderby),formData.append("params[0][page]",obj.page),formData.append("params[0][userid]",obj.userid),formData.append("params[0][activePage]",obj.activePage)):"controller"===role&&(formData.append("params[0][order]",obj.order),formData.append("params[0][orderby]",obj.orderby),formData.append("params[0][page]",obj.page),formData.append("params[0][startdate]",obj.firstDayOfWeek),formData.append("params[0][enddate]",obj.lastDayOfWeek),formData.append("params[0][activePage]",obj.activePage),formData.append("params[0][state]",obj.state),formData.append("params[0][gestor]",obj.gestor)),xhr.open("POST",url,!0),setTimeout((()=>{xhr.send(formData)}),100),xhr.onload=ev=>{self.reqHandlerGetTickets(xhr)},xhr.onloadstart=event=>{self.showLoader(event)},xhr.onprogress=event=>{self.onProgressFunction(event)},xhr.onloadend=event=>{self.hideLoader(event)},xhr.onerror=()=>{self.rejectAnswer(xhr)}},showLoader:function(event){const loader=document.querySelector(".loader"),table=document.querySelector(".generaltable");loader.classList.remove("hide"),loader.classList.add("show"),table.classList.add("hide");const bosearch=document.querySelector("#id_bosearchdate"),bosearchbyID=document.querySelector("#id_bosearchbyid");bosearch&&(bosearch.disabled=!0),bosearchbyID&&(bosearchbyID.disabled=!0)},hideLoader:function(event){const loader=document.querySelector(".loader"),table=document.querySelector(".generaltable");loader.classList.remove("show"),loader.classList.add("hide"),table.classList.remove("hide");const bosearch=document.querySelector("#id_bosearchdate"),bosearchbyID=document.querySelector("#id_bosearchbyid");bosearch&&(bosearch.disabled=!1),bosearchbyID&&(bosearchbyID.disabled=!1)},onProgressFunction:function(event){console.log("Uploaded ".concat(event.loaded," of ").concat(event.total));const loader=document.querySelector(".loader");loader.classList.remove(".hide"),loader.classList.add(".show")},showTicketFormPopup:function(e,role){const self=this;e.stopPropagation();const ticketId=e.target.textContent.trim(),formpopup="controller"===role?"TicketFormPopup":"TicketFormPopupStudent";window.console.log(role);const modalForm=new ModalForm({formClass:"\\local_ticketmanagement\\form\\".concat(formpopup),args:{num_ticket:ticketId},modalConfig:{title:"Ticket details: #".concat(ticketId)},returnFocus:e.target});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{var _formElement$querySel;const subcategoryValue=null===(_formElement$querySel=e.target.querySelector('select[name="subcategory"]'))||void 0===_formElement$querySel?void 0:_formElement$querySel.value;window.console.log(e.detail),subcategoryValue&&(e.detail.subcategory=subcategoryValue),"controller"===role&&self.updateTicket(e.detail,token,url,role)})),modalForm.addEventListener(modalForm.events.LOADED,(e=>{const self=this,formElement=e.target;self.areElementsLoaded('select[name="category"], select[name="subcategory"]',formElement).then((elements=>{const categorySelect=formElement.querySelector('select[name="category"]'),subcategorySelect=formElement.querySelector('select[name="subcategory"]');if(formElement.querySelector('select[name="priority"]').addEventListener("change",(e=>{eventoPriority=e.target.value})),categorySelect&&subcategorySelect?(categorySelect.addEventListener("change",(event=>{const selectedCategory=event.target.value;window.console.log("Categoría seleccionada: ".concat(selectedCategory)),eventoCat=event.target.value,self.updateSubcategory(selectedCategory,subcategorySelect,token)})),subcategorySelect.addEventListener("change",(e=>{eventoSubCat=e.target.value}))):window.console.error("Los selectores de categoría y subcategoría no están disponibles."),"controller"===role){const closebox=formElement.querySelector("input[type='checkbox'][name='close']"),cancelledbox=formElement.querySelector("input[type='checkbox'][name='cancelled']"),bosave=formElement.querySelector(".btn-primary");closebox.checked&&(bosave.disabled=!0,closebox.disabled=!0),cancelledbox.checked&&(bosave.disabled=!0,cancelledbox.disabled=!0)}})).catch((error=>{window.console.error("Error al cargar los elementos select:",error)}))})),modalForm.show()},updateTicket:function(obj,token,url,role){const self=this;let xhr=new XMLHttpRequest;const service="controller"===role?"local_ticketmanagement_edit_ticket":"local_ticketmanagement_edit_ticket_byUser",formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction",service),formData.append("moodlewsrestformat","json"),formData.append("params[0][ticketid]",obj.ticketid),formData.append("params[0][fileid]",obj.attachments),formData.append("params[0][cancelled]",obj.cancelled),formData.append("params[0][state]",obj.hiddenstate),formData.append("params[0][priority]",obj.priority),formData.append("params[0][closed]",obj.close),formData.append("params[0][category]",obj.subcategory),formData.append("params[0][eventoCat]",eventoCat),formData.append("params[0][eventoSubCat]",eventoSubCat),formData.append("params[0][eventoPriority]",eventoPriority),xhr.open("POST",url,!0),xhr.send(formData),xhr.onload=ev=>{self.reqHandlerUpdateTicket(xhr)},xhr.onerror=()=>{rejectAnswer(xhr)}},reqHandlerUpdateTicket:function(xhr){if(4===xhr.readyState&&200===xhr.status&&xhr.response){const response=JSON.parse(xhr.response);if(response){window.console.log(response.ticket);const ticket=response.ticket;this.updateTemplate(ticket)}}},updateTemplate:function(ticket){const fila=document.querySelector("#".concat(ticket.ticketid)),state=fila.querySelector("td:nth-child(6)"),priority=fila.querySelector("td:nth-child(8)");if(state.textContent=ticket.state,priority.textContent=ticket.priority,window.console.log("edicion..."),"Closed"===ticket.state||"Cancelled"===ticket.state){fila.classList.add("cerrado");const boAssigment=fila.querySelector(".assignbtn");boAssigment.addEventListener("click",(event=>{event.stopPropagation(),event.preventDefault()})),boAssigment.style.cursor="not-allowed"}},updateSubcategory:function(categoryid,subcategorySelect,token){const self=this;let xhr=new XMLHttpRequest;const formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction","local_ticketmanagement_load_subcategories"),formData.append("moodlewsrestformat","json"),formData.append("params[0][categoryid]",categoryid),xhr.open("POST",url,!0),xhr.send(formData),xhr.onload=ev=>{self.reqHandlerLoadSubcategories(xhr,subcategorySelect)},xhr.onerror=()=>{rejectAnswer(xhr)}},reqHandlerLoadSubcategories:function(xhr,subcategorySelect){if(4===xhr.readyState&&200===xhr.status&&xhr.response){const response=JSON.parse(xhr.response),selsubcategory=subcategorySelect;if(response){selsubcategory.innerHTML="";optionsHTML="",response.forEach((optionData=>{optionsHTML+='<option value="'.concat(optionData.id,'">').concat(optionData.subcategory,"</option>")})),selsubcategory.innerHTML=optionsHTML}}},updateCommunication:function(ticketid,value,token,url){const self=this;let xhr=new XMLHttpRequest;const formData=new FormData;formData.append("wstoken",token),formData.append("wsfunction","local_ticketmanagement_update_ticket_communication"),formData.append("moodlewsrestformat","json"),formData.append("params[0][ticketid]",ticketid),formData.append("params[0][value]",value),xhr.open("POST",url,!0),xhr.send(formData),xhr.onload=ev=>{self.reqHandlerUpdateCommunication(xhr)},xhr.onerror=()=>{rejectAnswer(xhr)}},reqHandlerUpdateCommunication:function(xhr){if(4===xhr.readyState&&200===xhr.status&&xhr.response){const response=JSON.parse(xhr.response);window.console.log(response),addToast.add("Now user attached to the ticket: ".concat(response.ticket.ticketid," is ").concat(!0===response.ticket.communication?"allowed":"not allowed"," to update messages in the ticket."))}},reqHandlerLoadActions:function(xhr){if(4===xhr.readyState&&200===xhr.status&&xhr.response){const response=JSON.parse(xhr.response);response.allowfeedback?this.showTicketActionsWithFeedback(response.result):this.loadActionsTemplate(response.result),window.console.log(response)}},loadActionsTemplate:function(response){const modalContent='\n              <div class="modal-body">\n                <p>This is the list of actions ordered by date</p>\n            </div>\n            <div class="table-responsive" style="max-height:300px">\n                <table class="generaltable table-sm">\n                    <thead>\n                        <tr>\n                            <th>Date</th>\n                            <th>Task</th>\n                            <th>Done by</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        '+response.map((action=>"\n                                <tr>\n                                    <td>".concat(action.dateaction,"</td>\n                                    <td>").concat(action.action,"</td>\n                                    <td>").concat(action.user,"</td>\n                                </tr>\n                            "))).join("")+'</tbody>\n                </table>\n            </div>\n            <div class="modal-footer">\n                <button type="button" class="btn btn-primary" data-action="confirm">Accept</button>\n            </div>';ModalFactory.create({title:"Actions history",body:modalContent,size:"modal-xl"}).then((modal=>{window.console.log(modal),modal.getRoot()[0].querySelector('[data-action="confirm"]').onclick=function(){modal.hide()},modal.show()}))},showTicketActionsWithFeedback:function(arr){const ticketId=arr[0].ticketid,modalForm=new ModalForm({formClass:"\\local_ticketmanagement\\form\\ActionsFormPopup",args:{num_ticket:ticketId,role:"student"},modalConfig:{title:"Ticket details: #".concat(ticketId)},returnFocus:e.target});modalForm.show(),modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{addToast.add("Ticket: ".concat(e.detail.hiddenticketid," has been updated. Your message has been recieved by the support team."))})),modalForm.addEventListener(modalForm.events.LOADED,(e=>{const formElement=e.target;this.areElementsLoaded('button[name="boExcel"],input[name="description"],input[name="state"]',formElement).then((elements=>{const state=formElement.querySelector('input[name="state"]').value;if("Cancelled"===state||"Closed"===state){formElement.querySelector('input[name="description"]').disabled=!0;formElement.querySelector('button[data-action="save"]').disabled=!0}formElement.querySelector('button[name="boExcel"]')})).catch((error=>{window.console.error("Error al cargar los elementos:",error)}))}))}}}));

//# sourceMappingURL=funciones_comunes.min.js.map