{"version":3,"file":"addTicket.min.js","sources":["../src/addTicket.js"],"sourcesContent":["\n\ndefine(['core_form/modalform',\n        'core/notification',\n        'core/toast',\n        'core/notification',\n        'core/templates',\n        'local_ticketmanagement/funciones_comunes'], \n        function(ModalForm, Notification, addToast, displayException, Templates, funcionesComunes){\n              const url=M.cfg.wwwroot+'/webservice/rest/server.php';\n              const token=document.querySelector('input[name=\"token\"]').value;\n              \n              \n              const init =() => {\n                  const bonewticket=document.querySelector(\"#id_bocreate\");\n                  bonewticket.addEventListener('click',(e)=>{\n                      e.preventDefault();\n                      e.stopImmediatePropagation();\n                      const project=document.querySelector('#id_project').value;\n                      const vessel=document.querySelector('#id_vessel').value;\n                      const trainee=document.querySelector('#id_userlist').value;\n                      const category=(document.querySelector('#id_category').value)?document.querySelector('#id_category').value:0;\n                      const subcategory=(document.querySelector('#id_subcategory').value)?document.querySelector('#id_subcategory').value:0;\n                      \n                      \n                      const familyissue=document.querySelector('#id_familyissue').value;\n                      const description=document.querySelector('textarea[name=\"description[text]\"]').value;\n                      const gestorid=document.querySelector('input[name=\"gestorid\"]').value;\n                      //const fileid=document.querySelector('#id_attachments').value;\n                      let familiar=trainee;\n                      if (familyissue==='yes'){\n                        if (document.querySelector('#id_familiar').value!=='')\n                          familiar=document.querySelector('#id_familiar').value;\n                      }\n                      const newTicket={\n                          projectid:project,\n                          vesselid:vessel,\n                          traineeid:trainee,\n                          categoryid:category,\n                          subcategoryid:subcategory,\n                          state:\"Open\",\n                          priority:\"Medium\",\n                          description:description,\n                          gestorid:gestorid,\n                          familiarid:familiar\n                      };\n              \n                      if (category!==0 && subcategory!==0)\n                        createNewTicket(newTicket);\n                      else{\n                        Notification.addNotification({message:'Error: No categories have been defined yet. No ticket has been inserted',type:'error'});\n                      }\n              \n                  })\n              }\n              \n              const createNewTicket=(newTicket)=>{\n                  let xhr = new XMLHttpRequest();\n                  \n                  //Se prepara el objeto a enviar\n                  const formData= new FormData();\n                  formData.append('wstoken',token);\n                  formData.append('wsfunction', 'local_ticketmanagement_add_ticket');\n                  formData.append('moodlewsrestformat', 'json');\n                  formData.append('params[0][subcategoryid]',newTicket.subcategoryid);\n                  formData.append('params[0][traineeid]',newTicket.traineeid);\n                  formData.append('params[0][state]',newTicket.state);\n                  formData.append('params[0][priority]',newTicket.priority);\n                  formData.append('params[0][description]',newTicket.description);\n                  formData.append('params[0][familiarid]',newTicket.familiarid);\n                  formData.append('params[0][gestorid]',newTicket.gestorid);\n              \n                  xhr.open('POST',url,true);\n                  xhr.send(formData);\n              \n                  xhr.onload = (ev)=> {\n                      reqHandlerNewTicket(xhr);\n                  }\n              \n                  xhr.onerror = ()=> {\n                      rejectAnswer(xhr);\n                  }\n              }\n              \n              const reqHandlerNewTicket = (xhr) => {\n                if (xhr.readyState === 4 && xhr.status === 200) {\n                    if (xhr.response) {\n                        const response = JSON.parse(xhr.response);\n              \n                        if (response) {\n                            window.console.log(\"alberto\");\n                            addToast.add('Ticket created successfully: ' + response.id);\n              \n                            // Actualiza el número de tickets y las páginas\n                            let numRecords = parseInt(document.querySelector('#num_total_records').textContent.trim()) + 1;\n                            let numPages = Math.ceil(numRecords / 25); // Cálculo de las páginas necesarias\n                            let currentPage = numPages;\n              \n                            // Actualiza la lista de páginas en el paginador\n                            const pageList = [];\n                            let pagePrevious = Math.max(1, currentPage - 1);\n                            let pageNext = currentPage + 1;\n                            if (numPages===1){\n                              pageNext=1;\n                            }\n                            \n                            \n                            for (let i = 1; i <= numPages; i++) {\n                                pageList.push({\n                                    page: i,\n                                    active: i === currentPage\n                                });\n                            }\n              \n                            const formattedResponse = {\n                                listadoTickets: [{\n                                    ticketnumber: response.id,\n                                    username: response.username,\n                                    familyissue: response.familyissue,\n                                    state: response.state,\n                                    priority: response.priority,\n                                    assigned: 'Waiting to be assigned.',\n                                    date: response.dateticket,\n                                    description: response.description,\n                                    familyissue: response.familyissue\n                                }],\n                                num_records: numRecords,\n                                num_total_records: numRecords,\n                                num_pages: numPages,\n                                pages: funcionesComunes.truncateArrayWithActiveMiddle(pageList,8),\n                                previous: [{\n                                    page: pagePrevious,\n                                    url: '#'\n                                }],\n                                next: [{\n                                    page: pageNext,\n                                    url: '#'\n                                }],\n                                first: [{\n                                    page: 1,\n                                    url: '#'\n                                }],\n                                last: [{\n                                    page: numPages,\n                                    url: '#'\n                                }],\n                            };\n              \n                            addTickettoTemplate(formattedResponse);\n                        } else {\n                            addToast.add('Something went wrong. No ticket created');\n                        }\n                    }\n                }\n              };\n              \n              \n              function addTickettoTemplate(response){\n                  //Render the choosen mustache template by Javascript\n                  Templates.renderForPromise('local_ticketmanagement/tr_log-ajax',response)\n                  .then(({html,js})=>{\n                    const content=document.querySelector('#tablebody');\n                    const numRecords = document.querySelectorAll('.tickets').length;\n                    \n                    // Si el número total de registros supera los 25, limpiar la tabla para una nueva página\n                    if (numRecords >= 25) {\n                      content.innerHTML = '';  // Limpiar solo cuando se supere el límite de 25 registros\n                    }\n              \n                    Templates.appendNodeContents(content,html,js);\n                    const newTicket=document.querySelectorAll('.tickets')[document.querySelectorAll('.tickets').length-1];\n                    newTicket.addEventListener('click',(e)=>{\n                      \n                        funcionesComunes.showTicketFormPopup(e,'controller');\n                      \n                    });\n              \n                    const logs=document.querySelectorAll('.logs')[document.querySelectorAll('.logs').length-1];\n              \n                  \n                      logs.addEventListener('click',(e)=>{\n                        const filaPadre=e.target.closest('tr');\n                        \n                          showTicketActions(e);\n                        \n                      })\n                \n              \n                    const assignbtn=document.querySelectorAll('.assignbtn')[document.querySelectorAll('.assignbtn').length-1];\n                    assignbtn.addEventListener('click',(e)=>{\n                      const filaPadre=e.target.closest('tr');\n                      if (!filaPadre.classList.contains('cerrado')){\n                        \n                        showAssigmentFormPopup(e);\n                      } else {\n                        e.preventDefault();\n                        e.stopPropagation();\n                      }\n                      \n                    })\n              \n              \n                    //En caso de que se superen 25 tickets por página, se crea una nueva página y añade el registro ahí\n              \n              \n                    Templates.renderForPromise('local_ticketmanagement/pagebar_log-ajax',response)\n                    .then(({html,js})=>{\n                      const content=document.querySelector('#pagination');\n                      content.innerHTML='';\n                      Templates.appendNodeContents(content,html,js);\n              \n              \n                      const pages=document.querySelectorAll('.page-link');\n                      pages.forEach((page)=>{\n                        page.addEventListener('click',(ev)=>{\n                          window.console.log('adleante');\n                          ev.preventDefault();\n                          ev.stopPropagation();\n                          const token = document.querySelector('input[name=\"token\"]').value;\n                          const page= document.querySelector('input[name=\"page\"]');\n                  \n                          //Se obtiene el elemento padre del elemento clicado\n                          const padre=ev.currentTarget.parentElement;\n                          \n                          if (padre.dataset.control==='first' || padre.dataset.control==='last' || padre.dataset.control==='previous' || padre.dataset.control==='next'){\n                            //Si es la primera página se coge el valor de arial-label\n                            page.value=ev.currentTarget.getAttribute('aria-label');\n                          } else {\n                            page.value=ev.currentTarget.textContent.trim();\n                          }\n                          \n                          //Obtenemos el ordenamiento y el campo de orden actuales\n                          const orderby = document.querySelector('input[name=\"orderby\"]').value;\n                          const order = document.querySelector('input[name=\"order\"]').value;\n                          const activePage=parseInt(page.value);\n                          const startdate= document.querySelector('#startdate');\n                          const enddate= document.querySelector('#enddate');\n                  \n                          const startdateUnixFormat=funcionesComunes.truncateDateToDay(new Date(startdate.value));\n                          const enddateUnixFormat=funcionesComunes.truncateDateToDay(new Date(enddate.value));\n\n                          const obj={\n                            activePage:activePage,\n                            firstDayOfWeek:startdateUnixFormat,\n                            lastDayOfWeek:enddateUnixFormat,\n                            order:parseInt(order),\n                            orderby:orderby,\n                            page:parseInt(page.value),\n                          }\n                          \n                          funcionesComunes.requestDataToServer(obj, token, url,'controller');\n                  \n                          \n                        });\n                      });\n                      \n                    }).catch((error)=>displayException(error));\n                  }).catch((error)=>displayException(error));\n                }\n                \n              const showAssigmentFormPopup=(e)=>{\n                e.stopPropagation();\n                const fila=e.target.closest('tr');\n                const ticket=fila.querySelector('.tickets');\n                const ticketId=ticket.textContent;\n                const modalForm=new ModalForm({\n                    formClass: \"\\\\local_ticketmanagement\\\\form\\\\AssignmentFormPopup\",\n                    args: {num_ticket: ticketId},\n                    modalConfig: {title: `Ticket details: #${ticketId}`},\n                    returnFocus:e.target\n                });\n              \n                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n                    //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n                      \n                    const ticket=e.detail.ticket;\n                    const td=document.querySelector(`td a.assignbtn[data-ticketid=\"${ticket.id}\"]`).parentElement;\n                    const link=document.querySelector(`a.assignbtn[data-ticketid=\"${ticket.id}\"]`)\n                    const span = link.nextElementSibling; \n                    span.textContent=ticket.user;\n                    const state=document.querySelector(`td a.assignbtn[data-ticketid=\"${ticket.id}\"]`).parentElement.parentElement.children[4];\n                    state.textContent=ticket.state;\n                });\n              \n                modalForm.addEventListener(modalForm.events.LOADED, (e)=>{\n                    //Changing the text of the dynamic button\n                    //e.target.querySelector(\"button[data-action='save']\").textContent=\"Send Email\"\n                    \n                    }\n                );\n                \n                modalForm.show();\n              \n              }\n              \n              const showTicketActions=(e)=>{\n                e.stopPropagation();\n                const ticketId=e.target.dataset.ticketid;\n                const modalForm=new ModalForm({\n                    formClass: \"\\\\local_ticketmanagement\\\\form\\\\ActionsFormPopup\",\n                    args: {num_ticket: ticketId},\n                    modalConfig: {title: `Ticket details: #${ticketId}`},\n                    returnFocus:e.target\n                });\n              \n                modalForm.show();\n              \n              \n                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n                    //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n                });\n              \n                // Listen for the modal LOADED event\n                modalForm.addEventListener(modalForm.events.LOADED, (e) => {\n                    // Get the button after the modal is fully loaded\n                    // Get the modal element after it is loaded\n                    \n                    funcionesComunes.areElementsLoaded('#boactionid').then((elements)=>{\n                        const addActionBtn = (elements.length>0)?elements[0]:null;\n                        \n                        if (addActionBtn) {\n                            // Add an event listener to the button\n                            addActionBtn.addEventListener('click', function() {\n                                console.log('Add Action button clicked!');\n                            });\n                        }\n              \n                    })\n                });\n              }\n             \n              return {\n                init:init\n              }\n              \n        });\n\n\n"],"names":["define","ModalForm","Notification","addToast","displayException","Templates","funcionesComunes","url","M","cfg","wwwroot","token","document","querySelector","value","createNewTicket","newTicket","xhr","XMLHttpRequest","formData","FormData","append","subcategoryid","traineeid","state","priority","description","familiarid","gestorid","open","send","onload","ev","reqHandlerNewTicket","onerror","rejectAnswer","readyState","status","response","JSON","parse","window","console","log","add","id","numRecords","parseInt","textContent","trim","numPages","Math","ceil","currentPage","pageList","pagePrevious","max","pageNext","i","push","page","active","renderForPromise","then","_ref","html","js","content","querySelectorAll","length","innerHTML","appendNodeContents","addEventListener","e","showTicketFormPopup","target","closest","showTicketActions","classList","contains","preventDefault","stopPropagation","showAssigmentFormPopup","_ref2","forEach","padre","currentTarget","parentElement","dataset","control","getAttribute","orderby","order","activePage","startdate","enddate","obj","firstDayOfWeek","truncateDateToDay","Date","lastDayOfWeek","requestDataToServer","catch","error","addTickettoTemplate","listadoTickets","ticketnumber","username","familyissue","assigned","date","dateticket","num_records","num_total_records","num_pages","pages","truncateArrayWithActiveMiddle","previous","next","first","last","ticketId","modalForm","formClass","args","num_ticket","modalConfig","title","returnFocus","events","FORM_SUBMITTED","ticket","detail","nextElementSibling","user","children","LOADED","show","ticketid","areElementsLoaded","elements","addActionBtn","init","stopImmediatePropagation","project","vessel","trainee","category","subcategory","familiar","projectid","vesselid","categoryid","addNotification","message","type"],"mappings":"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"}