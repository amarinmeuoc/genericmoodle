{"version":3,"file":"addTicket.min.js","sources":["../src/addTicket.js"],"sourcesContent":["\n\ndefine(['core_form/modalform',\n        'core/notification',\n        'core/toast',\n        'core/notification',\n        'core/templates',\n        'local_ticketmanagement/funciones_comunes'], \n        function(ModalForm, Notification, addToast, displayException, Templates, funcionesComunes){\n              const url=M.cfg.wwwroot+'/webservice/rest/server.php';\n              const token=document.querySelector('input[name=\"token\"]').value;\n              \n              \n              const init =() => {\n                  const bonewticket=document.querySelector(\"#id_bocreate\");\n\n                  if (bonewticket){\n                      bonewticket.addEventListener('click',(e)=>{\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        const project=document.querySelector('#id_project').value;\n                        const vessel=document.querySelector('#id_vessel').value;\n                        let trainee=document.querySelector('#id_userlist').value;\n                        if (trainee==='' || typeof trainee==='undefined'){\n                          if (document.querySelector('#id_userlist').length>0)\n                            trainee=document.querySelector('#id_userlist')[0].value;\n                          else\n                            trainee=-1;\n                        }\n                        const category=(document.querySelector('#id_category').value)?document.querySelector('#id_category').value:0;\n                        const subcategory=(document.querySelector('#id_subcategory').value)?document.querySelector('#id_subcategory').value:0;\n                        \n                        \n                        const familyissue=document.querySelector('#id_familyissue').value;\n                        const description=document.querySelector('textarea[name=\"description[text]\"]').value;\n                        const gestorid=document.querySelector('input[name=\"gestorid\"]').value;\n                        const id_assigment=document.querySelector('#id_assigment').value;\n\n                        let label_field='';\n                        if (id_assigment==='no'){\n                          if (document.querySelector('#id_field_name').value!=='')\n                            label_field=document.querySelector('#id_field_name').value.trim().toLowerCase();\n                        }\n\n                        \n\n                        \n                        //const fileid=document.querySelector('#id_attachments').value;\n                        let familiar=trainee;\n                        if (familyissue==='yes'){\n                          if (document.querySelector('#id_familiar').value!=='')\n                            familiar=document.querySelector('#id_familiar').value;\n                        }\n                        const newTicket={\n                            projectid:project,\n                            vesselid:vessel,\n                            traineeid:trainee,\n                            categoryid:category,\n                            subcategoryid:subcategory,\n                            state:\"Open\",\n                            priority:\"Medium\",\n                            description:description,\n                            gestorid:gestorid,\n                            familiarid:familiar,\n                            label_field:label_field\n                  \n                        };\n                \n                        if (category!==0 && subcategory!==0)\n                          createNewTicket(newTicket);\n                        else{\n                          Notification.addNotification({message:'Error: No categories have been defined yet. No ticket has been inserted',type:'error'});\n                        }\n                \n                      })\n                  }\n                 \n              }\n              \n              const createNewTicket=(newTicket)=>{\n                  if (newTicket.familiarid=='0'){\n                    addToast.add('No ticket created: Is not allowed to open a ticket over a family member if it hasnt been registered yet. Please, choose the right option',{\n                      type:0\n                    });\n                    return;\n                  } else {\n                    const label_field=document.querySelector('#id_field_name').value;\n                    if (label_field.split(/\\s+/).length>1){\n                      addToast.add('No ticket created: The ticket only can be assigned to only one key-word',{\n                        type:0\n                      });\n                      return;\n                    }\n                  }\n                  const familyissue=document.querySelector('#id_familyissue').value;\n                  const id_assigment=document.querySelector('#id_assigment').value;\n\n                  if (familyissue==='yes' && id_assigment==='no'){\n                    addToast.add('No ticket created. You cant select to open a ticket over a familiar member and not linked to an user',{\n                      type:0\n                    });\n                    return;\n                  }\n\n                  let xhr = new XMLHttpRequest();\n                  \n                  //Se prepara el objeto a enviar\n                  const formData= new FormData();\n                  formData.append('wstoken',token);\n                  formData.append('wsfunction', 'local_ticketmanagement_add_ticket');\n                  formData.append('moodlewsrestformat', 'json');\n                  formData.append('params[0][subcategoryid]',newTicket.subcategoryid);\n                  formData.append('params[0][traineeid]',newTicket.traineeid);\n                  formData.append('params[0][state]',newTicket.state);\n                  formData.append('params[0][priority]',newTicket.priority);\n                  formData.append('params[0][description]',newTicket.description);\n                  formData.append('params[0][familiarid]',newTicket.familiarid);\n                  formData.append('params[0][gestorid]',newTicket.gestorid);\n                  formData.append('params[0][label_field]',newTicket.label_field);\n                 \n                  \n\n                  xhr.open('POST',url,true);\n                  xhr.send(formData);\n              \n                  xhr.onload = (ev)=> {\n                      reqHandlerNewTicket(xhr);\n                  }\n              \n                  xhr.onerror = ()=> {\n                      rejectAnswer(xhr);\n                  }\n              }\n              \n              const reqHandlerNewTicket = (xhr) => {\n                if (xhr.readyState === 4 && xhr.status === 200) {\n                    if (xhr.response) {\n                        const response = JSON.parse(xhr.response);\n              \n                        if (response.id) {\n                            \n                            addToast.add('Ticket created successfully: ' + response.id);\n              \n                            // Actualiza el número de tickets y las páginas\n                            let numRecords = parseInt(document.querySelector('#num_total_records').textContent.trim()) + 1;\n                            let numPages = Math.ceil(numRecords / 25); // Cálculo de las páginas necesarias\n                            let currentPage = numPages;\n              \n                            // Actualiza la lista de páginas en el paginador\n                            const pageList = [];\n                            let pagePrevious = Math.max(1, currentPage - 1);\n                            let pageNext = currentPage + 1;\n                            if (numPages===1){\n                              pageNext=1;\n                            }\n                            \n                            \n                            for (let i = 1; i <= numPages; i++) {\n                                pageList.push({\n                                    page: i,\n                                    active: i === currentPage\n                                });\n                            }\n              \n                            const formattedResponse = {\n                                listadoTickets: [{\n                                    ticketnumber: response.id,\n                                    username: response.username,\n                                    familyissue: response.familyissue,\n                                    state: response.state,\n                                    priority: response.priority,\n                                    assigned: 'Waiting to be assigned.',\n                                    date: response.dateticket,\n                                    description: response.description,\n                                    familyissue: response.familyissue,\n                                    color:'yellow'\n                                }],\n                                num_records: numRecords,\n                                num_total_records: numRecords,\n                                num_pages: numPages,\n                                pages: funcionesComunes.truncateArrayWithActiveMiddle(pageList,8),\n                                previous: [{\n                                    page: pagePrevious,\n                                    url: '#'\n                                }],\n                                next: [{\n                                    page: pageNext,\n                                    url: '#'\n                                }],\n                                first: [{\n                                    page: 1,\n                                    url: '#'\n                                }],\n                                last: [{\n                                    page: numPages,\n                                    url: '#'\n                                }],\n                            };\n              \n                            addTickettoTemplate(formattedResponse);\n                        } else {\n                            addToast.add(`No ticket created. There is some missing information, please check the form.`, \n                                        {\n                                            type: 'warning',\n                                        }\n                            );\n                        }\n                    }\n                }\n              };\n              \n              \n              function addTickettoTemplate(response){\n                  //Render the choosen mustache template by Javascript\n                  Templates.renderForPromise('local_ticketmanagement/tr_log-ajax',response)\n                  .then(({html,js})=>{\n                    const content=document.querySelector('#tablebody');\n                    const numRecords = document.querySelectorAll('.tickets').length;\n                    \n                    // Si el número total de registros supera los 25, limpiar la tabla para una nueva página\n                    if (numRecords >= 25) {\n                      content.innerHTML = '';  // Limpiar solo cuando se supere el límite de 25 registros\n                    }\n              \n                    Templates.appendNodeContents(content,html,js);\n                    const newTicket=document.querySelectorAll('.tickets')[document.querySelectorAll('.tickets').length-1];\n                    newTicket.addEventListener('click',(e)=>{\n                      \n                        funcionesComunes.showTicketFormPopup(e,'controller');\n                      \n                    });\n              \n                    const logs=document.querySelectorAll('.logs')[document.querySelectorAll('.logs').length-1];\n              \n                  \n                      logs.addEventListener('click',(e)=>{\n                        const filaPadre=e.target.closest('tr');\n                        \n                          showTicketActions(e);\n                        \n                      })\n\n                      const chk_communication=document.querySelectorAll(\"#tablebody input[type='checkbox']\");\n\n                      chk_communication.forEach((chk)=>{\n                          chk.addEventListener('click',(e)=>{\n                          const ticket=e.target.dataset.ticketid;\n                          const value=(e.target.checked)?1:0;\n                          const token = document.querySelector('input[name=\"token\"]').value;\n                          funcionesComunes.updateCommunication(ticket,value,token,url); \n                          })\n                      })\n                \n              \n                    const assignbtn=document.querySelectorAll('.assignbtn')[document.querySelectorAll('.assignbtn').length-1];\n                    assignbtn.addEventListener('click',(e)=>{\n                      const filaPadre=e.target.closest('tr');\n                      if (!filaPadre.classList.contains('cerrado')){\n                        \n                        showAssigmentFormPopup(e);\n                      } else {\n                        e.preventDefault();\n                        e.stopPropagation();\n                      }\n                      \n                    })\n              \n              \n                    //En caso de que se superen 25 tickets por página, se crea una nueva página y añade el registro ahí\n              \n              \n                    Templates.renderForPromise('local_ticketmanagement/pagebar_log-ajax',response)\n                    .then(({html,js})=>{\n                      const content=document.querySelector('#pagination');\n                      content.innerHTML='';\n                      Templates.appendNodeContents(content,html,js);\n              \n              \n                      const pages=document.querySelectorAll('.page-link');\n                      pages.forEach((page)=>{\n                        page.addEventListener('click',(ev)=>{\n                          \n                          ev.preventDefault();\n                          ev.stopPropagation();\n                          const token = document.querySelector('input[name=\"token\"]').value;\n                          const page= document.querySelector('input[name=\"page\"]');\n                  \n                          //Se obtiene el elemento padre del elemento clicado\n                          const padre=ev.currentTarget.parentElement;\n                          \n                          if (padre.dataset.control==='first' || padre.dataset.control==='last' || padre.dataset.control==='previous' || padre.dataset.control==='next'){\n                            //Si es la primera página se coge el valor de arial-label\n                            page.value=ev.currentTarget.getAttribute('aria-label');\n                          } else {\n                            page.value=ev.currentTarget.textContent.trim();\n                          }\n                          \n                          //Obtenemos el ordenamiento y el campo de orden actuales\n                          const orderby = document.querySelector('input[name=\"orderby\"]').value;\n                          const order = document.querySelector('input[name=\"order\"]').value;\n                          const activePage=parseInt(page.value);\n                          const startdate= document.querySelector('#startdate');\n                          const enddate= document.querySelector('#enddate');\n                  \n                          const startdateUnixFormat=funcionesComunes.truncateDateToDay(new Date(startdate.value));\n                          const enddateUnixFormat=funcionesComunes.truncateDateToDay(new Date(enddate.value));\n                          const selstate=document.querySelector('#id_state').value;\n                          const gestorvalue=document.querySelector('#id_logistic').value;\n\n                          const obj={\n                            activePage:activePage,\n                            firstDayOfWeek:startdateUnixFormat,\n                            lastDayOfWeek:enddateUnixFormat,\n                            order:parseInt(order),\n                            orderby:orderby,\n                            page:parseInt(page.value),\n                            state:selstate,\n                            gestor:gestorvalue\n                          }\n                          \n                          funcionesComunes.requestDataToServer(obj, token, url,'controller');\n                  \n                          \n                        });\n                      });\n                      \n                    }).catch((error)=>displayException(error));\n                  }).catch((error)=>{\n                    addToast.add(\"En el formulario falta por rellenar alguna opción. Operación no completada\");\n                  });\n                }\n                \n              const showAssigmentFormPopup=(e)=>{\n                e.stopPropagation();\n                const fila=e.target.closest('tr');\n                const ticket=fila.querySelector('.tickets');\n                const ticketId=ticket.textContent;\n                const modalForm=new ModalForm({\n                    formClass: \"\\\\local_ticketmanagement\\\\form\\\\AssignmentFormPopup\",\n                    args: {num_ticket: ticketId},\n                    modalConfig: {title: `Ticket details: #${ticketId}`},\n                    returnFocus:e.target\n                });\n              \n                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n                    //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n                      \n                    const ticket=e.detail.ticket;\n        \n                    const tr=document.querySelector(`td a.assignbtn[data-ticketid=\"${ticket.id}\"]`).closest('tr'); \n                    //Se borra la clase amarillo, ya que se asigna un gestor\n                    tr.classList.remove('yellow');\n                    const td=document.querySelector(`td a.assignbtn[data-ticketid=\"${ticket.id}\"]`).parentElement;\n                    const link=document.querySelector(`a.assignbtn[data-ticketid=\"${ticket.id}\"]`)\n                    const span = link.nextElementSibling; \n                    span.textContent=ticket.user;\n                    const state=tr.querySelector(\"td:nth-child(6)\");\n                    state.textContent=ticket.state;               });\n              \n                modalForm.addEventListener(modalForm.events.LOADED, (e)=>{\n                    //Changing the text of the dynamic button\n                    //e.target.querySelector(\"button[data-action='save']\").textContent=\"Send Email\"\n                    \n                    }\n                );\n                \n                modalForm.show();\n              \n              }\n              \n              const showTicketActions=(e)=>{\n                e.stopPropagation();\n                const ticketId=e.target.dataset.ticketid;\n                const modalForm=new ModalForm({\n                    formClass: \"\\\\local_ticketmanagement\\\\form\\\\ActionsFormPopup\",\n                    args: {num_ticket: ticketId},\n                    modalConfig: {title: `Ticket details: #${ticketId}`},\n                    returnFocus:e.target\n                });\n              \n                modalForm.show();\n              \n              \n                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n                    //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n                });\n              \n                // Listen for the modal LOADED event\n                modalForm.addEventListener(modalForm.events.LOADED, (e) => {\n                    // Get the button after the modal is fully loaded\n                    // Get the modal element after it is loaded\n                    \n                    funcionesComunes.areElementsLoaded('#boactionid').then((elements)=>{\n                        const addActionBtn = (elements.length>0)?elements[0]:null;\n                        \n                        if (addActionBtn) {\n                            // Add an event listener to the button\n                            addActionBtn.addEventListener('click', function() {\n                                console.log('Add Action button clicked!');\n                            });\n                        }\n              \n                    })\n                });\n              }\n             \n              return {\n                init:init\n              }\n              \n        });\n\n\n"],"names":["define","ModalForm","Notification","addToast","displayException","Templates","funcionesComunes","url","M","cfg","wwwroot","token","document","querySelector","value","createNewTicket","newTicket","familiarid","add","type","split","length","familyissue","id_assigment","xhr","XMLHttpRequest","formData","FormData","append","subcategoryid","traineeid","state","priority","description","gestorid","label_field","open","send","onload","ev","reqHandlerNewTicket","onerror","rejectAnswer","readyState","status","response","JSON","parse","id","numRecords","parseInt","textContent","trim","numPages","Math","ceil","currentPage","pageList","pagePrevious","max","pageNext","i","push","page","active","renderForPromise","then","_ref","html","js","content","querySelectorAll","innerHTML","appendNodeContents","addEventListener","e","showTicketFormPopup","target","closest","showTicketActions","forEach","chk","ticket","dataset","ticketid","checked","updateCommunication","classList","contains","preventDefault","stopPropagation","showAssigmentFormPopup","_ref2","padre","currentTarget","parentElement","control","getAttribute","orderby","order","activePage","startdate","enddate","startdateUnixFormat","truncateDateToDay","Date","enddateUnixFormat","selstate","gestorvalue","obj","firstDayOfWeek","lastDayOfWeek","gestor","requestDataToServer","catch","error","addTickettoTemplate","listadoTickets","ticketnumber","username","assigned","date","dateticket","color","num_records","num_total_records","num_pages","pages","truncateArrayWithActiveMiddle","previous","next","first","last","ticketId","modalForm","formClass","args","num_ticket","modalConfig","title","returnFocus","events","FORM_SUBMITTED","detail","tr","remove","nextElementSibling","user","LOADED","show","areElementsLoaded","elements","addActionBtn","console","log","init","bonewticket","stopImmediatePropagation","project","vessel","trainee","category","subcategory","toLowerCase","familiar","projectid","vesselid","categoryid","addNotification","message"],"mappings":"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"}