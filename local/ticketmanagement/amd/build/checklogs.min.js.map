{"version":3,"file":"checklogs.min.js","sources":["../src/checklogs.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport Notification from 'core/notification';\nimport {add as addToast} from 'core/toast';\nimport {get_string as getString} from 'core/str';\n\nconst url=M.cfg.wwwroot+'/webservice/rest/server.php';\nconst token=document.querySelector('input[name=\"token\"]').value;\nexport const init =() => {\n    \n    const logs=document.querySelectorAll('.logs');\n\n    logs.forEach((node)=>{\n        node.addEventListener('click',(e)=>{\n            showTicketActions(e);\n        })\n    })\n}\n\nconst showTicketActions=(e)=>{\n    e.stopPropagation();\n    const ticketId=e.target.dataset.ticketid;\n    const modalForm=new ModalForm({\n        formClass: \"\\\\local_ticketmanagement\\\\form\\\\ActionsFormPopup\",\n        args: {num_ticket: ticketId},\n        modalConfig: {title: `Ticket details: #${ticketId}`},\n        returnFocus:e.target\n    });\n\n    modalForm.show();\n\n\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e)=>{\n        //Se actualiza la pagina principal con los nuevos valores y se envia email de notificación\n    });\n\n    // Listen for the modal LOADED event\n    modalForm.addEventListener(modalForm.events.LOADED, (e) => {\n        // Get the button after the modal is fully loaded\n        // Get the modal element after it is loaded\n        const formElement=e.target;\n\n        areElementsLoaded('button[name=\"boExcel\"]', formElement).then((elements) => {\n            \n            const boexport=formElement.querySelector('button[name=\"boExcel\"]');\n            boexport.addEventListener('click',(e)=>{\n                const ticketDiv=formElement.querySelector('div[data-name=\"ticketid\"]');\n                const ticketid=ticketDiv.textContent.trim();\n                loadActions(ticketid,url,token);\n            })\n        }).catch((error) => {\n            window.console.error('Error al cargar los elementos select:', error);\n        });\n    });\n}\n\nconst loadActions=(ticketid, url,token)=>{\n    const xhr=new XMLHttpRequest();\n    \n    xhr.open('POST',url,true);\n \n    const formData= new FormData();\n    formData.append('wstoken',token);\n    formData.append('wsfunction','local_ticketmanagement_load_actions');\n    formData.append('moodlewsrestformat','json');\n    formData.append('params[0][ticketid]',ticketid);\n       \n    \n    setTimeout(()=>{\n        xhr.send(formData);\n    },100);\n    \n    xhr.onload=(event)=>{\n        onLoadFunction(xhr);\n    }\n\n    xhr.onloadstart=(event)=>{\n        //showLoader(event);\n    }\n\n    xhr.onprogress = (event)=>{\n        //onProgressFunction(event);\n    } \n    xhr.onloadend=(event)=>{\n        //hideLoader(event);\n    }\n    xhr.onerror = function() {\n        window.console.log(\"Solicitud fallida\");\n    };\n    const showLoader=(event)=>{\n        const loader=document.querySelector('.loader');\n        const table=document.querySelector('.generaltable');\n        loader.classList.remove('hide');\n        loader.classList.add('show');\n        table.classList.add('hide');\n      \n      }\n      \n      const hideLoader=(event)=>{\n        const loader=document.querySelector('.loader');\n        const table=document.querySelector('.generaltable');\n        loader.classList.remove('show');\n        loader.classList.add('hide');\n        table.classList.remove('hide');\n      }\n\n}\n\nconst onLoadFunction=(myXhr)=>{\n    /*const loader=document.querySelector('.loader');\n    loader.classList.add('.hide');\n    loader.classList.remove('.show');\n*/\n    if (myXhr.readyState===4 && myXhr.status===200){\n        const res=JSON.parse(myXhr.response);\n        createExcelFromJSON(res,'logsReport');\n        window.console.log(res);\n        \n    }\n}\n\nconst createExcelFromJSON = (res, op) => {\n    let listado = [];\n    \n    // Generar títulos basados en las claves del primer objeto\n    const titles = Object.keys(res[0]);\n    listado.push(titles);\n\n    // Convertir cada objeto a un array de valores y añadirlo al listado\n    const actionArray = res.map(action => [\n        action.id,\n        action.action,\n        parseDate(action.dateaction),\n        action.user,\n        action.ticketid,\n    ]);\n    listado = listado.concat(actionArray);\n\n    // Crear un nuevo libro de Excel\n    const wb = XLSX.utils.book_new();\n    const dr = new Date();\n    const dateFile = dr.getDate();\n    const month = dr.getMonth() + 1;\n    const year = dr.getFullYear();\n    const min = dr.getMinutes();\n    const hour = dr.getHours();\n\n    // Configuración de propiedades del archivo\n    wb.Props = {\n        Title: \"List of actions\",\n        Subject: \"Training program report\",\n        Author: \"Alberto Marín\",\n        CreateDate: new Date(year, month - 1, dateFile) // Ajuste del mes a base 0\n    };\n\n    // Añadir una hoja de Excel con el nombre \"TicketsReport\"\n    wb.SheetNames.push(\"LogsReport\");\n    const ws = XLSX.utils.aoa_to_sheet(listado);\n    wb.Sheets[\"LogsReport\"] = ws;\n\n    // Generar y descargar el archivo\n    const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });\n    const nameFile = `LogsReport-${listado[1].ticketid}.xlsx`;\n    saveAs(new Blob([s2ab(wbout)], { type: \"application/octet-stream\" }), nameFile);\n};\n\n// Función auxiliar para convertir la cadena de datos binarios a ArrayBuffer\nconst s2ab = (s) => {\n    const buf = new ArrayBuffer(s.length);\n    const view = new Uint8Array(buf);\n    for (let i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n    return buf;\n};\n\nconst parseDate = (str) => {\n    const partesFecha = str.split(\" \"); // Separamos la fecha y la hora\n    const partesFechaHora = partesFecha[0].split(\"-\"); // Separamos el día, mes y año\n    const partesHora = partesFecha[1].split(\":\"); // Separamos la hora y los minutos\n\n    const fecha = new Date(\n        partesFechaHora[2], // Año\n        partesFechaHora[1] - 1, // Mes (0-based)\n        partesFechaHora[0], // Día\n        partesHora[0], // Hora\n        partesHora[1] // Minutos\n    );\n    return fecha;\n    \n\n    return date;\n};\n\n\n  const areElementsLoaded = (selector, parentElement = document) => {\n    return new Promise((resolve) => {\n        const checkElements = () => {\n            const elements = parentElement.querySelectorAll(selector);\n            if (elements.length > 0 && Array.from(elements).every(elem => elem !== null)) {\n                resolve(elements);\n            } else {\n                requestAnimationFrame(checkElements);\n            }\n        };\n        checkElements();\n    });\n};"],"names":["url","M","cfg","wwwroot","token","document","querySelector","value","querySelectorAll","forEach","node","addEventListener","e","showTicketActions","stopPropagation","ticketId","target","dataset","ticketid","modalForm","ModalForm","formClass","args","num_ticket","modalConfig","title","returnFocus","show","events","FORM_SUBMITTED","LOADED","formElement","areElementsLoaded","then","elements","textContent","trim","loadActions","catch","error","window","console","xhr","XMLHttpRequest","open","formData","FormData","append","setTimeout","send","onload","event","onLoadFunction","onloadstart","onprogress","onloadend","onerror","log","myXhr","readyState","status","res","JSON","parse","response","createExcelFromJSON","op","listado","titles","Object","keys","push","actionArray","map","action","id","parseDate","dateaction","user","concat","wb","XLSX","utils","book_new","dr","Date","dateFile","getDate","month","getMonth","year","getFullYear","getMinutes","getHours","Props","Title","Subject","Author","CreateDate","SheetNames","ws","aoa_to_sheet","Sheets","wbout","write","bookType","type","nameFile","saveAs","Blob","s2ab","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","str","partesFecha","split","partesFechaHora","partesHora","selector","parentElement","Promise","resolve","checkElements","Array","from","every","elem","requestAnimationFrame"],"mappings":"wbAKMA,IAAIC,EAAEC,IAAIC,QAAQ,8BAClBC,MAAMC,SAASC,cAAc,uBAAuBC,oBACvC,KAEJF,SAASG,iBAAiB,SAEhCC,SAASC,OACVA,KAAKC,iBAAiB,SAASC,IAC3BC,kBAAkBD,gBAKxBC,kBAAmBD,IACrBA,EAAEE,wBACIC,SAASH,EAAEI,OAAOC,QAAQC,SAC1BC,UAAU,IAAIC,mBAAU,CAC1BC,UAAW,mDACXC,KAAM,CAACC,WAAYR,UACnBS,YAAa,CAACC,iCAA2BV,WACzCW,YAAYd,EAAEI,SAGlBG,UAAUQ,OAGVR,UAAUR,iBAAiBQ,UAAUS,OAAOC,gBAAiBjB,QAK7DO,UAAUR,iBAAiBQ,UAAUS,OAAOE,QAASlB,UAG3CmB,YAAYnB,EAAEI,OAEpBgB,kBAAkB,yBAA0BD,aAAaE,MAAMC,WAE5CH,YAAYzB,cAAc,0BAChCK,iBAAiB,SAASC,UAEzBM,SADUa,YAAYzB,cAAc,6BACjB6B,YAAYC,OACrCC,YAAYnB,SAASlB,IAAII,aAE9BkC,OAAOC,QACNC,OAAOC,QAAQF,MAAM,wCAAyCA,cAKpEF,YAAY,CAACnB,SAAUlB,IAAII,eACvBsC,IAAI,IAAIC,eAEdD,IAAIE,KAAK,OAAO5C,KAAI,SAEd6C,SAAU,IAAIC,SACpBD,SAASE,OAAO,UAAU3C,OAC1ByC,SAASE,OAAO,aAAa,uCAC7BF,SAASE,OAAO,qBAAqB,QACrCF,SAASE,OAAO,sBAAsB7B,UAGtC8B,YAAW,KACPN,IAAIO,KAAKJ,YACX,KAEFH,IAAIQ,OAAQC,QACRC,eAAeV,MAGnBA,IAAIW,YAAaF,UAIjBT,IAAIY,WAAcH,UAGlBT,IAAIa,UAAWJ,UAGfT,IAAIc,QAAU,WACVhB,OAAOC,QAAQgB,IAAI,uBAqBrBL,eAAgBM,WAKK,IAAnBA,MAAMC,YAAiC,MAAfD,MAAME,OAAa,OACrCC,IAAIC,KAAKC,MAAML,MAAMM,UAC3BC,oBAAoBJ,IAAI,cACxBrB,OAAOC,QAAQgB,IAAII,OAKrBI,oBAAsB,CAACJ,IAAKK,UAC1BC,QAAU,SAGRC,OAASC,OAAOC,KAAKT,IAAI,IAC/BM,QAAQI,KAAKH,cAGPI,YAAcX,IAAIY,KAAIC,QAAU,CAClCA,OAAOC,GACPD,OAAOA,OACPE,UAAUF,OAAOG,YACjBH,OAAOI,KACPJ,OAAOxD,YAEXiD,QAAUA,QAAQY,OAAOP,mBAGnBQ,GAAKC,KAAKC,MAAMC,WAChBC,GAAK,IAAIC,KACTC,SAAWF,GAAGG,UACdC,MAAQJ,GAAGK,WAAa,EACxBC,KAAON,GAAGO,cACJP,GAAGQ,aACFR,GAAGS,WAGhBb,GAAGc,MAAQ,CACPC,MAAO,kBACPC,QAAS,0BACTC,OAAQ,gBACRC,WAAY,IAAIb,KAAKK,KAAMF,MAAQ,EAAGF,WAI1CN,GAAGmB,WAAW5B,KAAK,oBACb6B,GAAKnB,KAAKC,MAAMmB,aAAalC,SACnCa,GAAGsB,OAAH,WAA0BF,SAGpBG,MAAQtB,KAAKuB,MAAMxB,GAAI,CAAEyB,SAAU,OAAQC,KAAM,WACjDC,8BAAyBxC,QAAQ,GAAGjD,kBAC1C0F,OAAO,IAAIC,KAAK,CAACC,KAAKP,QAAS,CAAEG,KAAM,6BAA+BC,WAIpEG,KAAQC,UACJC,IAAM,IAAIC,YAAYF,EAAEG,QACxBC,KAAO,IAAIC,WAAWJ,SACvB,IAAIK,EAAI,EAAGA,GAAKN,EAAEG,SAAUG,EAAGF,KAAKE,GAAuB,IAAlBN,EAAEO,WAAWD,UACpDL,KAGLpC,UAAa2C,YACTC,YAAcD,IAAIE,MAAM,KACxBC,gBAAkBF,YAAY,GAAGC,MAAM,KACvCE,WAAaH,YAAY,GAAGC,MAAM,YAE1B,IAAIpC,KACdqC,gBAAgB,GAChBA,gBAAgB,GAAK,EACrBA,gBAAgB,GAChBC,WAAW,GACXA,WAAW,KASX3F,kBAAoB,SAAC4F,cAAUC,qEAAgBxH,gBAC5C,IAAIyH,SAASC,gBACVC,cAAgB,WACZ9F,SAAW2F,cAAcrH,iBAAiBoH,UAC5C1F,SAASgF,OAAS,GAAKe,MAAMC,KAAKhG,UAAUiG,OAAMC,MAAiB,OAATA,OAC1DL,QAAQ7F,UAERmG,sBAAsBL,gBAG9BA"}