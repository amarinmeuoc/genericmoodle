{"version":3,"file":"downloadpdf.min.js","sources":["../src/downloadpdf.js"],"sourcesContent":["export const init = (PDF, user, courses) => {\n    areElementsLoaded('#bocertificate').then((elements) => {\n        const bocertificate = document.querySelector('#bocertificate');\n        \n        if (bocertificate!==null){\n            bocertificate.addEventListener('click', () => {\n                const visible = courses[0];\n                const coursetitles = courses[1];\n                const coursecodes = courses[2];\n                const startdates = courses[3];\n                const enddates = courses[4];\n                const counts = courses[5];\n                const att = courses[6];\n                const ass = courses[7];\n        \n                // Grouping data by the 'codes' array\n                const groupedData = groupbycodes(visible, coursecodes, coursetitles, startdates, enddates, counts, att, ass);\n        \n                // Calculate the required values for each group\n                const result = getResult(groupedData).filter(obj=>obj.visible===1);\n                \n                \n                createPDFAcroField(PDF,user,result);\n            });\n        }\n    });\n    \n    \n}\n\nconst groupbycodes = (visible, codes, coursetitles, startdates, enddates, counts, att, ass) => \n    codes.reduce((acc, code, index) => {\n        // Inicializar el grupo si no existe\n        acc[code] = acc[code] || {\n            visible: 0,\n            titles: [],\n            startDates: [],\n            endDates: [],\n            counts: [],\n            att: [],\n            ass: []\n        };\n\n        // Asignar y agregar valores a los arrays de cada grupo\n        acc[code].visible = visible[index];\n        acc[code].titles.push(coursetitles[index]);\n        acc[code].startDates.push(startdates[index]);\n        acc[code].endDates.push(enddates[index]);\n        acc[code].counts.push(counts[index]);\n\n        // Agregar valores de att solo si son v치lidos\n        if (att[index] !== null && att[index] !== undefined && att[index] !== \"\") {\n            acc[code].att.push(att[index]);\n        }\n\n        // Agregar valores de ass solo si son v치lidos\n        if (ass[index] !== null && ass[index] !== undefined && ass[index] !== \"\") {\n            acc[code].ass.push(ass[index]);\n        }\n\n        return acc;\n    }, {});\n\n// Funci칩n para procesar los datos agrupados\nconst getResult = (groupedData) => Object.keys(groupedData).map((code) => {\n    const group = groupedData[code];\n    const minStartDate = Math.min(...group.startDates.map((date) => parseInt(date)));\n    const maxEndDate = Math.max(...group.endDates.map((date) => parseInt(date)));\n    const sumCount = group.counts.reduce((sum, count) => sum + parseInt(count), 0);\n\n    // Calcular medias solo con valores v치lidos\n    let averagePercentage1 = group.att.reduce((sum, percentage) => sum + parseFloat(percentage), 0) / group.att.length;\n    averagePercentage1 = isNaN(averagePercentage1) ? \"-\" : averagePercentage1;\n\n    let averagePercentage2 = group.ass.reduce((sum, percentage) => sum + parseFloat(percentage), 0) / group.ass.length;\n    averagePercentage2 = isNaN(averagePercentage2) ? \"-\" : averagePercentage2;\n\n    return {\n        visible: parseInt(group.visible),\n        code: code,\n        titles: group.titles,\n        minStartDate: minStartDate,\n        maxEndDate: maxEndDate,\n        sumCount: sumCount.toFixed(0),\n        averagePercentage1: \"-\" === averagePercentage1 ? \"-\" : averagePercentage1.toFixed(2),\n        averagePercentage2: \"-\" === averagePercentage2 ? \"-\" : averagePercentage2.toFixed(2)\n    };\n});\n\n\n\nasync function createPDFAcroField(PDF, user, result){\n    const pdfDoc = await PDF.PDFDocument.create();\n    const font = await pdfDoc.embedFont(PDF.StandardFonts.Helvetica);\n    const fontBold = await pdfDoc.embedFont(PDF.StandardFonts.HelveticaBold);\n\n    //Colocamos las imagenes\n    const logoNavantiaURL = M.cfg.wwwroot+'/blocks/itp/pix/navantia-logo.png';\n    const logoNavantiaImageBytes = await fetch(logoNavantiaURL).then(res => res.arrayBuffer());\n    const logoNavantia = await pdfDoc.embedPng(logoNavantiaImageBytes);\n\n    const fondoURL = M.cfg.wwwroot+'/blocks/itp/pix/marco-vertical-navantia.jpg';\n    const fondoURLImageBytes = await fetch(fondoURL).then(res => res.arrayBuffer());\n    const fondo = await pdfDoc.embedJpg(fondoURLImageBytes);\n\n    \n    let page= pdfDoc.addPage();\n    const { width, height } = page.getSize();\n\n    // Create a string of text and measure its width and height in our custom font\n    const text = 'TRAINEE REPORT';\n    const textSize = 24;\n    const textWidth = font.widthOfTextAtSize(text, textSize);\n    const textHeight = font.heightAtSize(textSize);\n    const verticalGap=textHeight/2;\n    const comienzo=120;\n\n    page.drawImage(fondo, {\n        x: 0,\n        y: 0,\n        width:page.getWidth(),\n        height:page.getHeight(),\n        \n      });\n\n    page.drawImage(logoNavantia, {\n    x: 45,\n    y: page.getHeight() -100,\n    width: 110, \n    height: 60,\n    \n    });\n\n    // Draw the string of text on the page\n    page.drawText(text, {\n      x: width/2-textWidth/2,\n      y: height-textHeight-verticalGap-comienzo,\n      size: textSize,\n      font: font,\n      color: PDF.rgb(0, 0.53, 0.71),\n    })\n\n    const startdate=result.reduce((acc,currentValue)=>{\n        return (acc<=currentValue.minStartDate)?acc:currentValue.minStartDate;\n    },result[0].minStartDate);\n\n    let startdateAux=new Date(startdate*1000);\n    day=startdateAux.getDate();\n    month=startdateAux.getMonth()+1;\n    year=startdateAux.getFullYear();\n    let formattedStartDate=`${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\n\n    const enddate=result.reduce((acc,currentValue)=>{\n        return (acc>currentValue.maxEndDate)?acc:currentValue.maxEndDate;\n    },result[0].maxEndDate)\n\n    let enddateAux=new Date(enddate*1000);\n    day=enddateAux.getDate();\n    month=enddateAux.getMonth()+1;\n    year=enddateAux.getFullYear();\n    let formattedEndDate=`${day.toString().padStart(2, '0')}-${month.toString().padStart(2, '0')}-${year}`;\n    \n    \n    const textBody=`Below is a detailed list of the grades obtained by the trainee: ${user.firstname}, ${user.lastname} with billid: ${user.billid}, in the training programme of Navantia which started in ${formattedStartDate} to ${formattedEndDate}.`\n    const textBodySize=14;\n    const textBodyWidth = font.widthOfTextAtSize(textBody, textBodySize);\n    const textBodyHeight = font.heightAtSize(textBodySize);\n    page.drawText(textBody, {\n        x: 40,\n        y: height-verticalGap-textHeight-verticalGap-textBodyHeight-verticalGap-verticalGap-comienzo,\n        size: textBodySize,\n        font: font,\n        color: PDF.rgb(0, 0, 0),\n        maxWidth: width-80, wordBreaks: [\" \"]\n      })\n\n    let lineHeightPos=height-175-comienzo;\n    page.drawLine({\n    start: { x: 40, y: lineHeightPos },\n    end: { x: width-40, y: lineHeightPos },\n    thickness: 1,\n    color: PDF.rgb(0, 0.53, 0.71),\n    opacity: 0.5,\n    });\n    const field1='Coursename';\n    const textFieldSize=10;\n    const textField1Width = font.widthOfTextAtSize(field1, textFieldSize);\n    const textField1Height = font.heightAtSize(textFieldSize);\n    const verticalFieldGap=textField1Height/2;\n    page.drawText( field1, {\n        x: 45,\n        y: height - 180 + textField1Height-comienzo,\n        size: textFieldSize,\n        font: fontBold,\n        color: PDF.rgb(0, 0, 0)\n    });\n    const field2=\"Duration\"\n    const textField2Width = font.widthOfTextAtSize(field2, textFieldSize);\n    page.drawText( field2, {\n        x: 50+textField1Width+textField2Width+180,\n        y: height - 180 + textField1Height-comienzo,\n        size: textFieldSize,\n        font: fontBold,\n        color: PDF.rgb(0, 0, 0)\n    });\n\n    const field3=\"Attendance\"\n    const textField3Width = font.widthOfTextAtSize(field3, textFieldSize);\n    const field4=\"Assessment\"\n    const textField4Width = font.widthOfTextAtSize(field4, textFieldSize);\n    page.drawText( field3, {\n        x: width-55-textField3Width-textField4Width-30,\n        y: height - 180 + textField1Height-comienzo,\n        size: textFieldSize,\n        font: fontBold,\n        color: PDF.rgb(0, 0, 0)\n    });\n\n    page.drawText( field4, {\n        x: width-55-textField4Width,\n        y: height - 180 + textField1Height-comienzo,\n        size: textFieldSize,\n        font: fontBold,\n        color: PDF.rgb(0, 0, 0)\n    });\n   \n    \n\n    result.map((course,index)=>{\n        if (index==15 || index==30 || index==45 || index==60 || index==75){\n            page=pdfDoc.addPage();\n\n            page.drawImage(fondo, {\n                x: 0,\n                y: 0,\n                width:page.getWidth(),\n                height:page.getHeight(),\n                \n              });\n        \n            page.drawImage(logoNavantia, {\n            x: 45,\n            y: page.getHeight() -100,\n            width: 110, \n            height: 60,\n            \n            });\n\n            // Draw the string of text on the page\n            page.drawText(text, {\n                x: width/2-textWidth/2,\n                y: height-textHeight-verticalGap-comienzo,\n                size: textSize,\n                font: font,\n                color: PDF.rgb(0, 0.53, 0.71),\n            })\n\n            \n            \n            page.drawText(textBody, {\n                x: 40,\n                y: height-verticalGap-textHeight-verticalGap-textBodyHeight-verticalGap-verticalGap-comienzo,\n                size: textBodySize,\n                font: font,\n                color: PDF.rgb(0, 0, 0),\n                maxWidth: width-80, wordBreaks: [\" \"]\n            })\n            lineHeightPos=height-175-comienzo;\n            page.drawLine({\n                start: { x: 40, y: lineHeightPos },\n                end: { x: width-40, y: lineHeightPos },\n                thickness: 1,\n                color: PDF.rgb(0, 0.53, 0.71),\n                opacity: 0.5,\n            });\n\n            page.drawText( field1, {\n                x: 45,\n                y: height - 180 + textField1Height-comienzo,\n                size: textFieldSize,\n                font: fontBold,\n                color: PDF.rgb(0, 0, 0)\n            });\n\n            page.drawText( field2, {\n                x: 50+textField1Width+textField2Width+180,\n                y: height - 180 + textField1Height-comienzo,\n                size: textFieldSize,\n                font: fontBold,\n                color: PDF.rgb(0, 0, 0)\n            });\n\n            page.drawText( field3, {\n                x: width-55-textField3Width-textField4Width-30,\n                y: height - 180 + textField1Height-comienzo,\n                size: textFieldSize,\n                font: fontBold,\n                color: PDF.rgb(0, 0, 0)\n            });\n\n            page.drawText( field4, {\n                x: width-55-textField4Width,\n                y: height - 180 + textField1Height-comienzo,\n                size: textFieldSize,\n                font: fontBold,\n                color: PDF.rgb(0, 0, 0)\n            });\n\n        } //End if\n        let textCourseTitleWith=font.widthOfTextAtSize(course.titles[0],textFieldSize);\n        let textFieldHeight=font.heightAtSize(textFieldSize);\n        \n            lineHeightPos-=18;  \n        \n        const courseTitles=truncateString(course.titles[0],40);\n        page.drawText( courseTitles, {\n            x: 45,\n            y: lineHeightPos+textFieldHeight/2,\n            size: textFieldSize,\n            font: font,\n            color: PDF.rgb(0, 0, 0)\n        });\n        let textDurationWith=font.widthOfTextAtSize(course.sumCount,textFieldSize);\n        page.drawText( course.sumCount, {\n            x: 50+textField1Width+textField2Width+180+textField2Width/3,\n            y: lineHeightPos+textFieldHeight/2,\n            size: textFieldSize,\n            font: font,\n            color: PDF.rgb(0, 0, 0)\n        });\n        let attendance=(course.averagePercentage1==='-')?'-':(course.averagePercentage1*1).toFixed(2);\n        \n        page.drawText( attendance, {\n            x: width-100-textField3Width-textField4Width+textField3Width/2,\n            y: lineHeightPos+textFieldHeight/2,\n            size: textFieldSize,\n            font: font,\n            color: PDF.rgb(0, 0, 0)\n        });\n\n        let assessment=(course.averagePercentage2==='-')?'-':(course.averagePercentage2*1).toFixed(2);\n        \n        page.drawText( assessment, {\n            x: width-75-textField4Width+textField4Width/2,\n            y: lineHeightPos+textFieldHeight/2,\n            size: textFieldSize,\n            font: font,\n            color: PDF.rgb(0, 0, 0)\n        });\n\n        page.drawLine({\n            start: { x: 40, y: lineHeightPos },\n            end: { x: width-40, y: lineHeightPos },\n            thickness: 1,\n            color: PDF.rgb(0, 0.53, 0.71),\n            opacity: 0.5,\n        });\n\n    })\n\n    //This is the content of the last page:\n    const listComputedAtt=result.filter(elem=>{\n        return elem.averagePercentage1!=='-'\n    })\n\n    const listComputedAss=result.filter(elem=>{\n        return elem.averagePercentage2!=='-'\n    });\n\n    let avgAtt=listComputedAtt.reduce((acumulador, elementoActual) => acumulador + Math.round(elementoActual.averagePercentage1*100)/100, 0)/listComputedAtt.length;\n    avgAtt=avgAtt.toFixed(2);\n    let avgAss=listComputedAss.reduce((acumulador, elementoActual) => acumulador + Math.round(elementoActual.averagePercentage2*100)/100, 0)/listComputedAss.length;\n    avgAss=avgAss.toFixed(2);\n\n    //Total score for the course\n    page.drawText( 'Total course average: ', {\n        x: width-350,\n        y: lineHeightPos-24,\n        size: textFieldSize,\n        font: fontBold,\n        color: PDF.rgb(0, 0, 0)\n    });\n\n    \n    page.drawText( avgAtt+' %', {\n        x: width-100-textField3Width/2-textField4Width,\n        y: lineHeightPos-24,\n        size: textFieldSize,\n        font: fontBold,\n        color: PDF.rgb(0, 0, 0)\n    });\n    \n    \n    page.drawText( ''+avgAss, {\n        x: width-75-(textField4Width/2),\n        y: lineHeightPos-24,\n        size: textFieldSize,\n        font: fontBold,\n        color: PDF.rgb(0, 0, 0)\n    });\n    \n\n\n\n\n    // Genera el PDF y obt칠n los datos en formato Base64\nconst pdfBase64 = await pdfDoc.saveAsBase64();\n\n// Convierte el Base64 a un array de bytes\nconst byteCharacters = atob(pdfBase64);\nconst byteNumbers = new Array(byteCharacters.length);\nfor (let i = 0; i < byteCharacters.length; i++) {\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\n}\nconst byteArray = new Uint8Array(byteNumbers);\n\n// Crea un Blob a partir del array de bytes\nconst blob = new Blob([byteArray], { type: 'application/pdf' });\n\n// Crea un objeto URL a partir del Blob\nconst blobUrl = URL.createObjectURL(blob);\n\n// Crea un enlace temporal para descargar el archivo\nconst link = document.createElement('a');\nlink.href = blobUrl;\nlink.download = 'documento.pdf';\n\n// A침ade el enlace al documento y haz clic en 칠l para forzar la descarga\ndocument.body.appendChild(link);\nlink.click();\n\n// Remueve el enlace del documento\ndocument.body.removeChild(link);\n};\n\nfunction truncateString(str, maxLength) {\n    if (str.length > maxLength) {\n        return str.slice(0, maxLength - 3) + '...';\n    }\n    return str;\n}\n\n// Funci칩n para verificar que todos los elementos seleccionados est칠n cargados\nconst areElementsLoaded = (selector) => {\n    return new Promise((resolve) => {\n        const checkElements = () => {\n            const elements = document.querySelectorAll(selector);\n            if (elements.length > 0 && Array.from(elements).every(elem => elem !== null)) {\n                resolve(elements);\n            } else {\n                requestAnimationFrame(checkElements);\n            }\n        };\n        checkElements();\n    });\n};\n"],"names":["PDF","user","courses","areElementsLoaded","then","elements","bocertificate","document","querySelector","addEventListener","visible","coursetitles","coursecodes","startdates","enddates","counts","att","ass","groupedData","groupbycodes","result","getResult","filter","obj","pdfDoc","PDFDocument","create","font","embedFont","StandardFonts","Helvetica","fontBold","HelveticaBold","logoNavantiaURL","M","cfg","wwwroot","logoNavantiaImageBytes","fetch","res","arrayBuffer","logoNavantia","embedPng","fondoURL","fondoURLImageBytes","fondo","embedJpg","page","addPage","width","height","getSize","text","textSize","textWidth","widthOfTextAtSize","textHeight","heightAtSize","verticalGap","comienzo","drawImage","x","y","getWidth","getHeight","drawText","size","color","rgb","startdate","reduce","acc","currentValue","minStartDate","startdateAux","Date","day","getDate","month","getMonth","year","getFullYear","formattedStartDate","toString","padStart","enddate","maxEndDate","enddateAux","formattedEndDate","textBody","firstname","lastname","billid","textBodySize","textBodyHeight","maxWidth","wordBreaks","lineHeightPos","drawLine","start","end","thickness","opacity","field1","textFieldSize","textField1Width","textField1Height","field2","textField2Width","field3","textField3Width","field4","textField4Width","map","course","index","titles","textFieldHeight","courseTitles","str","maxLength","length","slice","truncateString","sumCount","attendance","averagePercentage1","toFixed","assessment","averagePercentage2","listComputedAtt","elem","listComputedAss","avgAtt","acumulador","elementoActual","Math","round","avgAss","pdfBase64","saveAsBase64","byteCharacters","atob","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","blobUrl","URL","createObjectURL","link","createElement","href","download","body","appendChild","click","removeChild","createPDFAcroField","codes","code","startDates","endDates","push","undefined","Object","keys","group","min","date","parseInt","max","sum","count","percentage","parseFloat","isNaN","selector","Promise","resolve","checkElements","querySelectorAll","from","every","requestAnimationFrame"],"mappings":"0JAAoB,CAACA,IAAKC,KAAMC,WAC5BC,kBAAkB,kBAAkBC,MAAMC,iBAChCC,cAAgBC,SAASC,cAAc,kBAEzB,OAAhBF,eACAA,cAAcG,iBAAiB,SAAS,WAC9BC,QAAUR,QAAQ,GAClBS,aAAeT,QAAQ,GACvBU,YAAcV,QAAQ,GACtBW,WAAaX,QAAQ,GACrBY,SAAWZ,QAAQ,GACnBa,OAASb,QAAQ,GACjBc,IAAMd,QAAQ,GACde,IAAMf,QAAQ,GAGdgB,YAAcC,aAAaT,QAASE,YAAaD,aAAcE,WAAYC,SAAUC,OAAQC,IAAKC,KAGlGG,OAASC,UAAUH,aAAaI,QAAOC,KAAmB,IAAdA,IAAIb,0BAwEpCV,IAAKC,KAAMmB,cACnCI,aAAexB,IAAIyB,YAAYC,SAC/BC,WAAaH,OAAOI,UAAU5B,IAAI6B,cAAcC,WAChDC,eAAiBP,OAAOI,UAAU5B,IAAI6B,cAAcG,eAGpDC,gBAAkBC,EAAEC,IAAIC,QAAQ,oCAChCC,6BAA+BC,MAAML,iBAAiB7B,MAAKmC,KAAOA,IAAIC,gBACtEC,mBAAqBjB,OAAOkB,SAASL,wBAErCM,SAAWT,EAAEC,IAAIC,QAAQ,8CACzBQ,yBAA2BN,MAAMK,UAAUvC,MAAKmC,KAAOA,IAAIC,gBAC3DK,YAAcrB,OAAOsB,SAASF,wBAGhCG,KAAMvB,OAAOwB,gBACXC,MAAEA,MAAFC,OAASA,QAAWH,KAAKI,UAGzBC,KAAO,iBACPC,SAAW,GACXC,UAAY3B,KAAK4B,kBAAkBH,KAAMC,UACzCG,WAAa7B,KAAK8B,aAAaJ,UAC/BK,YAAYF,WAAW,EACvBG,SAAS,IAEfZ,KAAKa,UAAUf,MAAO,CAClBgB,EAAG,EACHC,EAAG,EACHb,MAAMF,KAAKgB,WACXb,OAAOH,KAAKiB,cAIhBjB,KAAKa,UAAUnB,aAAc,CAC7BoB,EAAG,GACHC,EAAGf,KAAKiB,YAAa,IACrBf,MAAO,IACPC,OAAQ,KAKRH,KAAKkB,SAASb,KAAM,CAClBS,EAAGZ,MAAM,EAAEK,UAAU,EACrBQ,EAAGZ,OAAOM,WAAWE,YAAYC,SACjCO,KAAMb,SACN1B,KAAMA,KACNwC,MAAOnE,IAAIoE,IAAI,EAAG,IAAM,aAGpBC,UAAUjD,OAAOkD,QAAO,CAACC,IAAIC,eACvBD,KAAKC,aAAaC,aAAcF,IAAIC,aAAaC,cAC3DrD,OAAO,GAAGqD,kBAERC,aAAa,IAAIC,KAAe,IAAVN,WAC1BO,IAAIF,aAAaG,UACjBC,MAAMJ,aAAaK,WAAW,EAC9BC,KAAKN,aAAaO,kBACdC,6BAAsBN,IAAIO,WAAWC,SAAS,EAAG,iBAAQN,MAAMK,WAAWC,SAAS,EAAG,iBAAQJ,YAE5FK,QAAQjE,OAAOkD,QAAO,CAACC,IAAIC,eACrBD,IAAIC,aAAac,WAAYf,IAAIC,aAAac,YACxDlE,OAAO,GAAGkE,gBAERC,WAAW,IAAIZ,KAAa,IAARU,SACxBT,IAAIW,WAAWV,UACfC,MAAMS,WAAWR,WAAW,EAC5BC,KAAKO,WAAWN,kBACZO,2BAAoBZ,IAAIO,WAAWC,SAAS,EAAG,iBAAQN,MAAMK,WAAWC,SAAS,EAAG,iBAAQJ,YAG1FS,mFAA4ExF,KAAKyF,uBAAczF,KAAK0F,kCAAyB1F,KAAK2F,2EAAkEV,kCAAyBM,sBAC7NK,aAAa,GAEbC,gBADgBnE,KAAK4B,kBAAkBkC,SAAUI,cAChClE,KAAK8B,aAAaoC,eACzC9C,KAAKkB,SAASwB,SAAU,CACpB5B,EAAG,GACHC,EAAGZ,OAAOQ,YAAYF,WAAWE,YAAYoC,eAAepC,YAAYA,YAAYC,SACpFO,KAAM2B,aACNlE,KAAMA,KACNwC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,GACrB2B,SAAU9C,MAAM,GAAI+C,WAAY,CAAC,WAGjCC,cAAc/C,OAAO,IAAIS,SAC7BZ,KAAKmD,SAAS,CACdC,MAAO,CAAEtC,EAAG,GAAIC,EAAGmC,eACnBG,IAAK,CAAEvC,EAAGZ,MAAM,GAAIa,EAAGmC,eACvBI,UAAW,EACXlC,MAAOnE,IAAIoE,IAAI,EAAG,IAAM,KACxBkC,QAAS,WAEHC,OAAO,aACPC,cAAc,GACdC,gBAAkB9E,KAAK4B,kBAAkBgD,OAAQC,eACjDE,iBAAmB/E,KAAK8B,aAAa+C,eAE3CzD,KAAKkB,SAAUsC,OAAQ,CACnB1C,EAAG,GACHC,EAAGZ,OAAS,IAAMwD,iBAAiB/C,SACnCO,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,WAEnBuC,OAAO,WACPC,gBAAkBjF,KAAK4B,kBAAkBoD,OAAQH,eACvDzD,KAAKkB,SAAU0C,OAAQ,CACnB9C,EAAG,GAAG4C,gBAAgBG,gBAAgB,IACtC9C,EAAGZ,OAAS,IAAMwD,iBAAiB/C,SACnCO,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,WAGnByC,OAAO,aACPC,gBAAkBnF,KAAK4B,kBAAkBsD,OAAQL,eACjDO,OAAO,aACPC,gBAAkBrF,KAAK4B,kBAAkBwD,OAAQP,eACvDzD,KAAKkB,SAAU4C,OAAQ,CACnBhD,EAAGZ,MAAM,GAAG6D,gBAAgBE,gBAAgB,GAC5ClD,EAAGZ,OAAS,IAAMwD,iBAAiB/C,SACnCO,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAGzBrB,KAAKkB,SAAU8C,OAAQ,CACnBlD,EAAGZ,MAAM,GAAG+D,gBACZlD,EAAGZ,OAAS,IAAMwD,iBAAiB/C,SACnCO,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAKzBhD,OAAO6F,KAAI,CAACC,OAAOC,SACJ,IAAPA,OAAoB,IAAPA,OAAoB,IAAPA,OAAoB,IAAPA,OAAoB,IAAPA,QACpDpE,KAAKvB,OAAOwB,UAEZD,KAAKa,UAAUf,MAAO,CAClBgB,EAAG,EACHC,EAAG,EACHb,MAAMF,KAAKgB,WACXb,OAAOH,KAAKiB,cAIhBjB,KAAKa,UAAUnB,aAAc,CAC7BoB,EAAG,GACHC,EAAGf,KAAKiB,YAAa,IACrBf,MAAO,IACPC,OAAQ,KAKRH,KAAKkB,SAASb,KAAM,CAChBS,EAAGZ,MAAM,EAAEK,UAAU,EACrBQ,EAAGZ,OAAOM,WAAWE,YAAYC,SACjCO,KAAMb,SACN1B,KAAMA,KACNwC,MAAOnE,IAAIoE,IAAI,EAAG,IAAM,OAK5BrB,KAAKkB,SAASwB,SAAU,CACpB5B,EAAG,GACHC,EAAGZ,OAAOQ,YAAYF,WAAWE,YAAYoC,eAAepC,YAAYA,YAAYC,SACpFO,KAAM2B,aACNlE,KAAMA,KACNwC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,GACrB2B,SAAU9C,MAAM,GAAI+C,WAAY,CAAC,OAErCC,cAAc/C,OAAO,IAAIS,SACzBZ,KAAKmD,SAAS,CACVC,MAAO,CAAEtC,EAAG,GAAIC,EAAGmC,eACnBG,IAAK,CAAEvC,EAAGZ,MAAM,GAAIa,EAAGmC,eACvBI,UAAW,EACXlC,MAAOnE,IAAIoE,IAAI,EAAG,IAAM,KACxBkC,QAAS,KAGbvD,KAAKkB,SAAUsC,OAAQ,CACnB1C,EAAG,GACHC,EAAGZ,OAAS,IAAMwD,iBAAiB/C,SACnCO,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAGzBrB,KAAKkB,SAAU0C,OAAQ,CACnB9C,EAAG,GAAG4C,gBAAgBG,gBAAgB,IACtC9C,EAAGZ,OAAS,IAAMwD,iBAAiB/C,SACnCO,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAGzBrB,KAAKkB,SAAU4C,OAAQ,CACnBhD,EAAGZ,MAAM,GAAG6D,gBAAgBE,gBAAgB,GAC5ClD,EAAGZ,OAAS,IAAMwD,iBAAiB/C,SACnCO,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAGzBrB,KAAKkB,SAAU8C,OAAQ,CACnBlD,EAAGZ,MAAM,GAAG+D,gBACZlD,EAAGZ,OAAS,IAAMwD,iBAAiB/C,SACnCO,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,MAILzC,KAAK4B,kBAAkB2D,OAAOE,OAAO,GAAGZ,mBAC5Da,gBAAgB1F,KAAK8B,aAAa+C,eAElCP,eAAe,SAEbqB,sBAyHUC,IAAKC,cACrBD,IAAIE,OAASD,iBACND,IAAIG,MAAM,EAAGF,UAAY,GAAK,aAElCD,IA7HgBI,CAAeT,OAAOE,OAAO,GAAG,IACnDrE,KAAKkB,SAAUqD,aAAc,CACzBzD,EAAG,GACHC,EAAGmC,cAAcoB,gBAAgB,EACjCnD,KAAMsC,cACN7E,KAAMA,KACNwC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAEJzC,KAAK4B,kBAAkB2D,OAAOU,SAASpB,eAC5DzD,KAAKkB,SAAUiD,OAAOU,SAAU,CAC5B/D,EAAG,GAAG4C,gBAAgBG,gBAAgB,IAAIA,gBAAgB,EAC1D9C,EAAGmC,cAAcoB,gBAAgB,EACjCnD,KAAMsC,cACN7E,KAAMA,KACNwC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,SAErByD,WAAwC,MAA5BX,OAAOY,mBAA0B,KAA+B,EAA1BZ,OAAOY,oBAAsBC,QAAQ,GAE3FhF,KAAKkB,SAAU4D,WAAY,CACvBhE,EAAGZ,MAAM,IAAI6D,gBAAgBE,gBAAgBF,gBAAgB,EAC7DhD,EAAGmC,cAAcoB,gBAAgB,EACjCnD,KAAMsC,cACN7E,KAAMA,KACNwC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,SAGrB4D,WAAwC,MAA5Bd,OAAOe,mBAA0B,KAA+B,EAA1Bf,OAAOe,oBAAsBF,QAAQ,GAE3FhF,KAAKkB,SAAU+D,WAAY,CACvBnE,EAAGZ,MAAM,GAAG+D,gBAAgBA,gBAAgB,EAC5ClD,EAAGmC,cAAcoB,gBAAgB,EACjCnD,KAAMsC,cACN7E,KAAMA,KACNwC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAGzBrB,KAAKmD,SAAS,CACVC,MAAO,CAAEtC,EAAG,GAAIC,EAAGmC,eACnBG,IAAK,CAAEvC,EAAGZ,MAAM,GAAIa,EAAGmC,eACvBI,UAAW,EACXlC,MAAOnE,IAAIoE,IAAI,EAAG,IAAM,KACxBkC,QAAS,cAMX4B,gBAAgB9G,OAAOE,QAAO6G,MACC,MAA1BA,KAAKL,qBAGVM,gBAAgBhH,OAAOE,QAAO6G,MACC,MAA1BA,KAAKF,yBAGZI,OAAOH,gBAAgB5D,QAAO,CAACgE,WAAYC,iBAAmBD,WAAaE,KAAKC,MAAwC,IAAlCF,eAAeT,oBAAwB,KAAK,GAAGI,gBAAgBT,OACzJY,OAAOA,OAAON,QAAQ,OAClBW,OAAON,gBAAgB9D,QAAO,CAACgE,WAAYC,iBAAmBD,WAAaE,KAAKC,MAAwC,IAAlCF,eAAeN,oBAAwB,KAAK,GAAGG,gBAAgBX,OACzJiB,OAAOA,OAAOX,QAAQ,GAGtBhF,KAAKkB,SAAU,yBAA0B,CACrCJ,EAAGZ,MAAM,IACTa,EAAGmC,cAAc,GACjB/B,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAIzBrB,KAAKkB,SAAUoE,OAAO,KAAM,CACxBxE,EAAGZ,MAAM,IAAI6D,gBAAgB,EAAEE,gBAC/BlD,EAAGmC,cAAc,GACjB/B,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,KAIzBrB,KAAKkB,SAAU,GAAGyE,OAAQ,CACtB7E,EAAGZ,MAAM,GAAI+D,gBAAgB,EAC7BlD,EAAGmC,cAAc,GACjB/B,KAAMsC,cACN7E,KAAMI,SACNoC,MAAOnE,IAAIoE,IAAI,EAAG,EAAG,WAQvBuE,gBAAkBnH,OAAOoH,eAGzBC,eAAiBC,KAAKH,WACtBI,YAAc,IAAIC,MAAMH,eAAepB,YACxC,IAAIwB,EAAI,EAAGA,EAAIJ,eAAepB,OAAQwB,IACvCF,YAAYE,GAAKJ,eAAeK,WAAWD,SAEzCE,UAAY,IAAIC,WAAWL,aAG3BM,KAAO,IAAIC,KAAK,CAACH,WAAY,CAAEI,KAAM,oBAGrCC,QAAUC,IAAIC,gBAAgBL,MAG9BM,KAAOpJ,SAASqJ,cAAc,KACpCD,KAAKE,KAAOL,QACZG,KAAKG,SAAW,gBAGhBvJ,SAASwJ,KAAKC,YAAYL,MAC1BA,KAAKM,QAGL1J,SAASwJ,KAAKG,YAAYP,MA1ZVQ,CAAmBnK,IAAIC,KAAKmB,qBAQtCD,aAAe,CAACT,QAAS0J,MAAOzJ,aAAcE,WAAYC,SAAUC,OAAQC,IAAKC,MACnFmJ,MAAM9F,QAAO,CAACC,IAAK8F,KAAMlD,SAErB5C,IAAI8F,MAAQ9F,IAAI8F,OAAS,CACrB3J,QAAS,EACT0G,OAAQ,GACRkD,WAAY,GACZC,SAAU,GACVxJ,OAAQ,GACRC,IAAK,GACLC,IAAK,IAITsD,IAAI8F,MAAM3J,QAAUA,QAAQyG,OAC5B5C,IAAI8F,MAAMjD,OAAOoD,KAAK7J,aAAawG,QACnC5C,IAAI8F,MAAMC,WAAWE,KAAK3J,WAAWsG,QACrC5C,IAAI8F,MAAME,SAASC,KAAK1J,SAASqG,QACjC5C,IAAI8F,MAAMtJ,OAAOyJ,KAAKzJ,OAAOoG,QAGV,OAAfnG,IAAImG,aAAkCsD,IAAfzJ,IAAImG,QAAuC,KAAfnG,IAAImG,QACvD5C,IAAI8F,MAAMrJ,IAAIwJ,KAAKxJ,IAAImG,QAIR,OAAflG,IAAIkG,aAAkCsD,IAAfxJ,IAAIkG,QAAuC,KAAflG,IAAIkG,QACvD5C,IAAI8F,MAAMpJ,IAAIuJ,KAAKvJ,IAAIkG,QAGpB5C,MACR,IAGDlD,UAAaH,aAAgBwJ,OAAOC,KAAKzJ,aAAa+F,KAAKoD,aACvDO,MAAQ1J,YAAYmJ,MACpB5F,aAAe+D,KAAKqC,OAAOD,MAAMN,WAAWrD,KAAK6D,MAASC,SAASD,SACnExF,WAAakD,KAAKwC,OAAOJ,MAAML,SAAStD,KAAK6D,MAASC,SAASD,SAC/DlD,SAAWgD,MAAM7J,OAAOuD,QAAO,CAAC2G,IAAKC,QAAUD,IAAMF,SAASG,QAAQ,OAGxEpD,mBAAqB8C,MAAM5J,IAAIsD,QAAO,CAAC2G,IAAKE,aAAeF,IAAMG,WAAWD,aAAa,GAAKP,MAAM5J,IAAIyG,OAC5GK,mBAAqBuD,MAAMvD,oBAAsB,IAAMA,uBAEnDG,mBAAqB2C,MAAM3J,IAAIqD,QAAO,CAAC2G,IAAKE,aAAeF,IAAMG,WAAWD,aAAa,GAAKP,MAAM3J,IAAIwG,cAC5GQ,mBAAqBoD,MAAMpD,oBAAsB,IAAMA,mBAEhD,CACHvH,QAASqK,SAASH,MAAMlK,SACxB2J,KAAMA,KACNjD,OAAQwD,MAAMxD,OACd3C,aAAcA,aACda,WAAYA,WACZsC,SAAUA,SAASG,QAAQ,GAC3BD,mBAAoB,MAAQA,mBAAqB,IAAMA,mBAAmBC,QAAQ,GAClFE,mBAAoB,MAAQA,mBAAqB,IAAMA,mBAAmBF,QAAQ,aAsWpF5H,kBAAqBmL,UAChB,IAAIC,SAASC,gBACVC,cAAgB,WACZpL,SAAWE,SAASmL,iBAAiBJ,UACvCjL,SAASoH,OAAS,GAAKuB,MAAM2C,KAAKtL,UAAUuL,OAAMzD,MAAiB,OAATA,OAC1DqD,QAAQnL,UAERwL,sBAAsBJ,gBAG9BA"}