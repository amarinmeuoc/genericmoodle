{"version":3,"file":"init.min.js","sources":["../src/init.js"],"sourcesContent":["import {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nconst url=M.cfg.wwwroot+'/webservice/rest/server.php';\n\nexport const loadITP = () => {\n    //Aseguramos que el token esté cargado\n    areElementsLoaded('#filteritpform input, #filteritpform select').then((elements) => {\n        //Se obtienen los valores de los campos necesarios\n        const token = document.querySelector('input[name=\"token\"]').value;\n        const email = document.querySelector('input[name=\"email\"]').value;\n        const compacted = document.querySelector('#id_compacted').value;\n        const orderby = document.querySelector('input[name=\"orderby\"]');\n        const order = document.querySelector('input[name=\"order\"]');\n\n        // Continuar con la carga de datos\n        loadITPDataFromServer(token, email, orderby.value, order.value, compacted);\n\n        //Definir el evento del selector de compactación\n        document.querySelector('#id_compacted').addEventListener('change', (ev) => {\n            //Al cambiar el valor del selector, se vuelve a cargar la información\n            //y orderby se mantiene a startdate\n            orderby.value = 'startdate';\n            order.value=1;\n            loadITPDataFromServer(token, email, orderby.value, order.value, ev.target.value);\n        });\n    });\n}\n\nconst loadITPDataFromServer = (token, email, orderby, order, compacted) => {\n    return new Promise((resolve, reject) => {\n        let xhr = new XMLHttpRequest();\n    \n        //Se prepara el objeto a enviar\n        const formData= new FormData();\n        formData.append('wstoken',token);\n        formData.append('wsfunction', 'block_itp_load_itp');\n        formData.append('moodlewsrestformat', 'json');\n        formData.append('params[0][email]',email);\n        formData.append('params[0][orderby]',orderby);\n        formData.append('params[0][order]',order);\n        formData.append('params[0][compacted]',compacted);\n        \n        xhr.open('POST',url,true);\n        xhr.send(formData);\n\n        xhr.onload = (ev)=> {\n            if (xhr.status === 200) {\n                reqHandlerLoadITP(xhr);\n                resolve(); // Resuelve la promesa cuando la solicitud ha terminado correctamente\n            } else {\n                rejectAnswer(xhr);\n                reject('Error al cargar la información'); // Rechaza la promesa en caso de error\n            }\n        }\n\n        xhr.onerror = ()=> {\n            rejectAnswer(xhr);\n            reject('Error de red al cargar la información'); // Rechaza la promesa en caso de error de red\n        }\n    });\n    \n}\n\nconst reqHandlerLoadITP = (xhr) => {\n    if(xhr.status == 200){\n        let response = JSON.parse(xhr.responseText);\n        \n        if(response.errorcode){\n            displayException(response.message);\n        }else{\n            Templates.render('block_itp/itp', response).then((html,js) => {\n                const content=document.querySelector('.itp');\n                content.innerHTML=\"\";\n                Templates.appendNodeContents('.itp',html,js);\n\n                const token = document.querySelector('input[name=\"token\"]').value;\n                const email = document.querySelector('input[name=\"email\"]').value;\n                const compacted = document.querySelector('#id_compacted').value;\n                const orderby = document.querySelector('input[name=\"orderby\"]');\n                const order = document.querySelector('input[name=\"order\"]');\n                \n                //Definir el evento para el cambio de orden justo después de renderizar la tabla\n                document.querySelectorAll('thead a').forEach((element) => {\n                    element.addEventListener('click', (ev) => {\n                        ev.preventDefault();\n                        if (ev.target.dataset.activo==='activo'){\n                            if (order.value === '1'){\n                                order.value = '0';\n                            }else{\n                                order.value = '1';\n                            }\n                        } else {\n                            orderby.value = ev.target.dataset.orderby;\n                            order.value = '1';\n                        }\n                        loadITPDataFromServer(token, email, orderby.value, order.value, compacted);\n                    });\n                });\n\n                //Definir el evento para mostrar el assessment\n                const linkass=document.querySelectorAll('.linkass');\n\n                linkass.forEach((link)=>{\n                    link.addEventListener('click',showAssessmentList);\n                });\n\n\n                //Definir el evento para mostrar el attendance\n                const linkatt=document.querySelectorAll('.linkatt');\n\n                linkatt.forEach((link)=>{\n                    link.addEventListener('click',showAttendanceList);\n                });\n\n                // Emitir evento personalizado después de actualizar los datos\n                const event = new CustomEvent('itpDataUpdated');\n                document.dispatchEvent(event);\n                \n            });\n        }\n    }else{\n        displayException('Error al cargar la información');\n    }\n}\n\nconst rejectAnswer = (xhr) => {\n    displayException('Error al cargar la información');\n}\n\n// Función para verificar que todos los elementos seleccionados estén cargados\nconst areElementsLoaded = (selector) => {\n    return new Promise((resolve) => {\n        const checkElements = () => {\n            const elements = document.querySelectorAll(selector);\n            if (elements.length > 0 && Array.from(elements).every(elem => elem !== null)) {\n                resolve(elements);\n            } else {\n                requestAnimationFrame(checkElements);\n            }\n        };\n        checkElements();\n    });\n};\n\n\nconst showAssessmentList = (ev) => {\n    ev.preventDefault();\n    const courseid=ev.target.dataset.courseid;\n    const token = document.querySelector('input[name=\"token\"]').value;\n    const email = document.querySelector('input[name=\"email\"]').value;\n    const xhr = new XMLHttpRequest();\n    const formData= new FormData();\n    formData.append('wstoken',token);\n    formData.append('wsfunction','block_itp_get_assessment_details');\n    formData.append('moodlewsrestformat','json');\n    formData.append('params[0][courseid]',courseid);\n    formData.append('params[0][email]',email);\n    xhr.open('POST',url,true);\n    \n    xhr.send(formData);\n    xhr.onload = (event) =>{\n        onLoadAssessmentFunction(xhr);\n        };\n    xhr.onprogress = (event)=>{\n        onProgressFunction(event);\n    } \n    xhr.onerror = function() {\n        window.console.log(\"Solicitud fallida\");\n    };\n    \n}\n\nconst showAttendanceList = (ev) => {\n    ev.preventDefault();\n    const courseid=ev.target.dataset.courseid;\n    const token = document.querySelector('input[name=\"token\"]').value;\n    const email = document.querySelector('input[name=\"email\"]').value;\n    const startdate=ev.target.dataset.startdate;\n    const enddate=ev.target.dataset.enddate;\n    const xhr = new XMLHttpRequest();\n    const formData= new FormData();\n    formData.append('wstoken',token);\n    formData.append('wsfunction','block_itp_get_daily_attendance');\n    formData.append('moodlewsrestformat','json');\n    formData.append('params[0][courseid]',courseid);\n    formData.append('params[0][email]',email);\n    formData.append('params[0][startdate]',startdate);\n    formData.append('params[0][enddate]',enddate);\n    xhr.open('POST',url,true);\n    \n    xhr.send(formData);\n    xhr.onload = (event) =>{\n        onLoadAttendanceFunction(xhr);\n        };\n    xhr.onprogress = (event)=>{\n        onProgressFunction(event);\n    } \n    xhr.onerror = function() {\n        window.console.log(\"Solicitud fallida\");\n    };\n    \n}\n\nconst onLoadAttendanceFunction = (xhr) => {\n    if(xhr.status == 200 || xhr.readyState == 4){\n        let response = JSON.parse(xhr.responseText);\n       \n        if(response.errorcode){\n            displayException(response.message);\n        }else{\n            \n            Templates.render('block_itp/attendance', response).then((html) => {\n                document.querySelector('.itp').innerHTML = html;\n\n                //Definir el evento del botón de retroceso\n                let boback=document.querySelector('.back');\n                boback.addEventListener('click',(e)=>{\n                    e.preventDefault();\n                    //Se obtienen los valores de los campos necesarios\n                    const token = document.querySelector('input[name=\"token\"]').value;\n                    const email = document.querySelector('input[name=\"email\"]').value;\n                    const compacted = document.querySelector('#id_compacted').value;\n                    const orderby = document.querySelector('input[name=\"orderby\"]').value;\n                    const order = document.querySelector('input[name=\"order\"]').value;\n\n                    // Continuar con la carga de datos\n                    loadITPDataFromServer(token, email, orderby, order, compacted);\n                });\n            });\n\n            \n        }\n    }else{\n        displayException('Error al cargar la información');\n    }\n}\n\nconst onLoadAssessmentFunction = (xhr) => {\n    if(xhr.status == 200 || xhr.readyState == 4){\n        let response = JSON.parse(xhr.responseText);\n       \n        if(response.errorcode){\n            displayException(response.message);\n        }else{\n            \n            Templates.render('block_itp/assessment', response).then((html) => {\n                document.querySelector('.itp').innerHTML = html;\n\n                //Definir el evento del botón de retroceso\n                let boback=document.querySelector('.back');\n                boback.addEventListener('click',(e)=>{\n                    e.preventDefault();\n                    //Se obtienen los valores de los campos necesarios\n                    const token = document.querySelector('input[name=\"token\"]').value;\n                    const email = document.querySelector('input[name=\"email\"]').value;\n                    const compacted = document.querySelector('#id_compacted').value;\n                    const orderby = document.querySelector('input[name=\"orderby\"]').value;\n                    const order = document.querySelector('input[name=\"order\"]').value;\n\n                    // Continuar con la carga de datos\n                    loadITPDataFromServer(token, email, orderby, order, compacted);\n                });\n            });\n\n            \n        }\n    }else{\n        displayException('Error al cargar la información');\n    }\n}\n\nconst onProgressFunction= (event)=>{\n    if (event.lengthComputable) {\n      window.console.log(`Recibidos ${event.loaded} de ${event.total} bytes`);\n    } else {\n      window.console.log(`Recibidos ${event.loaded} bytes`); // sin Content-Length\n    }\n}"],"names":["url","M","cfg","wwwroot","areElementsLoaded","then","elements","token","document","querySelector","value","email","compacted","orderby","order","loadITPDataFromServer","addEventListener","ev","target","Promise","resolve","reject","xhr","XMLHttpRequest","formData","FormData","append","open","send","onload","status","reqHandlerLoadITP","rejectAnswer","onerror","response","JSON","parse","responseText","errorcode","message","render","html","js","innerHTML","appendNodeContents","querySelectorAll","forEach","element","preventDefault","dataset","activo","link","showAssessmentList","showAttendanceList","event","CustomEvent","dispatchEvent","selector","checkElements","length","Array","from","every","elem","requestAnimationFrame","courseid","onLoadAssessmentFunction","onprogress","onProgressFunction","window","console","log","startdate","enddate","onLoadAttendanceFunction","readyState","e","lengthComputable","loaded","total"],"mappings":"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"}